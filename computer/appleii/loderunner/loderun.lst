zeropg:0000             ;
zeropg:0000             ; +-------------------------------------------------------------------------+
zeropg:0000             ; |                 Apple II Lode Runner Disassembly v1.02                  |
zeropg:0000             ; |                     - by tcdev (msmcdoug@gmail.com)                     |
zeropg:0000             ; +-------------------------------------------------------------------------+
zeropg:0000             ;
zeropg:0000             ; File Name   : LODERUN.ROM
zeropg:0000             ; Format      : Binary File
zeropg:0000             ; Base Address: 0000h Range: 4000h - C000h Loaded length: 8000h
zeropg:0000
zeropg:0000             ; ; Processor:        M65C02
zeropg:0000             ; ; Target assembler: Table Driven Assembler (TASM) by Speech Technology Inc.
zeropg:0000
zeropg:0000             ; ===========================================================================
zeropg:0000
zeropg:0000             ; Segment type: Regular
zeropg:0000                                     ;.segment zeropg
zeropg:0000 64          current_col:            .db 64h
zeropg:0001 76          current_row:            .db 76h
zeropg:0002 00          x_offset_within_tile:   .db 0                           ; 0..4
zeropg:0003 00          y_offset_within_tile:   .db 0                           ; 0..4
zeropg:0004 00          sprite_index:           .db 0
zeropg:0005 00          dir:                    .db 0
zeropg:0006 00          lsb_row_lda_dyn:        .db 0
zeropg:0007 00          msb_row_lda_dyn:        .db 0
zeropg:0008 60          lsb_row_lda_static:     .db 60h
zeropg:0009 00          msb_row_lda_static:     .db 0
zeropg:000A 18 00       word_A:                 .dw 18h                         ; base ptr for indirect indexed addressing
zeropg:000C 00          lsb_line_addr_pg1:      .db 0                           ; lsb of line address
zeropg:000D 00          msb_line_addr_pg1:      .db 0                           ; msb of line address
zeropg:000E 00          lsb_line_addr_pg2:      .db 0
zeropg:000F 00          msb_line_addr_pg2:      .db 0
zeropg:0010 00 00       msg_addr:               .dw 0
zeropg:0012 00          curr_guard_col:         .db 0
zeropg:0013 00          curr_guard_row:         .db 0
zeropg:0014 00          curr_guard_sprite:      .db 0
zeropg:0015 00          curr_guard_dir:         .db 0
zeropg:0016 00          curr_guard_state:       .db 0
zeropg:0017 00          curr_guard_x_offset:    .db 0
zeropg:0018 00          curr_guard_y_offset:    .db 0
zeropg:0019 00          curr_guard:             .db 0
zeropg:001A 00          nibble_cnt:             .db 0
zeropg:001B 00          scanline:               .db 0
zeropg:001C 00          col_addr_offset:        .db 0
zeropg:001D 00          scanline_cnt:           .db 0
zeropg:001E 00          msg_char:               .db 0
zeropg:001F 00          hires_page_msb_1:       .db 0
zeropg:0020 00          unk_20:                 .db    0
zeropg:0021 28                                  .db  28h ; (
zeropg:0022 00                                  .db    0
zeropg:0023 4C          unk_23:                 .db  4Ch ; L
zeropg:0024 00          unk_24:                 .db    0
zeropg:0025 00          unk_25:                 .db    0
zeropg:0026 0E                                  .db 0Eh
zeropg:0027 18                                  .db 18h
zeropg:0028 00                                  .db    0
zeropg:0029 04                                  .db    4
zeropg:002A 00                                  .db 0
zeropg:002B 60                                  .db 60h
zeropg:002C 00                                  .db    0
zeropg:002D 00                                  .db 0
zeropg:002E 00                                  .db 0
zeropg:002F 00                                  .db 0
zeropg:0030 00          unk_30:                 .db    0
zeropg:0031 00                                  .db    0
zeropg:0032 FF                                  .db 0FFh
zeropg:0033 00                                  .db    0
zeropg:0034 00                                  .db    0
zeropg:0035 00                                  .db 0
zeropg:0036 50 8E       off_36:                 .dw loc_8E50
zeropg:0038 B5          byte_38:                .db 0B5h
zeropg:0039 B7          unk_39:                 .db 0B7h ; ·
zeropg:003A 00                                  .db    0
zeropg:003B 00                                  .db    0
zeropg:003C FF                                  .db 0FFh
zeropg:003D 05                                  .db    5
zeropg:003E 00                                  .db 0
zeropg:003F 00                                  .db 0
zeropg:0040 00                                  .db    0
zeropg:0041 18                                  .db 18h
zeropg:0042 00                                  .db    0
zeropg:0043 00                                  .db    0
zeropg:0044 00                                  .db 0
zeropg:0045 00          unk_45:                 .db    0
zeropg:0046 00                                  .db 0
zeropg:0047 00                                  .db 0
zeropg:0048 00                                  .db 0
zeropg:0049 00                                  .db 0
zeropg:004A 00                                  .db    0
zeropg:004B 00                                  .db    0
zeropg:004C 00                                  .db    0
zeropg:004D 00                                  .db    0
zeropg:004E 00                                  .db    0
zeropg:004F 00                                  .db 0
zeropg:0050 00          lchar_mask:             .db 0
zeropg:0051 00          rchar_mask:             .db 0
zeropg:0052 00          collision_detect:       .db 0
zeropg:0053 00          guard_respawn_col:      .db 0
zeropg:0054 00          sndq_length:            .db 0
zeropg:0055 00          guard_ai_col:           .db 0
zeropg:0056 00          guard_ai_row:           .db 0
zeropg:0057 00          target_col:             .db 0
zeropg:0058 00          guard_ai_dir:           .db 0
zeropg:0059 00          guard_ai_best_delta:    .db 0
zeropg:005A 00          farthest_left:          .db 0
zeropg:005B 00          farthest_right:         .db 0
zeropg:005C 00          farthest_updown_plyr_row:.db 0
zeropg:005D 00          byte_5D:                .db 0
zeropg:005E 00          byte_5E:                .db 0
zeropg:005F 00          guard_trap_cnt_init:    .db 0
zeropg:0060 00          byte_60:                .db 0
zeropg:0061 00          byte_61:                .db 0
zeropg:0062 00          byte_62:                .db 0
zeropg:0063 00          byte_63:                .db 0
zeropg:0064 00          byte_64:                .db 0
zeropg:0065 00          joy_x:                  .db 0
zeropg:0066 00          joy_y:                  .db 0
zeropg:0067 00          unk_67:                 .db    0
zeropg:0068 00          unk_68:                 .db    0
zeropg:0069 00          byte_69:                .db 0
zeropg:006A 00          unk_6A:                 .db    0
zeropg:006B 00          unk_6B:                 .db    0
zeropg:006C 00          unk_6C:                 .db    0
zeropg:006D 00          unk_6D:                 .db    0
zeropg:006E 00                                  .db    0
zeropg:006F 00          unk_6F:                 .db    0
zeropg:0070 00          unk_70:                 .db    0
zeropg:0071 00          col_pixel_shift:        .db 0
zeropg:0072 00          drawing:                .db 0
zeropg:0073 00          unk_73:                 .db    0
zeropg:0074 00          unk_74:                 .db    0
zeropg:0075 00                                  .db 0
zeropg:0076 00          unk_76:                 .db    0
zeropg:0077 00          unk_77:                 .db    0
zeropg:0078 00          unk_78:                 .db    0
zeropg:0079 00          unk_79:                 .db    0
zeropg:007A 00          unk_7A:                 .db    0
zeropg:007B 00          unk_7B:                 .db    0
zeropg:007C 00          unk_7C:                 .db    0
zeropg:007D 00          unk_7D:                 .db    0
zeropg:007E 00          unk_7E:                 .db    0
zeropg:007F 00          unk_7F:                 .db    0
zeropg:0080 00          unk_80:                 .db    0
zeropg:0081 00                                  .db 0
zeropg:0082 00          unk_82:                 .db    0
zeropg:0083 00          unk_83:                 .db    0
zeropg:0084 00          unk_84:                 .db    0
zeropg:0085 00          col:                    .db 0
zeropg:0086 00          row:                    .db 0
zeropg:0087 00          display_char_page:      .db 0
zeropg:0088 00          hole_no:                .db 0
zeropg:0089 00          hundreds:               .db 0                           ; hundreds?
zeropg:008A 00          tens:                   .db 0                           ; tens
zeropg:008B 00          units:                  .db 0                           ; units?
zeropg:008C 06          game_speed:             .db 6
zeropg:008D 00          no_guards:              .db 0
zeropg:008E 00          score_1e1_1:            .db 0
zeropg:008F 00          score_1e3_1e2:          .db 0
zeropg:0090 00          score_1e5_1e4:          .db 0
zeropg:0091 00          score_1e6:              .db 0
zeropg:0092 00          packed_byte_cnt:        .db 0
zeropg:0093 00          no_gold:                .db 0
zeropg:0094 00          enable_collision_detect:.db 0
zeropg:0095 CA          paddles_detected:       .db 0CAh
zeropg:0096 00          level_0_based:          .db 0
zeropg:0097 00          unused_97:              .db 0
zeropg:0098 00          no_lives:               .db 0
zeropg:0099 FF          sound_enabled:          .db 0FFh
zeropg:009A 00          level_active:           .db 0
zeropg:009B 00          not_falling:            .db 0
zeropg:009C 00          dig_dir:                .db 0
zeropg:009D 00          no_cheat:               .db 0
zeropg:009E 00          key_1:                  .db 0
zeropg:009F 00          key_2:                  .db 0
zeropg:00A0 00          dig_sprite:             .db 0
zeropg:00A1 00          timer:                  .db 0
zeropg:00A2 00          editor_n:               .db 0
zeropg:00A3 00          no_eos_ladder_tiles:    .db 0
zeropg:00A4 00          falling_snd_freq:       .db 0
zeropg:00A5 00          wipe_next_time:         .db 0
zeropg:00A6 00          level:                  .db 0
zeropg:00A7 00          attract_mode:           .db 0
zeropg:00A8 00          lsb_demo_inp_ptr:       .db 0
zeropg:00A9 00          msb_demo_inp_ptr:       .db 0
zeropg:00AA 00          demo_inp_key_1_2:       .db 0
zeropg:00AB 00          demo_inp_cnt:           .db 0
zeropg:00AC 00          demo_not_interrupted:   .db 0
zeropg:00AD 00                                  .db 0
zeropg:00AE 00                                  .db    0
zeropg:00AF 00                                  .db    0
zeropg:00B0 00                                  .db    0
zeropg:00B1 00                                  .db    0
zeropg:00B2 00                                  .db    0
zeropg:00B3 00                                  .db    0
zeropg:00B4 00                                  .db    0
zeropg:00B5 00                                  .db    0
zeropg:00B6 00                                  .db    0
zeropg:00B7 00                                  .db 0
zeropg:00B8 00                                  .db    0
zeropg:00B9 00                                  .db    0
zeropg:00BA 00                                  .db    0
zeropg:00BB 00                                  .db    0
zeropg:00BC 00                                  .db    0
zeropg:00BD 00                                  .db    0
zeropg:00BE 00                                  .db    0
zeropg:00BF 00                                  .db    0
zeropg:00C0 00                                  .db    0
zeropg:00C1 00                                  .db    0
zeropg:00C2 00                                  .db    0
zeropg:00C3 00                                  .db    0
zeropg:00C4 00                                  .db    0
zeropg:00C5 00                                  .db    0
zeropg:00C6 00                                  .db    0
zeropg:00C7 00                                  .db    0
zeropg:00C8 00                                  .db    0
zeropg:00C9 00                                  .db    0
zeropg:00CA 00                                  .db    0
zeropg:00CB 00                                  .db    0
zeropg:00CC 00                                  .db    0
zeropg:00CD 00                                  .db    0
zeropg:00CE 00                                  .db    0
zeropg:00CF 00                                  .db    0
zeropg:00D0 00                                  .db    0
zeropg:00D1 00                                  .db    0
zeropg:00D2 00                                  .db    0
zeropg:00D3 00                                  .db    0
zeropg:00D4 00                                  .db    0
zeropg:00D5 00                                  .db    0
zeropg:00D6 00                                  .db    0
zeropg:00D7 00                                  .db    0
zeropg:00D8 00                                  .db    0
zeropg:00D9 00                                  .db    0
zeropg:00DA 00                                  .db    0
zeropg:00DB 00                                  .db    0
zeropg:00DC 00                                  .db    0
zeropg:00DD 00                                  .db    0
zeropg:00DE 00                                  .db    0
zeropg:00DF 00 00 00    char_render_buf:        .db 0, 0, 0                     ; 3 bytes per scanline
zeropg:00DF                                                                     ; 11 scanlines per char
zeropg:00E2 00 00 00                            .db 0, 0, 0
zeropg:00E5 00 00 00                            .db 0, 0, 0
zeropg:00E8 00 00 00                            .db 0, 0, 0
zeropg:00EB 00 00 00                            .db 0, 0, 0
zeropg:00EE 00 00 00                            .db 0, 0, 0
zeropg:00F1 00 00 00                            .db 0, 0, 0
zeropg:00F4 00 00 00                            .db 0, 0, 0
zeropg:00F7 00 00 FF                            .db 0, 0, 0FFh
zeropg:00FA B0 13 00                            .db 0B0h, 13h, 0
zeropg:00FD FF 00 BD    byte_FD:                .db 0FFh, 0, 0BDh
zeropg:00FD             ; end of 'zeropg'
zeropg:00FD
c00:0C00             ; ===========================================================================
c00:0C00
c00:0C00             ; Segment type: Regular
c00:0C00                                     ;.segment c00
c00:0C00                                     .org 0C00h
c00:0C00 ?? ?? ?? ??+eos_ladder_col:         .block 30h
c00:0C30 ?? ?? ?? ??+eos_ladder_row:         .block 30h
c00:0C60 ?? ?? ?? ??+guard_col:              .block 8
c00:0C68 ?? ?? ?? ??+guard_row:              .block 8
c00:0C70 ?? ?? ?? ??+guard_state:            .block 8                        ; -ve = carrying gold
c00:0C70 ?? ?? ?? ??                                                         ; 7-12 = wriggling to escape hole
c00:0C78 ?? ?? ?? ??+guard_x_offset:         .block 8
c00:0C80 ?? ?? ?? ??+guard_y_offset:         .block 8
c00:0C88 ?? ?? ?? ??+guard_sprite:           .block 8
c00:0C90 ?? ?? ?? ??+guard_dir:              .block 8
c00:0C98 ?? ?? ?? ??+guard_cnt:              .block 8
c00:0CA0 ?? ?? ?? ??+hole_col:               .block 20h
c00:0CC0 ?? ?? ?? ??+hole_row:               .block 20h
c00:0CE0 ?? ?? ?? ??+hole_cnt:               .block 20h
c00:0CE0 ?? ?? ?? ??+; end of 'c00'
c00:0CE0 ?? ?? ?? ??+
e00:0E00             ; ===========================================================================
e00:0E00
e00:0E00             ; Segment type: Regular
e00:0E00                                     ;.segment e00
e00:0E00                                     .org 0E00h
e00:0E00 ?? ?? ?? ??+snddur:                 .block 80h
e00:0E80 ?? ?? ?? ??+sndfreq:                .block 80h
e00:0E80 ?? ?? ?? ??+; end of 'e00'
e00:0E80 ?? ?? ?? ??+
data:0F00             ; ===========================================================================
data:0F00
data:0F00             ; Segment type: Regular
data:0F00                                     ;.segment data
data:0F00                                     .org 0F00h
data:0F00 12 85 18 85+title_screen:           .db 12h, 85h, 18h, 85h, 1Ch, 94h, 23h, 0A8h, 0, 11h, 0A0h ; >0 line x offset in bytes
data:0F00 1C 94 23 A8+                        .db 95h, 18h, 85h, 1Ch, 94h, 23h, 0A8h, 0, 11h, 0A0h, 95h ; <0 graphic byte data
data:0F00 00 11 A0 95+                        .db 18h, 85h, 1Ch, 94h, 23h, 0A8h, 0, 11h, 0A8h, 0D0h, 18h ; =0 end of line
data:0F00 18 85 1C 94+                        .db 85h, 1Ch, 94h, 23h, 0A8h, 0, 6, 94h, 0Ch, 85h, 11h, 0A8h
data:0F00 23 A8 00 11+                        .db 0D0h, 18h, 85h, 1Ch, 94h, 23h, 0A8h, 0, 6, 94h, 0Ch
data:0F00 A0 95 18 85+                        .db 85h, 11h, 0A8h, 0D0h, 18h, 85h, 1Ch, 94h, 23h, 0A8h
data:0F00 1C 94 23 A8+                        .db 0, 6, 94h, 0Ch, 85h, 11h, 0A8h, 0D0h, 18h, 85h, 1Ch
data:0F00 00 11 A8 D0+                        .db 94h, 23h, 0A8h, 0, 4, 84h, 0A0h, 0D5h, 82h, 90h, 80h
data:0F00 18 85 1C 94+                        .db 81h, 0A8h, 0D5h, 80h, 84h, 11h, 0A8h, 0D0h, 18h, 85h
data:0F00 23 A8 00 06+                        .db 1Ch, 94h, 23h, 0A8h, 0, 4, 94h, 0A0h, 0D5h, 82h, 94h
data:0F00 94 0C 85 11+                        .db 80h, 85h, 0A8h, 0D5h, 80h, 85h, 11h, 0A8h, 94h, 18h
data:0F00 A8 D0 18 85+                        .db 85h, 1Ch, 94h, 23h, 0A8h, 0, 4, 0D5h, 0A0h, 0D5h, 82h
data:0F00 1C 94 23 A8+                        .db 0D5h, 0A0h, 95h, 0A8h, 0D5h, 0A0h, 95h, 11h, 0A8h, 95h
data:0F00 00 06 94 0C+                        .db 80h, 85h, 0A8h, 80h, 0A8h, 85h, 0A8h, 80h, 0A8h, 0D4h
data:0F00 85 11 A8 D0+                        .db 82h, 94h, 0A8h, 0C0h, 82h, 0C0h, 0AAh, 0, 4, 0D5h, 82h
data:0F00 18 85 1C 94+                        .db 94h, 0A0h, 0D5h, 0A0h, 0D5h, 80h, 85h, 0A8h, 95h, 11h
data:0F00 23 A8 00 06+                        .db 0A8h, 95h, 0A0h, 85h, 0AAh, 81h, 0AAh, 85h, 0AAh, 81h
data:0F00 94 0C 85 11+                        .db 0AAh, 0D4h, 8Ah, 94h, 0A8h, 0D0h, 8Ah, 0D0h, 0AAh, 0
data:0F00 A8 D0 18 85+                        .db 4, 0D5h, 8Ah, 94h, 0A8h, 0D5h, 0A0h, 0D5h, 82h, 85h
data:0F00 1C 94 23 A8+                        .db 0AAh, 95h, 11h, 0A8h, 95h, 0A0h, 85h, 0AAh, 80h, 0AAh
data:0F00 00 04 84 A0+                        .db 85h, 0AAh, 81h, 0AAh, 0D4h, 8Ah, 94h, 0A8h, 0D0h, 8Ah
data:0F00 D5 82 90 80+                        .db 0D0h, 0AAh, 0, 4, 94h, 0AAh, 94h, 0AAh, 94h, 80h, 0C5h
data:0F00 81 A8 D5 80+                        .db 8Ah, 0C5h, 8Ah, 85h, 11h, 0A8h, 0D4h, 0A8h, 0C1h, 8Ah
data:0F00 84 11 A8 D0+                        .db 0C4h, 82h, 0C5h, 82h, 0C5h, 8Ah, 94h, 0A8h, 94h, 0A8h
data:0F00 18 85 1C 94+                        .db 94h, 0A8h, 94h, 0A8h, 0, 4, 94h, 0A8h, 0D5h, 8Ah, 94h
data:0F00 23 A8 00 04+                        .db 80h, 85h, 0AAh, 0D5h, 82h, 85h, 11h, 0A8h, 0D0h, 0A8h
data:0F00 94 A0 D5 82+                        .db 0C0h, 82h, 0C5h, 82h, 0C5h, 82h, 0C5h, 82h, 94h, 0A8h
data:0F00 94 80 85 A8+                        .db 94h, 0A8h, 94h, 0A8h, 94h, 0A8h, 0, 4, 90h, 0A0h, 0D5h
data:0F00 D5 80 85 11+                        .db 82h, 94h, 80h, 85h, 0A8h, 0D5h, 80h, 85h, 11h, 0A8h
data:0F00 A8 94 18 85+                        .db 0D0h, 0A8h, 0C0h, 82h, 0C5h, 82h, 0C5h, 82h, 0C5h, 82h
data:0F00 1C 94 23 A8+                        .db 94h, 0A8h, 94h, 0A8h, 94h, 0A8h, 94h, 0A8h, 0, 4, 0D0h
data:0F00 00 04 D5 A0+                        .db 80h, 0D5h, 80h, 85h, 80h, 94h, 0A0h, 95h, 0A0h, 81h
data:0F00 D5 82 D5 A0+                        .db 11h, 0A8h, 0D0h, 0A8h, 0C0h, 82h, 0C5h, 82h, 0C5h, 0AAh
data:0F00 95 A8 D5 A0+                        .db 0C1h, 82h, 94h, 0A8h, 94h, 0A8h, 94h, 0A8h, 94h, 0A8h
data:0F00 95 11 A8 95+                        .db 0, 4, 0D0h, 8, 85h, 80h, 94h, 0Dh, 0A0h, 81h, 11h, 0A8h
data:0F00 80 85 A8 80+                        .db 0D0h, 0A8h, 0C0h, 82h, 0C5h, 82h, 0C5h, 0AAh, 0C1h, 82h
data:0F00 A8 85 A8 80+                        .db 94h, 0A8h, 94h, 0A8h, 94h, 0A8h, 94h, 0A8h, 0, 4, 0D0h
data:0F00 A8 D4 82 94+                        .db 8, 85h, 80h, 94h, 0Dh, 0A0h, 81h, 11h, 0A8h, 0D0h, 0A8h
data:0F00 A8 C0 82 C0+                        .db 0C0h, 82h, 0C5h, 82h, 0C5h, 0AAh, 0C0h, 82h, 94h, 0A8h
data:0F00 AA 00 04 D5+                        .db 94h, 0A8h, 94h, 0A8h, 94h, 0A8h, 0, 4, 0D0h, 8, 85h
data:0F00 82 94 A0 D5+                        .db 80h, 94h, 0Dh, 0A0h, 81h, 11h, 0A8h, 0D0h, 0A8h, 0C0h
data:0F00 A0 D5 80 85+                        .db 82h, 0C5h, 82h, 0C5h, 82h, 0C0h, 82h, 94h, 0A8h, 94h
data:0F00 A8 95 11 A8+                        .db 0A8h, 94h, 0A8h, 94h, 0A8h, 0, 4, 0D0h, 8, 85h, 8Ah
data:0F00 95 A0 85 AA+                        .db 94h, 0Dh, 0A0h, 81h, 11h, 0A8h, 0D0h, 0A8h, 0C0h, 80h
data:0F00 81 AA 85 AA+                        .db 0C5h, 82h, 0C5h, 82h, 0C4h, 82h, 94h, 0A8h, 94h, 0A8h
data:0F00 81 AA D4 8A+                        .db 94h, 0A8h, 94h, 0A8h, 0, 4, 0C0h, 82h, 80h, 0A0h, 81h
data:0F00 94 A8 D0 8A+                        .db 8Ah, 0D0h, 0Dh, 0A8h, 11h, 0A8h, 0D0h, 0A8h, 80h, 80h
data:0F00 D0 AA 00 04+                        .db 0C5h, 82h, 0C5h, 82h, 0C5h, 82h, 94h, 0A8h, 94h, 0A8h
data:0F00 D5 8A 94 A8+                        .db 94h, 0A8h, 94h, 0A8h, 0, 4, 0C0h, 82h, 80h, 0A0h, 81h
data:0F00 D5 A0 D5 82+                        .db 8Ah, 0D0h, 0Dh, 0A8h, 11h, 0A8h, 95h, 0A8h, 80h, 0AAh
data:0F00 85 AA 95 11+                        .db 81h, 0AAh, 81h, 0AAh, 0C1h, 82h, 0D0h, 8Ah, 0D0h, 8Ah
data:0F00 A8 95 A0 85+                        .db 94h, 0A8h, 0D0h, 8Ah, 0, 4, 0C0h, 82h, 80h, 0A0h, 0D1h
data:0F00 AA 80 AA 85+                        .db 0AAh, 0D1h, 0Dh, 0A8h, 11h, 0A8h, 95h, 0A8h, 80h, 0AAh
data:0F00 AA 81 AA D4+                        .db 81h, 0AAh, 81h, 0AAh, 0C1h, 82h, 0D0h, 8Ah, 0D0h, 8Ah
data:0F00 8A 94 A8 D0+                        .db 94h, 0A8h, 0D0h, 8Ah, 0, 4, 0C0h, 82h, 80h, 0A0h, 0D1h
data:0F00 8A D0 AA 00+                        .db 0AAh, 0D1h, 0Dh, 0A8h, 11h, 0A8h, 85h, 0A8h, 80h, 0A8h
data:0F00 04 94 AA 94+                        .db 80h, 0A8h, 80h, 0A8h, 0C0h, 82h, 0C0h, 82h, 0C0h, 82h
data:0F00 AA 94 80 C5+                        .db 94h, 0A8h, 0C0h, 82h, 0, 5, 0AAh, 0D5h, 0A2h, 0D1h, 0AAh
data:0F00 8A C5 8A 85+                        .db 0D1h, 0A8h, 0D5h, 8Ah, 0, 5, 0AAh, 0D5h, 82h, 81h, 8Ah
data:0F00 11 A8 D4 A8+                        .db 90h, 0A8h, 0D5h, 8Ah, 0, 5, 0AAh, 0D5h, 82h, 85h, 8Ah
data:0F00 C1 8A C4 82+                        .db 94h, 0A8h, 0D5h, 8Ah, 0, 7, 8Ah, 95h, 8Ah, 95h, 8Ah
data:0F00 C5 82 C5 8A+                        .db 13h, 0A0h, 85h, 17h, 0A0h, 81h, 0, 7, 8Ah, 0D4h, 0AAh
data:0F00 94 A8 94 A8+                        .db 85h, 8Ah, 13h, 0A8h, 85h, 17h, 0A8h, 81h, 0, 7, 8Ah
data:0F00 94 A8 94 A8+                        .db 0D0h, 0AAh, 81h, 8Ah, 13h, 0A8h, 85h, 17h, 0A8h, 0D1h
data:0F00 00 04 94 A8+                        .db 0, 7, 0A8h, 0C0h, 0AAh, 0C0h, 82h, 13h, 0AAh, 17h, 0AAh
data:0F00 D5 8A 94 80+                        .db 0D0h, 0, 7, 0A8h, 0Ah, 0C0h, 82h, 13h, 8Ah, 17h, 8Ah
data:0F00 85 AA D5 82+                        .db 0D0h, 0, 7, 0A8h, 0Ah, 0C0h, 82h, 13h, 8Ah, 17h, 8Ah
data:0F00 85 11 A8 D0+                        .db 0D0h, 0, 7, 0A8h, 0Ah, 0C0h, 82h, 13h, 8Ah, 17h, 8Ah
data:0F00 A8 C0 82 C5+                        .db 0D0h, 0, 7, 0A8h, 0Ah, 0C0h, 82h, 13h, 8Ah, 17h, 8Ah
data:0F00 82 C5 82 C5+                        .db 0D0h, 0, 7, 0A0h, 81h, 80h, 0D0h, 13h, 8Ah, 17h, 8Ah
data:0F00 82 94 A8 94+                        .db 0D0h, 0, 7, 0A0h, 81h, 80h, 0D0h, 13h, 0A8h, 80h, 0A8h
data:0F00 A8 94 A8 94+                        .db 0C0h, 0AAh, 0D4h, 82h, 85h, 8Ah, 94h, 0A0h, 81h, 0A0h
data:0F00 A8 00 04 90+                        .db 0C1h, 8Ah, 0, 7, 0A0h, 81h, 80h, 0D0h, 13h, 0A8h, 80h
data:0F00 A0 D5 82 94+                        .db 0AAh, 0C1h, 0AAh, 0D4h, 82h, 85h, 8Ah, 94h, 0A8h, 85h
data:0F00 80 85 A8 D5+                        .db 0A8h, 0C1h, 0AAh, 0, 7, 0A0h, 81h, 80h, 0D0h, 13h, 0A8h
data:0F00 80 85 11 A8+                        .db 80h, 0AAh, 0C1h, 0AAh, 0D4h, 82h, 85h, 8Ah, 94h, 0A8h
data:0F00 D0 A8 C0 82+                        .db 85h, 0A8h, 0D1h, 0AAh, 0, 8, 0D5h, 0AAh, 95h, 13h, 0A8h
data:0F00 C5 82 C5 82+                        .db 0C1h, 82h, 85h, 8Ah, 0D0h, 80h, 85h, 8Ah, 94h, 8Ah, 94h
data:0F00 C5 82 94 A8+                        .db 0AAh, 0D0h, 0A0h, 81h, 0, 8, 0D5h, 0AAh, 95h, 13h, 0A0h
data:0F00 94 A8 94 A8+                        .db 0C1h, 82h, 85h, 8Ah, 0D0h, 80h, 85h, 8Ah, 94h, 82h, 94h
data:0F00 94 A8 00 04+                        .db 8Ah, 0D0h, 0A0h, 81h, 0, 8, 0D5h, 0AAh, 95h, 13h, 0A0h
data:0F00 D0 80 D5 80+                        .db 0C5h, 82h, 85h, 8Ah, 0D0h, 80h, 85h, 8Ah, 94h, 80h, 94h
data:0F00 85 80 94 A0+                        .db 8Ah, 0D0h, 0A0h, 81h, 0, 14h, 0C5h, 82h, 85h, 8Ah, 0D0h
data:0F00 95 A0 81 11+                        .db 80h, 85h, 8Ah, 94h, 0A0h, 95h, 8Ah, 0D0h, 0AAh, 0, 14h
data:0F00 A8 D0 A8 C0+                        .db 0C5h, 82h, 85h, 8Ah, 0D0h, 80h, 85h, 8Ah, 94h, 0A8h
data:0F00 82 C5 82 C5+                        .db 95h, 8Ah, 0D0h, 0AAh, 0, 14h, 0C5h, 82h, 85h, 8Ah, 0D0h
data:0F00 AA C1 82 94+                        .db 80h, 85h, 8Ah, 94h, 0A8h, 95h, 8Ah, 0D0h, 8Ah, 0, 14h
data:0F00 A8 94 A8 94+                        .db 0C5h, 82h, 85h, 8Ah, 0D0h, 80h, 85h, 8Ah, 94h, 8Ah, 94h
data:0F00 A8 94 A8 00+                        .db 8Ah, 0D0h, 0, 14h, 0C5h, 82h, 85h, 8Ah, 0D0h, 80h, 85h
data:0F00 04 D0 08 85+                        .db 8Ah, 94h, 8Ah, 94h, 8Ah, 0D0h, 80h, 81h, 0, 13h, 0A0h
data:0F00 80 94 0D A0+                        .db 0C5h, 82h, 85h, 8Ah, 0D0h, 82h, 85h, 8Ah, 94h, 8Ah, 94h
data:0F00 81 11 A8 D0+                        .db 8Ah, 0D0h, 0A0h, 81h, 0, 13h, 0AAh, 81h, 0AAh, 81h, 8Ah
data:0F00 A8 C0 82 C5+                        .db 0C0h, 8Ah, 0D4h, 0AAh, 85h, 0A8h, 85h, 8Ah, 0C0h, 0AAh
data:0F00 82 C5 AA C1+                        .db 0, 13h, 0AAh, 81h, 0AAh, 81h, 8Ah, 0C0h, 8Ah, 0D4h, 0AAh
data:0F00 82 94 A8 94+                        .db 85h, 0A8h, 85h, 8Ah, 0C0h, 0AAh, 0, 13h, 0AAh, 80h, 0A8h
data:0F00 A8 94 A8 94+                        .db 80h, 8Ah, 80h, 8Ah, 0D0h, 0A0h, 81h, 0A0h, 81h, 8Ah
data:0F00 A8 00 04 D0+                        .db 80h, 8Ah, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0Dh, 0D0h
data:0F00 08 85 80 94+                        .db 8Ah, 0, 0Dh, 0D0h, 0A8h, 17h, 0C0h, 82h, 0, 0Dh, 0D0h
data:0F00 0D A0 81 11+                        .db 0A8h, 17h, 0C0h, 82h, 0, 0Dh, 0D0h, 0A8h, 0D0h, 82h
data:0F00 A8 D0 A8 C0+                        .db 95h, 0A0h, 95h, 0A8h, 81h, 0AAh, 0D0h, 8Ah, 0D4h, 82h
data:0F00 82 C5 82 C5+                        .db 0, 0Dh, 0D0h, 8Ah, 94h, 0A0h, 0D1h, 0A8h, 80h, 8Ah, 0C5h
data:0F00 AA C0 82 94+                        .db 0A2h, 0C1h, 82h, 85h, 0, 0Dh, 0D0h, 80h, 94h, 0A0h, 0D1h
data:0F00 A8 94 A8 94+                        .db 0A8h, 80h, 8Ah, 0C5h, 0A2h, 0C1h, 82h, 85h, 0, 0Dh, 0D0h
data:0F00 A8 94 A8 00+                        .db 80h, 94h, 0A0h, 95h, 0A0h, 85h, 0AAh, 0C1h, 0A2h, 0C1h
data:0F00 04 D0 08 85+                        .db 82h, 0D4h, 0, 0Dh, 0D0h, 80h, 94h, 0A0h, 81h, 80h, 94h
data:0F00 80 94 0D A0+                        .db 8Ah, 0C0h, 0A2h, 0C1h, 82h, 0C0h, 82h, 0, 0Dh, 0D0h
data:0F00 81 11 A8 D0+                        .db 80h, 94h, 0A0h, 81h, 80h, 94h, 8Ah, 0C0h, 0A2h, 0C1h
data:0F00 A8 C0 82 C5+                        .db 82h, 0C0h, 82h, 0, 0Dh, 0D0h, 80h, 94h, 80h, 95h, 0A8h
data:0F00 82 C5 82 C0+                        .db 85h, 0A8h, 0C1h, 0A2h, 81h, 8Ah, 0D5h, 0, 0, 0, 0, 0
data:0F00 82 94 A8 94+                        .db 0, 0, 0, 0, 0, 0, 0C0h, 0FFh, 9Fh, 9, 0C0h, 0FFh, 9Fh
data:0F00 A8 94 A8 94+                        .db 11h, 0FEh, 0FFh, 0FFh, 9Fh, 0, 0E0h, 0FFh, 0BFh, 9, 0E0h
data:0F00 A8 00 04 D0+                        .db 0FFh, 0BFh, 11h, 0FFh, 0FFh, 0FFh, 0BFh, 0, 80h, 0FFh
data:0F00 08 85 8A 94+                        .db 0BFh, 0Ah, 0FFh, 0BFh, 11h, 0FCh, 0FFh, 0FFh, 0BFh, 0
data:0F00 0D A0 81 11+                        .db 80h, 0FFh, 0BFh, 0Ah, 0FFh, 0BFh, 11h, 0FCh, 0FFh, 0FFh
data:0F00 A8 D0 A8 C0+                        .db 0BFh, 0, 80h, 0FFh, 0BFh, 0Ah, 0FFh, 0BFh, 11h, 0FEh
data:0F00 80 C5 82 C5+                        .db 0FFh, 0FFh, 0BFh, 0, 0C0h, 0FFh, 0BFh, 0Ah, 0FFh, 9Fh
data:0F00 82 C4 82 94+                        .db 11h, 0FEh, 0FFh, 0FFh, 0BFh, 0, 0C0h, 0FFh, 0BFh, 0Ah
data:0F00 A8 94 A8 94+                        .db 0FFh, 9Fh, 11h, 0FEh, 0FFh, 0FFh, 0BFh, 0, 0C0h, 0FFh
data:0F00 A8 94 A8 00+                        .db 9Fh, 0Ah, 0FFh, 9Fh, 11h, 0FEh, 0FFh, 0FFh, 0BFh, 0
data:0F00 04 C0 82 80+                        .db 0C0h, 0FFh, 9Fh, 80h, 0F0h, 0FFh, 0FFh, 83h, 0F8h, 0FFh
data:0F00 A0 81 8A D0+                        .db 0FFh, 9Fh, 0F8h, 0FFh, 0FFh, 80h, 80h, 0FFh, 0BFh, 0FCh
data:0F00 0D A8 11 A8+                        .db 9Fh, 0F8h, 0FFh, 0FCh, 0BFh, 0FCh, 0FFh, 0F8h, 0FFh
data:0F00 D0 A8 80 80+                        .db 0F0h, 0FFh, 0F3h, 0FFh, 80h, 0FFh, 0FFh, 9Fh, 0FEh, 9Fh
data:0F00 C5 82 C5 82+                        .db 0BEh, 0, 0C0h, 0FFh, 9Fh, 80h, 0FCh, 0FFh, 0FFh, 87h
data:0F00 C5 82 94 A8+                        .db 0FCh, 0FFh, 0FFh, 9Fh, 0FCh, 0FFh, 0FFh, 81h, 80h, 0FFh
data:0F00 94 A8 94 A8+                        .db 0BFh, 0F8h, 9Fh, 0FCh, 0FFh, 0F9h, 0FFh, 0F8h, 0FFh
data:0F00 94 A8 00 04+                        .db 0FEh, 0FFh, 0E1h, 0FFh, 0FBh, 0FFh, 0C0h, 0FFh, 0FFh
data:0F00 C0 82 80 A0+                        .db 9Fh, 0FFh, 0BFh, 0BFh, 0, 0E0h, 0FFh, 9Fh, 80h, 0FCh
data:0F00 81 8A D0 0D+                        .db 0FFh, 0FFh, 87h, 0FEh, 0FFh, 0FFh, 8Fh, 0FEh, 0FFh, 0FFh
data:0F00 A8 11 A8 95+                        .db 81h, 80h, 0FFh, 0BFh, 0F8h, 9Fh, 0F0h, 0FFh, 0F9h, 0FFh
data:0F00 A8 80 AA 81+                        .db 0F8h, 0FFh, 0FEh, 0FFh, 0E1h, 0FFh, 0FBh, 0FFh, 0E1h
data:0F00 AA 81 AA C1+                        .db 0FFh, 0FFh, 0BFh, 0FCh, 0FFh, 0BFh, 0, 0E0h, 0FFh, 9Fh
data:0F00 82 D0 8A D0+                        .db 80h, 0FEh, 0FFh, 0FFh, 87h, 0FFh, 0FFh, 0FFh, 8Fh, 0FEh
data:0F00 8A 94 A8 D0+                        .db 0FFh, 0FFh, 81h, 80h, 0FFh, 0BFh, 0F8h, 9Fh, 0F0h, 0FFh
data:0F00 8A 00 04 C0+                        .db 0F9h, 0FFh, 0F8h, 0FFh, 0FFh, 0FFh, 0E1h, 0FFh, 0FFh
data:0F00 82 80 A0 D1+                        .db 0FFh, 0E1h, 0FFh, 0FFh, 0BFh, 0FCh, 0FFh, 0BFh, 0, 0E0h
data:0F00 AA D1 0D A8+                        .db 0FFh, 8Fh, 80h, 0FEh, 0FFh, 0FFh, 87h, 0FFh, 0FFh, 0FFh
data:0F00 11 A8 95 A8+                        .db 8Fh, 0FFh, 0FFh, 0FFh, 81h, 80h, 0FFh, 9Fh, 0FCh, 9Fh
data:0F00 80 AA 81 AA+                        .db 0F0h, 0FFh, 0F8h, 0BFh, 0F8h, 0FFh, 0FFh, 0FFh, 0E1h
data:0F00 81 AA C1 82+                        .db 0FFh, 0FFh, 0FFh, 0F1h, 0FFh, 0FFh, 0BFh, 0FEh, 0FFh
data:0F00 D0 8A D0 8A+                        .db 9Fh, 0, 0E0h, 0FFh, 8Fh, 80h, 0FEh, 0FFh, 0FFh, 0C7h
data:0F00 94 A8 D0 8A+                        .db 0FFh, 0FFh, 0FFh, 8Fh, 0FFh, 0FFh, 0FFh, 81h, 0C0h, 0FFh
data:0F00 00 04 C0 82+                        .db 9Fh, 0FCh, 8Fh, 0F0h, 0FFh, 0FCh, 0BFh, 0F8h, 0FFh, 0FFh
data:0F00 80 A0 D1 AA+                        .db 0FFh, 0E1h, 0FFh, 0FFh, 0FFh, 0F0h, 0FFh, 0FFh, 0BFh
data:0F00 D1 0D A8 11+                        .db 0FEh, 0FFh, 9Fh, 0, 0F0h, 0FFh, 8Fh, 80h, 0FEh, 0FFh
data:0F00 A8 85 A8 80+                        .db 0FFh, 0C7h, 0FFh, 0FFh, 0FFh, 0C7h, 0FFh, 0FFh, 0FFh
data:0F00 A8 80 A8 80+                        .db 81h, 0C0h, 0FFh, 9Fh, 0FEh, 8Fh, 0F0h, 0FFh, 0FCh, 0BFh
data:0F00 A8 C0 82 C0+                        .db 0F8h, 0FFh, 0FFh, 0FFh, 0E1h, 0FFh, 0FFh, 0FFh, 0F0h
data:0F00 82 C0 82 94+                        .db 0FFh, 0FFh, 9Fh, 0FEh, 0FFh, 9Fh, 0, 0F0h, 0FFh, 8Fh
data:0F00 A8 C0 82 00+                        .db 80h, 0FFh, 0FFh, 0FFh, 0E7h, 0FFh, 0FFh, 0FFh, 0C7h
data:0F00 05 AA D5 A2+                        .db 0FFh, 0FFh, 0FFh, 81h, 0C0h, 0FFh, 0FFh, 0FFh, 8Fh, 0F0h
data:0F00 D1 AA D1 A8+                        .db 0FFh, 0FCh, 0BFh, 0F8h, 0FFh, 0FFh, 0FFh, 0E1h, 0FFh
data:0F00 D5 8A 00 05+                        .db 0FFh, 0FFh, 0F0h, 0FFh, 0FFh, 9Fh, 0FEh, 0FFh, 8Fh, 0
data:0F00 AA D5 82 81+                        .db 0F0h, 0FFh, 87h, 80h, 0FFh, 87h, 0FFh, 0E7h, 0FFh, 0E1h
data:0F00 8A 90 A8 D5+                        .db 0FFh, 0C7h, 0FFh, 0C3h, 0FFh, 81h, 0C0h, 0FFh, 0FFh
data:0F00 8A 00 05 AA+                        .db 0FFh, 8Fh, 0F8h, 0BFh, 0FCh, 0BFh, 0F8h, 0FFh, 0FCh
data:0F00 D5 82 85 8A+                        .db 0FFh, 0F0h, 0FFh, 0F9h, 0FFh, 0F8h, 0FFh, 0E1h, 9Fh
data:0F00 94 A8 D5 8A+                        .db 0FEh, 0BFh, 0, 0F0h, 0FFh, 87h, 80h, 0FFh, 0C7h, 0FFh
data:0F00 00 07 8A 95+                        .db 0E3h, 0FFh, 0E1h, 0FFh, 0E7h, 0FFh, 0E1h, 0FFh, 81h
data:0F00 8A 95 8A 13+                        .db 0E0h, 0FFh, 0FFh, 0FFh, 87h, 0F8h, 0BFh, 0FCh, 9Fh, 0FCh
data:0F00 A0 85 17 A0+                        .db 0FFh, 0FCh, 0FFh, 0F0h, 0FFh, 0F8h, 0FFh, 0F8h, 0FFh
data:0F00 81 00 07 8A+                        .db 0F0h, 9Fh, 0FFh, 9Fh, 0, 0F0h, 0FFh, 87h, 80h, 0FFh
data:0F00 D4 AA 85 8A+                        .db 0C7h, 0FFh, 0E3h, 0FFh, 0F1h, 0FFh, 0E7h, 0FFh, 0E1h
data:0F00 13 A8 85 17+                        .db 0FFh, 80h, 0E0h, 0FFh, 0FFh, 0FFh, 81h, 0F8h, 0BFh, 0FEh
data:0F00 A8 81 00 07+                        .db 9Fh, 0FCh, 0BFh, 0FCh, 0FFh, 0F0h, 0FFh, 0F8h, 0BFh
data:0F00 8A D0 AA 81+                        .db 0F8h, 0FFh, 0F0h, 8Fh, 0FFh, 9Fh, 0, 0F8h, 0FFh, 87h
data:0F00 8A 13 A8 85+                        .db 0C0h, 0FFh, 0C3h, 0FFh, 0F3h, 0FFh, 0F1h, 0FFh, 0E3h
data:0F00 17 A8 D1 00+                        .db 0FFh, 0FFh, 0FFh, 80h, 0E0h, 0FFh, 0FFh, 0FFh, 80h, 0F8h
data:0F00 07 A8 C0 AA+                        .db 0BFh, 0FEh, 9Fh, 0FCh, 0BFh, 0FCh, 0FFh, 0F0h, 0FFh
data:0F00 C0 82 13 AA+                        .db 0F8h, 0BFh, 0F8h, 0FFh, 0FFh, 8Fh, 0FFh, 8Fh, 0, 0F8h
data:0F00 17 AA D0 00+                        .db 0FFh, 87h, 0C0h, 0FFh, 0C3h, 0FFh, 0F3h, 0FFh, 0F0h
data:0F00 07 A8 0A C0+                        .db 0FFh, 0F3h, 0FFh, 0FFh, 0FFh, 80h, 0E0h, 0FFh, 0FFh
data:0F00 82 13 8A 17+                        .db 0BFh, 80h, 0F8h, 9Fh, 0FEh, 9Fh, 0FCh, 0BFh, 0FCh, 0BFh
data:0F00 8A D0 00 07+                        .db 0F8h, 0FFh, 0FCh, 0BFh, 0FCh, 0FFh, 0FFh, 8Fh, 0FFh
data:0F00 A8 0A C0 82+                        .db 8Fh, 0, 0F8h, 0FFh, 83h, 0C0h, 0FFh, 0C3h, 0FFh, 0F3h
data:0F00 13 8A 17 8A+                        .db 0FFh, 0F0h, 0FFh, 0F3h, 0FFh, 0FFh, 0BFh, 80h, 0E0h
data:0F00 D0 00 07 A8+                        .db 0FFh, 0FFh, 0BFh, 80h, 0FCh, 9Fh, 0FEh, 8Fh, 0FCh, 0BFh
data:0F00 0A C0 82 13+                        .db 0FCh, 0BFh, 0F8h, 0BFh, 0FCh, 0BFh, 0FCh, 0FFh, 0FFh
data:0F00 8A 17 8A D0+                        .db 0CFh, 0FFh, 8Fh, 0, 0F8h, 0FFh, 83h, 0C0h, 0FFh, 0E3h
data:0F00 00 07 A8 0A+                        .db 0FFh, 0F9h, 0FFh, 0F0h, 0FFh, 0F3h, 0FFh, 0FFh, 0BFh
data:0F00 C0 82 13 8A+                        .db 80h, 0F0h, 0FFh, 0FFh, 0BFh, 80h, 0FCh, 9Fh, 0FEh, 8Fh
data:0F00 17 8A D0 00+                        .db 0FEh, 0BFh, 0FEh, 0BFh, 0F8h, 0BFh, 0FCh, 9Fh, 0FCh
data:0F00 07 A0 81 80+                        .db 0FFh, 0FFh, 0C7h, 0FFh, 8Fh, 0, 0F8h, 0FFh, 83h, 0E0h
data:0F00 D0 13 8A 17+                        .db 0FFh, 0E1h, 0FFh, 0F9h, 0FFh, 0F8h, 0FFh, 0F9h, 0FFh
data:0F00 8A D0 00 07+                        .db 83h, 80h, 80h, 0F0h, 0FFh, 0FFh, 0FFh, 80h, 0FCh, 9Fh
data:0F00 A0 81 80 D0+                        .db 0FFh, 8Fh, 0FEh, 9Fh, 0FEh, 0BFh, 0F8h, 0BFh, 0FCh, 9Fh
data:0F00 13 A8 80 A8+                        .db 0FCh, 0BFh, 80h, 0C0h, 0FFh, 87h, 0, 0FCh, 0FFh, 83h
data:0F00 C0 AA D4 82+                        .db 0E0h, 0FFh, 0E1h, 0FFh, 0F9h, 0BFh, 0F8h, 0FFh, 0F9h
data:0F00 85 8A 94 A0+                        .db 0FFh, 81h, 80h, 80h, 0F0h, 0FFh, 0FFh, 0FFh, 80h, 0FCh
data:0F00 81 A0 C1 8A+                        .db 9Fh, 0FFh, 8Fh, 0FEh, 9Fh, 0FEh, 9Fh, 0F8h, 0BFh, 0FEh
data:0F00 00 07 A0 81+                        .db 9Fh, 0FEh, 0BFh, 80h, 0C0h, 0FFh, 87h, 0, 0FCh, 0FFh
data:0F00 80 D0 13 A8+                        .db 81h, 0E0h, 0FFh, 0E1h, 0FFh, 0F9h, 0BFh, 0F8h, 0FFh
data:0F00 80 AA C1 AA+                        .db 0F9h, 0FFh, 81h, 80h, 80h, 0F0h, 0FFh, 0FBh, 0FFh, 81h
data:0F00 D4 82 85 8A+                        .db 0FEh, 8Fh, 0FFh, 8Fh, 0FEh, 9Fh, 0FEh, 9Fh, 0FCh, 0BFh
data:0F00 94 A8 85 A8+                        .db 0FEh, 9Fh, 0FEh, 9Fh, 80h, 0C0h, 0FFh, 87h, 0, 0FCh
data:0F00 C1 AA 00 07+                        .db 0FFh, 81h, 0E4h, 0FFh, 0F1h, 0FFh, 0F8h, 0BFh, 0F8h
data:0F00 A0 81 80 D0+                        .db 0FFh, 0F9h, 0FFh, 80h, 90h, 80h, 0F8h, 0FFh, 0F3h, 0FFh
data:0F00 13 A8 80 AA+                        .db 81h, 0FEh, 0CFh, 0FFh, 87h, 0FFh, 9Fh, 0FFh, 9Fh, 0FCh
data:0F00 C1 AA D4 82+                        .db 9Fh, 0FEh, 9Fh, 0FEh, 9Fh, 80h, 0E2h, 0FFh, 87h, 0, 0FCh
data:0F00 85 8A 94 A8+                        .db 0FFh, 81h, 0E6h, 0FFh, 0F1h, 0FFh, 0F8h, 0BFh, 0FCh
data:0F00 85 A8 D1 AA+                        .db 0FFh, 0F9h, 0FFh, 81h, 98h, 80h, 0F8h, 0FFh, 0F3h, 0FFh
data:0F00 00 08 D5 AA+                        .db 81h, 0FEh, 0CFh, 0FFh, 87h, 0FFh, 8Fh, 0FFh, 9Fh, 0FCh
data:0F00 95 13 A8 C1+                        .db 9Fh, 0FEh, 8Fh, 0FEh, 0BFh, 80h, 0E3h, 0FFh, 83h, 0
data:0F00 82 85 8A D0+                        .db 0FEh, 0FFh, 0FFh, 0F7h, 0FFh, 0FFh, 0FFh, 0F8h, 0FFh
data:0F00 80 85 8A 94+                        .db 0FFh, 0FFh, 0FCh, 0FFh, 0FFh, 9Fh, 80h, 0F8h, 0FFh, 0F3h
data:0F00 8A 94 AA D0+                        .db 0FFh, 93h, 0FEh, 0FFh, 0FFh, 87h, 0FFh, 8Fh, 0FFh, 8Fh
data:0F00 A0 81 00 08+                        .db 0FCh, 9Fh, 0FEh, 8Fh, 0FEh, 0FFh, 0FFh, 0E3h, 0FFh, 83h
data:0F00 D5 AA 95 13+                        .db 0, 0FEh, 0FFh, 0FFh, 0F7h, 0FFh, 0FFh, 0FFh, 0FCh, 0FFh
data:0F00 A0 C1 82 85+                        .db 0FFh, 0FFh, 0FCh, 0FFh, 0FFh, 9Fh, 80h, 0F8h, 0FFh, 0F3h
data:0F00 8A D0 80 85+                        .db 0FFh, 9Fh, 0FFh, 0FFh, 0FFh, 87h, 0FFh, 8Fh, 0FFh, 8Fh
data:0F00 8A 94 82 94+                        .db 0FEh, 9Fh, 0FFh, 8Fh, 0FEh, 0FFh, 0FFh, 0E3h, 0FFh, 83h
data:0F00 8A D0 A0 81+                        .db 0, 0FEh, 0FFh, 0FFh, 0F3h, 0FFh, 0FFh, 0FFh, 0FCh, 0FFh
data:0F00 00 08 D5 AA+                        .db 0FFh, 0FFh, 0FCh, 0FFh, 0FFh, 8Fh, 80h, 0F8h, 0FFh, 0E1h
data:0F00 95 13 A0 C5+                        .db 0FFh, 9Fh, 0FFh, 0FFh, 0FFh, 83h, 0FFh, 8Fh, 0FFh, 8Fh
data:0F00 82 85 8A D0+                        .db 0FEh, 8Fh, 0FFh, 8Fh, 0FFh, 0FFh, 0FFh, 0E3h, 0FFh, 83h
data:0F00 80 85 8A 94+                        .db 0, 0FEh, 0FFh, 0FFh, 0F3h, 0FFh, 0FFh, 0BFh, 0FCh, 0FFh
data:0F00 80 94 8A D0+                        .db 0FFh, 0FFh, 0FCh, 0FFh, 0FFh, 8Fh, 80h, 0FCh, 0FFh, 0E1h
data:0F00 A0 81 00 14+                        .db 0FFh, 9Fh, 0FFh, 0FFh, 0FFh, 0C3h, 0FFh, 0C7h, 0FFh
data:0F00 C5 82 85 8A+                        .db 8Fh, 0FEh, 8Fh, 0FFh, 87h, 0FFh, 0FFh, 0FFh, 0F3h, 0FFh
data:0F00 D0 80 85 8A+                        .db 81h, 0, 0FEh, 0FFh, 0FFh, 0F3h, 0FFh, 0FFh, 0BFh, 0FCh
data:0F00 94 A0 95 8A+                        .db 0FFh, 0FFh, 0BFh, 0FCh, 0FFh, 0FFh, 8Fh, 80h, 0FCh, 0FFh
data:0F00 D0 AA 00 14+                        .db 0E1h, 0FFh, 8Fh, 0FFh, 0FFh, 0FFh, 0C3h, 0FFh, 0C7h
data:0F00 C5 82 85 8A+                        .db 0FFh, 8Fh, 0FEh, 8Fh, 0FFh, 87h, 0FFh, 0FFh, 0FFh, 0F1h
data:0F00 D0 80 85 8A+                        .db 0FFh, 81h, 0, 0FEh, 0FFh, 0FFh, 0F3h, 0FFh, 0FFh, 0BFh
data:0F00 94 A8 95 8A+                        .db 0FCh, 0FFh, 0FFh, 0BFh, 0FCh, 0FFh, 0FFh, 8Fh, 80h, 0FCh
data:0F00 D0 AA 00 14+                        .db 0FFh, 0E1h, 0FFh, 0CFh, 0FFh, 0FFh, 0FFh, 0C3h, 0FFh
data:0F00 C5 82 85 8A+                        .db 0C7h, 0FFh, 87h, 0FEh, 0CFh, 0FFh, 87h, 0FEh, 0FFh, 0FFh
data:0F00 D0 80 85 8A+                        .db 0F1h, 0FFh, 81h, 0, 0FEh, 0FFh, 0FFh, 0F1h, 0FFh, 0FFh
data:0F00 94 A8 95 8A+                        .db 0BFh, 0FCh, 0FFh, 0FEh, 0BFh, 0F8h, 0FFh, 0FFh, 87h
data:0F00 D0 8A 00 14+                        .db 80h, 0FCh, 0FFh, 0C1h, 0FFh, 0CFh, 0FFh, 0FFh, 0FFh
data:0F00 C5 82 85 8A+                        .db 0C3h, 0FFh, 0C7h, 0FFh, 87h, 0FFh, 0C7h, 0FFh, 87h, 0FEh
data:0F00 D0 80 85 8A+                        .db 0FFh, 0FFh, 0F1h, 0FFh, 81h, 0, 0FEh, 0FFh, 0FFh, 0E1h
data:0F00 94 8A 94 8A+                        .db 0FFh, 0FFh, 9Fh, 0F8h, 0BFh, 0FEh, 0BFh, 0F8h, 0FFh
data:0F00 D0 00 14 C5+                        .db 0FFh, 87h, 80h, 0FCh, 0FFh, 0C1h, 0FFh, 0C7h, 0FFh, 0EFh
data:0F00 82 85 8A D0+                        .db 0FFh, 0C3h, 0FFh, 0C7h, 0FFh, 87h, 0FFh, 0C7h, 0FFh
data:0F00 80 85 8A 94+                        .db 87h, 0FEh, 0FFh, 0FFh, 0F1h, 0FFh, 81h, 0, 0FEh, 0FFh
data:0F00 8A 94 8A D0+                        .db 0FFh, 0E1h, 0FFh, 0FFh, 9Fh, 0F8h, 0BFh, 0FEh, 0FFh
data:0F00 80 81 00 13+                        .db 0F1h, 0FFh, 0FFh, 87h, 80h, 0FCh, 0FFh, 0C3h, 0FFh, 0C7h
data:0F00 A0 C5 82 85+                        .db 0FFh, 0E7h, 0FFh, 0CFh, 0FFh, 0DFh, 0FFh, 9Fh, 0FFh
data:0F00 8A D0 82 85+                        .db 9Fh, 0FFh, 9Fh, 0FCh, 0FFh, 0FFh, 0F0h, 0FFh, 87h, 0
data:0F00 8A 94 8A 94+                        .db 0FCh, 0FFh, 0FFh, 0C0h, 0FFh, 0FFh, 8Fh, 0F0h, 9Fh, 0FCh
data:0F00 8A D0 A0 81+                        .db 0FFh, 0E0h, 0FFh, 0FFh, 83h, 80h, 0F0h, 0FFh, 81h, 0FFh
data:0F00 00 13 AA 81+                        .db 87h, 0FFh, 0E7h, 0FFh, 0C7h, 0FFh, 0CFh, 0FFh, 8Fh, 0FEh
data:0F00 AA 81 8A C0+                        .db 8Fh, 0FFh, 8Fh, 0F8h, 0FFh, 0BFh, 0F0h, 0FFh, 83h, 0
data:0F00 8A D4 AA 85+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12h, 0AAh, 81h, 0, 12h
data:0F00 A8 85 8A C0+                        .db 8Ah, 85h, 0, 12h, 8Ah, 85h, 0, 12h, 8Ah, 85h, 0, 12h
data:0F00 AA 00 13 AA+                        .db 0AAh, 0C1h, 0A2h, 81h, 0, 12h, 8Ah, 0C5h, 0A2h, 81h
data:0F00 81 AA 81 8A+                        .db 0, 12h, 8Ah, 0C5h, 0A2h, 81h, 0, 12h, 8Ah, 0C5h, 0A2h
data:0F00 C0 8A D4 AA+                        .db 81h, 0, 12h, 8Ah, 0C5h, 0A2h, 81h, 0, 12h, 0AAh, 81h
data:0F00 85 A8 85 8A+                        .db 0AAh, 81h, 0, 14h, 0A0h, 81h, 0, 14h, 0A0h, 81h, 0, 14h
data:0F00 C0 AA 00 13+                        .db 0AAh, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0Bh, 0A0h, 0D5h
data:0F00 AA 80 A8 80+                        .db 14h, 0D0h, 0AAh, 0, 0Bh, 0A0h, 0C1h, 82h, 14h, 94h, 19h
data:0F00 8A 80 8A D0+                        .db 0A0h, 0C1h, 82h, 0, 0Bh, 0A0h, 0C1h, 82h, 14h, 94h, 18h
data:0F00 A0 81 A0 81+                        .db 0D0h, 0A0h, 0C1h, 82h, 0, 0Bh, 0A0h, 0C1h, 82h, 14h
data:0F00 8A 80 8A 00+                        .db 94h, 18h, 0D0h, 0A0h, 0C1h, 82h, 0, 0Bh, 0A0h, 0C1h
data:0F00 00 00 00 00+                        .db 82h, 14h, 94h, 19h, 0A0h, 0C1h, 82h, 0, 0Bh, 0A0h, 0C1h
data:0F00 00 00 00 00+                        .db 82h, 0D5h, 0A0h, 0C1h, 82h, 0D5h, 82h, 0D0h, 8Ah, 0D0h
data:0F00 00 00 0D D0+                        .db 0AAh, 0D0h, 0A8h, 0C5h, 0AAh, 81h, 0, 0Bh, 0A0h, 0C1h
data:0F00 8A 00 0D D0+                        .db 0A2h, 0C1h, 0A2h, 0C1h, 0A2h, 0C1h, 82h, 80h, 0A8h, 94h
data:0F00 A8 17 C0 82+                        .db 0A2h, 0D1h, 0A0h, 0C1h, 82h, 85h, 0, 0Bh, 0A0h, 0C1h
data:0F00 00 0D D0 A8+                        .db 0A2h, 0C1h, 0A2h, 0C1h, 0A2h, 0C1h, 82h, 80h, 0A8h, 94h
data:0F00 17 C0 82 00+                        .db 0A2h, 0D1h, 0A0h, 0C1h, 82h, 85h, 0, 0Bh, 0A0h, 0C1h
data:0F00 0D D0 A8 D0+                        .db 0A2h, 0C1h, 0A2h, 0C1h, 0A2h, 0C1h, 82h, 80h, 0A8h, 94h
data:0F00 82 95 A0 95+                        .db 0A2h, 0D1h, 0A0h, 0C1h, 82h, 85h, 0, 0Bh, 0A0h, 0C1h
data:0F00 A8 81 AA D0+                        .db 0A2h, 0C1h, 0A2h, 0C1h, 0A2h, 0C1h, 82h, 80h, 0A8h, 94h
data:0F00 8A D4 82 00+                        .db 0A2h, 0D1h, 0A0h, 0C1h, 82h, 85h, 0, 0Bh, 0A0h, 0C1h
data:0F00 0D D0 8A 94+                        .db 0A2h, 0C1h, 0A2h, 0C1h, 0A2h, 0C1h, 82h, 80h, 0A8h, 94h
data:0F00 A0 D1 A8 80+                        .db 0A2h, 0D1h, 0A0h, 0C1h, 82h, 85h, 0, 0Bh, 0A0h, 0D5h
data:0F00 8A C5 A2 C1+                        .db 80h, 0D5h, 80h, 0D5h, 80h, 0D5h, 82h, 0D4h, 8Ah, 94h
data:0F00 82 85 00 0D+                        .db 0A2h, 0D1h, 80h, 0C5h, 82h, 85h, 0, 12h, 0C0h, 82h, 0
data:0F00 D0 80 94 A0+                        .db 12h, 0C0h, 82h, 0, 12h, 0C0h, 82h, 0, 12h, 0D5h, 0, 0
data:0F00 D1 A8 80 8A+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0Bh, 0B0h, 9Eh, 83h
data:0F00 C5 A2 C1 82+                        .db 0F8h, 81h, 13h, 0C0h, 81h, 0B0h, 0C0h, 81h, 80h, 0E3h
data:0F00 85 00 0D D0+                        .db 0C3h, 87h, 8Fh, 0, 0Bh, 98h, 0B3h, 86h, 8Ch, 83h, 13h
data:0F00 80 94 A0 95+                        .db 0C0h, 81h, 0B0h, 0C0h, 81h, 80h, 0B3h, 0E6h, 0CCh, 99h
data:0F00 A0 85 AA C1+                        .db 0, 0Bh, 8Ch, 83h, 8Ch, 8Ch, 15h, 0B0h, 0F0h, 87h, 80h
data:0F00 A2 C1 82 D4+                        .db 0B3h, 0E6h, 8Ch, 98h, 0, 0Bh, 8Ch, 83h, 8Ch, 8Ch, 0E0h
data:0F00 00 0D D0 80+                        .db 0E3h, 0C7h, 99h, 0CEh, 0F1h, 0F1h, 0C3h, 81h, 80h, 0B3h
data:0F00 94 A0 81 80+                        .db 0C6h, 87h, 8Eh, 0, 0Bh, 8Ch, 83h, 8Ch, 8Ch, 0B0h, 0E6h
data:0F00 94 8A C0 A2+                        .db 0CCh, 99h, 0C3h, 99h, 0B3h, 0C6h, 81h, 80h, 0E3h, 0E7h
data:0F00 C1 82 C0 82+                        .db 8Ch, 98h, 0, 0Bh, 8Ch, 83h, 8Ch, 8Ch, 0B0h, 0E6h, 0CCh
data:0F00 00 0D D0 80+                        .db 99h, 0C3h, 99h, 0B3h, 0C6h, 81h, 80h, 83h, 0E6h, 8Ch
data:0F00 94 A0 81 80+                        .db 98h, 0, 0Bh, 98h, 0B3h, 86h, 8Ch, 0B3h, 0E6h, 0CCh, 99h
data:0F00 94 8A C0 A2+                        .db 0C3h, 99h, 0B3h, 0C6h, 81h, 80h, 83h, 0E6h, 0CCh, 99h
data:0F00 C1 82 C0 82+                        .db 0, 0Bh, 0B0h, 9Eh, 83h, 0F8h, 0E1h, 0E3h, 87h, 9Fh, 0C3h
data:0F00 00 0D D0 80+                        .db 0F1h, 0B3h, 86h, 87h, 80h, 0E3h, 0C3h, 87h, 8Fh, 0, 10h
data:0F00 94 80 95 A8+                        .db 0E0h, 80h, 98h, 15h, 83h, 0, 10h, 0E0h, 80h, 98h, 15h
data:0F00 85 A8 C1 A2+                        .db 83h, 0, 10h, 0E0h, 80h, 8Fh, 80h, 0F0h, 81h, 0
data:1A85 00 00 00 00+lsb_line_addr:          .db 0, 0, 0, 0, 0, 0, 0, 0, 80h, 80h, 80h, 80h, 80h, 80h ; lsb of line address
data:1A85 00 00 00 00+                        .db 80h, 80h, 0, 0, 0, 0, 0, 0, 0, 0, 80h, 80h, 80h, 80h
data:1A85 80 80 80 80+                        .db 80h, 80h, 80h, 80h, 0, 0, 0, 0, 0, 0, 0, 0, 80h, 80h
data:1A85 80 80 80 80+                        .db 80h, 80h, 80h, 80h, 80h, 80h, 0, 0, 0, 0, 0, 0, 0, 0
data:1A85 00 00 00 00+                        .db 80h, 80h, 80h, 80h, 80h, 80h, 80h, 80h, 28h, 28h, 28h
data:1A85 00 00 00 00+                        .db 28h, 28h, 28h, 28h, 28h, 0A8h, 0A8h, 0A8h, 0A8h, 0A8h
data:1A85 80 80 80 80+                        .db 0A8h, 0A8h, 0A8h, 28h, 28h, 28h, 28h, 28h, 28h, 28h
data:1A85 80 80 80 80+                        .db 28h, 0A8h, 0A8h, 0A8h, 0A8h, 0A8h, 0A8h, 0A8h, 0A8h
data:1A85 00 00 00 00+                        .db 28h, 28h, 28h, 28h, 28h, 28h, 28h, 28h, 0A8h, 0A8h, 0A8h
data:1A85 00 00 00 00+                        .db 0A8h, 0A8h, 0A8h, 0A8h, 0A8h, 28h, 28h, 28h, 28h, 28h
data:1A85 80 80 80 80+                        .db 28h, 28h, 28h, 0A8h, 0A8h, 0A8h, 0A8h, 0A8h, 0A8h, 0A8h
data:1A85 80 80 80 80+                        .db 0A8h, 50h, 50h, 50h, 50h, 50h, 50h, 50h, 50h, 0D0h, 0D0h
data:1A85 00 00 00 00+                        .db 0D0h, 0D0h, 0D0h, 0D0h, 0D0h, 0D0h, 50h, 50h, 50h, 50h
data:1A85 00 00 00 00+                        .db 50h, 50h, 50h, 50h, 0D0h, 0D0h, 0D0h, 0D0h, 0D0h, 0D0h
data:1A85 80 80 80 80+                        .db 0D0h, 0D0h, 50h, 50h, 50h, 50h, 50h, 50h, 50h, 50h, 0D0h
data:1A85 80 80 80 80+                        .db 0D0h, 0D0h, 0D0h, 0D0h, 0D0h, 0D0h, 0D0h, 50h, 50h, 50h
data:1A85 28 28 28 28+                        .db 50h, 50h, 50h, 50h, 50h, 0D0h, 0D0h, 0D0h, 0D0h, 0D0h
data:1A85 28 28 28 28+                        .db 0D0h, 0D0h, 0D0h
data:1B45 00 04 08 0C+msb_line_addr:          .db 0, 4, 8, 0Ch, 10h, 14h, 18h, 1Ch, 0, 4, 8, 0Ch, 10h ; msb of line address
data:1B45 10 14 18 1C+                        .db 14h, 18h, 1Ch, 1, 5, 9, 0Dh, 11h, 15h, 19h, 1Dh, 1, 5
data:1B45 00 04 08 0C+                        .db 9, 0Dh, 11h, 15h, 19h, 1Dh, 2, 6, 0Ah, 0Eh, 12h, 16h
data:1B45 10 14 18 1C+                        .db 1Ah, 1Eh, 2, 6, 0Ah, 0Eh, 12h, 16h, 1Ah, 1Eh, 3, 7, 0Bh
data:1B45 01 05 09 0D+                        .db 0Fh, 13h, 17h, 1Bh, 1Fh, 3, 7, 0Bh, 0Fh, 13h, 17h, 1Bh
data:1B45 11 15 19 1D+                        .db 1Fh, 0, 4, 8, 0Ch, 10h, 14h, 18h, 1Ch, 0, 4, 8, 0Ch
data:1B45 01 05 09 0D+                        .db 10h, 14h, 18h, 1Ch, 1, 5, 9, 0Dh, 11h, 15h, 19h, 1Dh
data:1B45 11 15 19 1D+                        .db 1, 5, 9, 0Dh, 11h, 15h, 19h, 1Dh, 2, 6, 0Ah, 0Eh, 12h
data:1B45 02 06 0A 0E+                        .db 16h, 1Ah, 1Eh, 2, 6, 0Ah, 0Eh, 12h, 16h, 1Ah, 1Eh, 3
data:1B45 12 16 1A 1E+                        .db 7, 0Bh, 0Fh, 13h, 17h, 1Bh, 1Fh, 3, 7, 0Bh, 0Fh, 13h
data:1B45 02 06 0A 0E+                        .db 17h, 1Bh, 1Fh, 0, 4, 8, 0Ch, 10h, 14h, 18h, 1Ch, 0, 4
data:1B45 12 16 1A 1E+                        .db 8, 0Ch, 10h, 14h, 18h, 1Ch, 1, 5, 9, 0Dh, 11h, 15h, 19h
data:1B45 03 07 0B 0F+                        .db 1Dh, 1, 5, 9, 0Dh, 11h, 15h, 19h, 1Dh, 2, 6, 0Ah, 0Eh
data:1B45 13 17 1B 1F+                        .db 12h, 16h, 1Ah, 1Eh, 2, 6, 0Ah, 0Eh, 12h, 16h, 1Ah, 1Eh
data:1B45 03 07 0B 0F+                        .db 3, 7, 0Bh, 0Fh, 13h, 17h, 1Bh, 1Fh, 3, 7, 0Bh, 0Fh, 13h
data:1B45 13 17 1B 1F+                        .db 17h, 1Bh, 1Fh
data:1C05 00 1C 38 54+lsb_row_a_tbl:          .db 0, 1Ch, 38h, 54h, 70h, 8Ch, 0A8h, 0C4h, 0E0h, 0FCh, 18h ; lsb_row_address
data:1C05 70 8C A8 C4+                        .db 34h, 50h, 6Ch, 88h, 0A4h
data:1C15 08 08 08 08+msb_row_a_dyn_tbl:      .db 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9 ; msb row address
data:1C25 0A 0A 0A 0A+msb_row_a_static_tbl:   .db 0Ah, 0Ah, 0Ah, 0Ah, 0Ah, 0Ah, 0Ah, 0Ah, 0Ah, 0Ah, 0Bh ; msb row address (copy)
data:1C25 0A 0A 0A 0A+                        .db 0Bh, 0Bh, 0Bh, 0Bh, 0Bh
data:1C35 00 05 0A 0F+col_x_5_tbl:            .db 0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65
data:1C35 14 19 1E 23+                        .db 70, 75, 80, 85, 90, 95, 100, 105, 110, 115, 120, 125
data:1C35 28 2D 32 37+                        .db 130, 135
data:1C51 00 0B 16 21+row_to_scanline_tbl:    .db 0, 11, 22, 33, 44, 55, 66, 77, 88, 99, 110, 121, 132 ; scanline number for each tile row
data:1C51 2C 37 42 4D+                        .db 143, 154, 165, 181
data:1C62 00 01 02 04+col_to_addr_tbl:        .db 0, 1, 2, 4, 5, 7, 8, 0Ah, 0Bh, 0Ch, 0Eh, 0Fh, 11h, 12h
data:1C62 05 07 08 0A+                        .db 14h, 15h, 16h, 18h, 19h, 1Bh, 1Ch, 1Eh, 1Fh, 20h, 22h
data:1C62 0B 0C 0E 0F+                        .db 23h, 25h, 26h
data:1C7E 00 03 06 02+col_pixel_shift_tbl:    .db 0, 3, 6, 2, 5, 1, 4, 0, 3, 6, 2, 5, 1, 4, 0, 3, 6, 2
data:1C7E 05 01 04 00+                        .db 5, 1, 4, 0, 3, 6, 2, 5, 1, 4
data:1C9A 00 00 00 00+movement_offset_to_addr_tbl:.db 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 4
data:1C9A 01 01 01 02+                        .db 5, 5, 5, 6, 6, 6, 6, 7, 7, 7, 8, 8, 8, 8, 9, 9, 9, 0Ah
data:1C9A 02 02 02 03+                        .db 0Ah, 0Ah, 0Ah, 0Bh, 0Bh, 0Bh, 0Ch, 0Ch, 0Ch, 0Ch, 0Dh
data:1C9A 03 03 04 04+                        .db 0Dh, 0Dh, 0Eh, 0Eh, 0Eh, 0Eh, 0Fh, 0Fh, 0Fh, 10h, 10h
data:1C9A 04 04 05 05+                        .db 10h, 10h, 11h, 11h, 11h, 12h, 12h, 12h, 12h, 13h, 13h
data:1C9A 05 06 06 06+                        .db 13h, 14h, 14h, 14h, 14h, 15h, 15h, 15h, 16h, 16h, 16h
data:1C9A 06 07 07 07+                        .db 16h, 17h, 17h, 17h, 18h, 18h, 18h, 18h, 19h, 19h, 19h
data:1C9A 08 08 08 08+                        .db 1Ah, 1Ah, 1Ah, 1Ah, 1Bh, 1Bh, 1Bh, 1Ch, 1Ch, 1Ch, 1Ch
data:1C9A 09 09 09 0A+                        .db 1Dh, 1Dh, 1Dh, 1Eh, 1Eh, 1Eh, 1Eh, 1Fh, 1Fh, 1Fh, 20h
data:1C9A 0A 0A 0A 0B+                        .db 20h, 20h, 20h, 21h, 21h, 21h, 22h, 22h, 22h, 22h, 23h
data:1C9A 0B 0B 0C 0C+                        .db 23h, 23h, 24h, 24h, 24h, 24h, 25h, 25h, 25h, 26h, 26h
data:1C9A 0C 0C 0D 0D+                        .db 26h, 26h, 27h, 27h, 27h
data:1D26 00 02 04 06+movement_offset_to_shift_tbl:.db 0, 2, 4, 6, 1, 3, 5, 0, 2, 4, 6, 1, 3, 5, 0, 2, 4, 6
data:1D26 01 03 05 00+                        .db 1, 3, 5, 0, 2, 4, 6, 1, 3, 5, 0, 2, 4, 6, 1, 3, 5, 0
data:1D26 02 04 06 01+                        .db 2, 4, 6, 1, 3, 5, 0, 2, 4, 6, 1, 3, 5, 0, 2, 4, 6, 1
data:1D26 03 05 00 02+                        .db 3, 5, 0, 2, 4, 6, 1, 3, 5, 0, 2, 4, 6, 1, 3, 5, 0, 2
data:1D26 04 06 01 03+                        .db 4, 6, 1, 3, 5, 0, 2, 4, 6, 1, 3, 5, 0, 2, 4, 6, 1, 3
data:1D26 05 00 02 04+                        .db 5, 0, 2, 4, 6, 1, 3, 5, 0, 2, 4, 6, 1, 3, 5, 0, 2, 4
data:1D26 06 01 03 05+                        .db 6, 1, 3, 5, 0, 2, 4, 6, 1, 3, 5, 0, 2, 4, 6, 1, 3, 5
data:1D26 00 02 04 06+                        .db 0, 2, 4, 6, 1, 3, 5, 0, 2, 4, 6, 1, 3, 5
data:1DB2 01                                  .db    1
data:1DB3 20                                  .db  20h
data:1DB4 58                                  .db  58h ; X
data:1DB5 FC                                  .db 0FCh ; ü
data:1DB6 20                                  .db  20h
data:1DB7 93                                  .db  93h ; 
data:1DB8 FE                                  .db 0FEh ; þ
data:1DB9 20                                  .db  20h
data:1DBA 89                                  .db  89h ; 
data:1DBB FE                                  .db 0FEh ; þ
data:1DBC A0                                  .db 0A0h ;  
data:1DBD 00                                  .db    0
data:1DBE B9                                  .db 0B9h ; ¹
data:1DBF 34                                  .db  34h ; 4
data:1DC0 08                                  .db    8
data:1DC1 F0                                  .db 0F0h ; ð
data:1DC2 0E                                  .db  0Eh
data:1DC3 20                                  .db  20h
data:1DC4 F0                                  .db 0F0h ; ð
data:1DC5 FD                                  .db 0FDh ; ý
data:1DC6 C9                                  .db 0C9h ; É
data:1DC7 8D                                  .db  8Dh ; 
data:1DC8 D0                                  .db 0D0h ; Ð
data:1DC9 04                                  .db    4
data:1DCA A9                                  .db 0A9h ; ©
data:1DCB 09                                  .db    9
data:1DCC 85                                  .db  85h ; 
data:1DCD 24                                  .db  24h ; $
data:1DCE C8                                  .db 0C8h ; È
data:1DCF D0                                  .db 0D0h ; Ð
data:1DD0 ED                                  .db 0EDh ; í
data:1DD1 A6                                  .db 0A6h ; ¦
data:1DD2 2B                                  .db  2Bh ; +
data:1DD3 9D                                  .db  9Dh ; 
data:1DD4 88                                  .db  88h ; 
data:1DD5 C0                                  .db 0C0h ; À
data:1DD6 8A                                  .db  8Ah ; 
data:1DD7 4A                                  .db  4Ah ; J
data:1DD8 4A                                  .db  4Ah ; J
data:1DD9 4A                                  .db  4Ah ; J
data:1DDA 4A                                  .db  4Ah ; J
data:1DDB 09                                  .db    9
data:1DDC C0                                  .db 0C0h ; À
data:1DDD 8D                                  .db  8Dh ; 
data:1DDE 33                                  .db  33h ; 3
data:1DDF 08                                  .db    8
data:1DE0 20                                  .db  20h
data:1DE1 0C                                  .db  0Ch
data:1DE2 FD                                  .db 0FDh ; ý
data:1DE3 4C                                  .db  4Ch ; L
data:1DE4 00                                  .db    0
data:1DE5 C6                                  .db 0C6h ; Æ
data:1DE6 8D                                  .db  8Dh ; 
data:1DE7 8D                                  .db  8Dh ; 
data:1DE8 8D                                  .db  8Dh ; 
data:1DE9 8D                                  .db  8Dh ; 
data:1DEA 8D                                  .db  8Dh ; 
data:1DEB 8D                                  .db  8Dh ; 
data:1DEC 8D                                  .db  8Dh ; 
data:1DED CC                                  .db 0CCh ; Ì
data:1DEE CF                                  .db 0CFh ; Ï
data:1DEF C4                                  .db 0C4h ; Ä
data:1DF0 C5                                  .db 0C5h ; Å
data:1DF1 A0                                  .db 0A0h ;  
data:1DF2 D2                                  .db 0D2h ; Ò
data:1DF3 D5                                  .db 0D5h ; Õ
data:1DF4 CE                                  .db 0CEh ; Î
data:1DF5 CE                                  .db 0CEh ; Î
data:1DF6 C5                                  .db 0C5h ; Å
data:1DF7 D2                                  .db 0D2h ; Ò
data:1DF8 A0                                  .db 0A0h ;  
data:1DF9 C4                                  .db 0C4h ; Ä
data:1DFA C1                                  .db 0C1h ; Á
data:1DFB D4                                  .db 0D4h ; Ô
data:1DFC C1                                  .db 0C1h ; Á
data:1DFD A0                                  .db 0A0h ;  
data:1DFE C4                                  .db 0C4h ; Ä
data:1DFF C9                                  .db 0C9h ; É
data:1E00 D3                                  .db 0D3h ; Ó
data:1E01 CB                                  .db 0CBh ; Ë
data:1E02 BA                                  .db 0BAh ; º
data:1E03 8D                                  .db  8Dh ; 
data:1E04 AD                                  .db 0ADh ; ­
data:1E05 AD                                  .db 0ADh ; ­
data:1E06 AD                                  .db 0ADh ; ­
data:1E07 AD                                  .db 0ADh ; ­
data:1E08 AD                                  .db 0ADh ; ­
data:1E09 AD                                  .db 0ADh ; ­
data:1E0A AD                                  .db 0ADh ; ­
data:1E0B AD                                  .db 0ADh ; ­
data:1E0C AD                                  .db 0ADh ; ­
data:1E0D AD                                  .db 0ADh ; ­
data:1E0E AD                                  .db 0ADh ; ­
data:1E0F AD                                  .db 0ADh ; ­
data:1E10 AD                                  .db 0ADh ; ­
data:1E11 AD                                  .db 0ADh ; ­
data:1E12 AD                                  .db 0ADh ; ­
data:1E13 AD                                  .db 0ADh ; ­
data:1E14 AD                                  .db 0ADh ; ­
data:1E15 AD                                  .db 0ADh ; ­
data:1E16 AD                                  .db 0ADh ; ­
data:1E17 AD                                  .db 0ADh ; ­
data:1E18 AD                                  .db 0ADh ; ­
data:1E19 AD                                  .db 0ADh ; ­
data:1E1A 8D                                  .db  8Dh ; 
data:1E1B 8D                                  .db  8Dh ; 
data:1E1C C4                                  .db 0C4h ; Ä
data:1E1D C9                                  .db 0C9h ; É
data:1E1E D3                                  .db 0D3h ; Ó
data:1E1F CB                                  .db 0CBh ; Ë
data:1E20 C5                                  .db 0C5h ; Å
data:1E21 D4                                  .db 0D4h ; Ô
data:1E22 D4                                  .db 0D4h ; Ô
data:1E23 C5                                  .db 0C5h ; Å
data:1E24 A0                                  .db 0A0h ;  
data:1E25 D7                                  .db 0D7h ; ×
data:1E26 C9                                  .db 0C9h ; É
data:1E27 CC                                  .db 0CCh ; Ì
data:1E28 CC                                  .db 0CCh ; Ì
data:1E29 A0                                  .db 0A0h ;  
data:1E2A CE                                  .db 0CEh ; Î
data:1E2B CF                                  .db 0CFh ; Ï
data:1E2C D4                                  .db 0D4h ; Ô
data:1E2D A0                                  .db 0A0h ;  
data:1E2E C2                                  .db 0C2h ; Â
data:1E2F CF                                  .db 0CFh ; Ï
data:1E30 CF                                  .db 0CFh ; Ï
data:1E31 D4                                  .db 0D4h ; Ô
data:1E32 8D                                  .db  8Dh ; 
data:1E33 8D                                  .db  8Dh ; 
data:1E34 A0                                  .db 0A0h ;  
data:1E35 C9                                  .db 0C9h ; É
data:1E36 CE                                  .db 0CEh ; Î
data:1E37 D3                                  .db 0D3h ; Ó
data:1E38 C5                                  .db 0C5h ; Å
data:1E39 D2                                  .db 0D2h ; Ò
data:1E3A D4                                  .db 0D4h ; Ô
data:1E3B A0                                  .db 0A0h ;  
data:1E3C CE                                  .db 0CEh ; Î
data:1E3D C5                                  .db 0C5h ; Å
data:1E3E D7                                  .db 0D7h ; ×
data:1E3F A0                                  .db 0A0h ;  
data:1E40 C4                                  .db 0C4h ; Ä
data:1E41 C9                                  .db 0C9h ; É
data:1E42 D3                                  .db 0D3h ; Ó
data:1E43 CB                                  .db 0CBh ; Ë
data:1E44 A0                                  .db 0A0h ;  
data:1E45 C1                                  .db 0C1h ; Á
data:1E46 CE                                  .db 0CEh ; Î
data:1E47 C4                                  .db 0C4h ; Ä
data:1E48 8D                                  .db  8Dh ; 
data:1E49 A0                                  .db 0A0h ;  
data:1E4A C8                                  .db 0C8h ; È
data:1E4B C9                                  .db 0C9h ; É
data:1E4C D4                                  .db 0D4h ; Ô
data:1E4D A0                                  .db 0A0h ;  
data:1E4E C1                                  .db 0C1h ; Á
data:1E4F A0                                  .db 0A0h ;  
data:1E50 CB                                  .db 0CBh ; Ë
data:1E51 C5                                  .db 0C5h ; Å
data:1E52 D9                                  .db 0D9h ; Ù
data:1E53 A0                                  .db 0A0h ;  
data:1E54 D4                                  .db 0D4h ; Ô
data:1E55 CF                                  .db 0CFh ; Ï
data:1E56 A0                                  .db 0A0h ;  
data:1E57 D2                                  .db 0D2h ; Ò
data:1E58 C5                                  .db 0C5h ; Å
data:1E59 C2                                  .db 0C2h ; Â
data:1E5A CF                                  .db 0CFh ; Ï
data:1E5B CF                                  .db 0CFh ; Ï
data:1E5C D4                                  .db 0D4h ; Ô
data:1E5D 8D                                  .db  8Dh ; 
data:1E5E 8D                                  .db  8Dh ; 
data:1E5F A0                                  .db 0A0h ;  
data:1E60 A0                                  .db 0A0h ;  
data:1E61 A0                                  .db 0A0h ;  
data:1E62 A0                                  .db 0A0h ;  
data:1E63 A0                                  .db 0A0h ;  
data:1E64 A0                                  .db 0A0h ;  
data:1E65 A0                                  .db 0A0h ;  
data:1E66 A0                                  .db 0A0h ;  
data:1E67 A0                                  .db 0A0h ;  
data:1E68 A0                                  .db 0A0h ;  
data:1E69 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
data:1E69 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
data:1E69 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
data:1E69 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
data:1E69 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
data:1E69 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
data:1E69 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
data:1E69 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
data:1E69 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0
data:1E69 00 00 00 00+; end of 'data'
data:1E69 00 00 00 00+
ROM:6000             ; ---------------------------------------------------------------------------
ROM:6000             ; File Name   : E:\Projects\pace\pacedev.net\sw\re\platform\appleii\loderun\lr_disk.bin
ROM:6000             ; Format      : Binary file
ROM:6000             ; Base Address: 0000h Range: 6000h - C000h Loaded length: 6000h
ROM:6000             ; ===========================================================================
ROM:6000
ROM:6000             ; Segment type: Pure code
ROM:6000                                     ;.segment ROM
ROM:6000                                     .org 6000h
ROM:6000
ROM:6000             START:
ROM:6000 20 A2 87                            JSR     detect_paddles
ROM:6003 A9 01                               LDA     #1
ROM:6005 20 59 63                            JSR     read_disk_and_chk_sig
ROM:6008             ; START OF FUNCTION CHUNK FOR read_disk_and_chk_sig
ROM:6008
ROM:6008             display_title_screen:
ROM:6008 20 51 7A                            JSR     gcls1
ROM:600B A9 FF                               LDA     #0FFh
ROM:600D 8D 31 60                            STA     loc_6030+1
ROM:6010 A9 0E                               LDA     #0Eh
ROM:6012 8D 32 60                            STA     loc_6030+2              ; $1F00-1
ROM:6015 A0 00                               LDY     #0
ROM:6017 84 86                               STY     row
ROM:6019 84 A7                               STY     attract_mode            ; flag game mode
ROM:601B 84 96                               STY     level_0_based
ROM:601D A9 20                               LDA     #20h ; ' '              ; MSB of hires page 1
ROM:601F 85 1F                               STA     hires_page_msb_1
ROM:6021 85 87                               STA     display_char_page
ROM:6023
ROM:6023             loc_6023:
ROM:6023 20 31 7A                            JSR     calc_line_addr_for_scanline
ROM:6026 A0 00                               LDY     #0
ROM:6028
ROM:6028             loc_6028:                                               ; lsb of address
ROM:6028 EE 31 60                            INC     loc_6030+1
ROM:602B D0 03                               BNE     loc_6030
ROM:602D EE 32 60                            INC     loc_6030+2              ; msb of address
ROM:602D             ; END OF FUNCTION CHUNK FOR read_disk_and_chk_sig
ROM:6030
ROM:6030             loc_6030:                                               ; $0F00-????
ROM:6030 AD 28 60                            LDA     loc_6028
ROM:6033 F0 0A                               BEQ     loc_603F                ; end of line data? yes, go
ROM:6035 10 05                               BPL     loc_603C                ; +ve?, yes X value
ROM:6037 91 0C                               STA     (lsb_line_addr_pg1),Y   ; put byte on screen
ROM:6039 C8                                  INY
ROM:603A 10 EC                               BPL     loc_6028
ROM:603C
ROM:603C             loc_603C:
ROM:603C A8                                  TAY
ROM:603D 10 E9                               BPL     loc_6028
ROM:603F
ROM:603F             loc_603F:                                               ; next scan line
ROM:603F E6 86                               INC     row
ROM:6041 A4 86                               LDY     row
ROM:6043 C0 C0                               CPY     #192                    ; bottom of screen?
ROM:6045 90 DC                               BCC     loc_6023                ; no, loop
ROM:6047 8D 54 C0                            STA     0C054h                  ; select text/graphics page 1
ROM:604A 8D 57 C0                            STA     0C057h                  ; select HIRES
ROM:604D 8D 52 C0                            STA     0C052h                  ; clear mixed mode (full screen)
ROM:6050 8D 50 C0                            STA     0C050h                  ; display graphics
ROM:6053 4C 8E 61                            JMP     title_wait_for_key
ROM:6056             ; ---------------------------------------------------------------------------
ROM:6056
ROM:6056             zero_score_and_init_game:
ROM:6056 A9 00                               LDA     #0
ROM:6058 85 8E                               STA     score_1e1_1
ROM:605A 85 8F                               STA     score_1e3_1e2
ROM:605C 85 90                               STA     score_1e5_1e4
ROM:605E 85 91                               STA     score_1e6               ; zero score
ROM:6060 85 97                               STA     unused_97
ROM:6062 85 A5                               STA     wipe_next_time
ROM:6064 85 53                               STA     guard_respawn_col
ROM:6066 85 AB                               STA     demo_inp_cnt
ROM:6068 85 A8                               STA     lsb_demo_inp_ptr
ROM:606A A9 9B                               LDA     #9Bh ; ''
ROM:606C 85 A9                               STA     msb_demo_inp_ptr
ROM:606E A9 05                               LDA     #5                      ; number of lives
ROM:6070 85 98                               STA     no_lives
ROM:6072 A5 A7                               LDA     attract_mode
ROM:6074 4A                                  LSR     A
ROM:6075 F0 22                               BEQ     loc_6099
ROM:6077 A9 01                               LDA     #1
ROM:6079 20 59 63                            JSR     read_disk_and_chk_sig
ROM:607C C9 00                               CMP     #0
ROM:607E D0 06                               BNE     loc_6086
ROM:6080 20 06 81                            JSR     disk_not_lode_runner
ROM:6083 4C 08 60                            JMP     display_title_screen
ROM:6086             ; ---------------------------------------------------------------------------
ROM:6086
ROM:6086             loc_6086:
ROM:6086 AD FF 1F                            LDA     1FFFh
ROM:6089 D0 06                               BNE     loc_6091
ROM:608B A5 36                               LDA     off_36
ROM:608D A6 37                               LDX     off_36+1
ROM:608F D0 04                               BNE     loc_6095
ROM:6091
ROM:6091             loc_6091:
ROM:6091 A5 38                               LDA     byte_38
ROM:6093 A6 39                               LDX     unk_39
ROM:6095
ROM:6095             loc_6095:
ROM:6095 85 24                               STA     unk_24
ROM:6097 86 25                               STX     unk_25
ROM:6099
ROM:6099             loc_6099:
ROM:6099 20 AD 79                            JSR     cls_and_display_game_status
ROM:609C 8D 54 C0                            STA     0C054h                  ; select text/graphics page 1
ROM:609F
ROM:609F             main_game_loop:
ROM:609F A2 01                               LDX     #1
ROM:60A1 20 38 62                            JSR     init_read_unpack_display_level
ROM:60A4 A9 00                               LDA     #0
ROM:60A6 85 9E                               STA     key_1
ROM:60A8 85 9F                               STA     key_2
ROM:60AA A5 A7                               LDA     attract_mode
ROM:60AC 4A                                  LSR     A
ROM:60AD F0 10                               BEQ     loc_60BF
ROM:60AF 20 9F 86                            JSR     keybd_flush
ROM:60B2 A5 00                               LDA     current_col
ROM:60B4 85 85                               STA     col
ROM:60B6 A5 01                               LDA     current_row
ROM:60B8 85 86                               STA     row
ROM:60BA A9 09                               LDA     #9                      ; player
ROM:60BC 20 00 87                            JSR     blink_char_and_wait_for_key
ROM:60BF
ROM:60BF             loc_60BF:
ROM:60BF A2 00                               LDX     #0
ROM:60C1 86 9C                               STX     dig_dir
ROM:60C3 86 54                               STX     sndq_length             ; no sound playing
ROM:60C5 A5 97                               LDA     unused_97               ; should be 0
ROM:60C7 18                                  CLC
ROM:60C8 65 8D                               ADC     no_guards
ROM:60CA A8                                  TAY
ROM:60CB BE 14 62                            LDX     x3_tbl,Y                ; *3
ROM:60CE BD A7 6C                            LDA     byte_6CA7,X
ROM:60D1 85 60                               STA     byte_60
ROM:60D3 BD A8 6C                            LDA     (byte_6CA7+1),X
ROM:60D6 85 61                               STA     byte_61
ROM:60D8 BD A9 6C                            LDA     (byte_6CA7+2),X
ROM:60DB 85 62                               STA     byte_62
ROM:60DD A4 97                               LDY     unused_97               ; should be 0
ROM:60DF B9 1D 62                            LDA     guard_trap_cnt_init_tbl,Y ; should be 1st entry (0x26)
ROM:60E2 85 5F                               STA     guard_trap_cnt_init     ; how long guards remain in holes
ROM:60E4
ROM:60E4             in_level_loop:                                          ; handle moving?
ROM:60E4 20 BD 64                            JSR     handle_player
ROM:60E7 A5 9A                               LDA     level_active            ; alive?
ROM:60E9 F0 54                               BEQ     dec_lives               ; no, go
ROM:60EB 20 11 88                            JSR     throttle_and_update_sound
ROM:60EE A5 93                               LDA     no_gold                 ; any gold remaining?
ROM:60F0 D0 03                               BNE     loc_60F5                ; yes, skip
ROM:60F2 20 31 86                            JSR     draw_end_of_screen_ladder
ROM:60F5
ROM:60F5             loc_60F5:
ROM:60F5 A5 01                               LDA     current_row
ROM:60F7 D0 0E                               BNE     loc_6107                ; not top row
ROM:60F9 A5 03                               LDA     y_offset_within_tile
ROM:60FB C9 02                               CMP     #2
ROM:60FD D0 08                               BNE     loc_6107
ROM:60FF A5 93                               LDA     no_gold                 ; any gold remaining?
ROM:6101 F0 17                               BEQ     next_level              ; no, skip
ROM:6103 C9 FF                               CMP     #0FFh                   ; issue with eos ladder?
ROM:6105 F0 13                               BEQ     next_level              ; yes, go
ROM:6107
ROM:6107             loc_6107:                                               ; enemy respawn & hole refilling
ROM:6107 20 F4 75                            JSR     respawn_guards_and_update_holes
ROM:610A A5 9A                               LDA     level_active            ; alive?
ROM:610C F0 31                               BEQ     dec_lives               ; no, go
ROM:610E 20 11 88                            JSR     throttle_and_update_sound ; sound?
ROM:6111 20 82 6C                            JSR     handle_guards           ; update guards
ROM:6114 A5 9A                               LDA     level_active            ; alive?
ROM:6116 F0 27                               BEQ     dec_lives               ; no, go
ROM:6118 D0 CA                               BNE     in_level_loop
ROM:611A
ROM:611A             next_level:                                             ; next level
ROM:611A E6 A6                               INC     level
ROM:611C E6 96                               INC     level_0_based           ; level-1?
ROM:611E E6 98                               INC     no_lives                ; extra life
ROM:6120 D0 02                               BNE     loc_6124                ; skip if no. lives didn't wrap
ROM:6122 C6 98                               DEC     no_lives                ; fix to 255
ROM:6124
ROM:6124             loc_6124:                                               ; loop 15 times
ROM:6124 A2 0F                               LDX     #15
ROM:6126 86 5C                               STX     farthest_updown_plyr_row
ROM:6128
ROM:6128             loc_6128:
ROM:6128 A0 01                               LDY     #1
ROM:612A A9 00                               LDA     #0                      ; add 100
ROM:612C 20 92 7A                            JSR     update_and_display_score
ROM:612F 20 2A 62                            JSR     play_score_sound        ; some sound stuff
ROM:6132 20 2A 62                            JSR     play_score_sound
ROM:6135 20 2A 62                            JSR     play_score_sound
ROM:6138 C6 5C                               DEC     farthest_updown_plyr_row ; done?
ROM:613A D0 EC                               BNE     loc_6128                ; no, loop
ROM:613C
ROM:613C             next_level_cont:
ROM:613C 4C 9F 60                            JMP     main_game_loop
ROM:613F             ; ---------------------------------------------------------------------------
ROM:613F
ROM:613F             dec_lives:
ROM:613F C6 98                               DEC     no_lives
ROM:6141 20 70 7A                            JSR     display_no_lives
ROM:6144 20 E1 87                            JSR     queue_sound
ROM:6144             ; ---------------------------------------------------------------------------
ROM:6147 02 40 02 40+                        .dw 4002h, 4002h, 5003h, 5003h, 6004h, 6004h, 7005h, 7005h
ROM:6147 03 50 03 50+                        .dw 8006h, 8006h, 9007h, 9007h, 0A008h, 0A008h, 0B009h, 0B009h
ROM:6147 04 60 04 60+                        .dw 0C00Ah, 0C00Ah, 0D00Bh, 0D00Bh, 0E00Ch, 0E00Ch, 0F00Dh
ROM:6147 05 70 05 70+                        .dw 0F00Dh
ROM:6177             ; ---------------------------------------------------------------------------
ROM:6177 00                                  BRK
ROM:6178             ; ---------------------------------------------------------------------------
ROM:6178
ROM:6178             loc_6178:                                               ; sound stuff!
ROM:6178 20 11 88                            JSR     throttle_and_update_sound
ROM:617B B0 FB                               BCS     loc_6178
ROM:617D A5 A7                               LDA     attract_mode
ROM:617F 4A                                  LSR     A                       ; attract mode?
ROM:6180 F0 4E                               BEQ     finish_demo             ; yes, go
ROM:6182 A5 98                               LDA     no_lives                ; any lives left?
ROM:6184 D0 B6                               BNE     next_level_cont         ; yes, continue
ROM:6186 20 C8 84                            JSR     check_and_update_high_score_tbl ; some score stuff
ROM:6189 20 1A 8B                            JSR     game_over_animation
ROM:618C B0 68                               BCS     check_start_new_game
ROM:618E
ROM:618E             title_wait_for_key:
ROM:618E 20 9F 86                            JSR     keybd_flush
ROM:6191 A2 FF                               LDX     #0FFh
ROM:6193 A0 FF                               LDY     #0FFh
ROM:6195 A9 03                               LDA     #3                      ; timeout = 255*255*3
ROM:6197 85 86                               STA     row
ROM:6199
ROM:6199             loc_6199:
ROM:6199 A5 95                               LDA     paddles_detected
ROM:619B C9 CB                               CMP     #0CBh ; 'Ë'
ROM:619D F0 0A                               BEQ     loc_61A9
ROM:619F AD 62 C0                            LDA     0C062h                  ; closed apple key read
ROM:61A2 30 5D                               BMI     start_new_game          ; pressed, go
ROM:61A4 AD 61 C0                            LDA     0C061h                  ; open apple key read
ROM:61A7 30 58                               BMI     start_new_game          ; pressed, go
ROM:61A9
ROM:61A9             loc_61A9:                                               ; read keyboard
ROM:61A9 AD 00 C0                            LDA     0C000h
ROM:61AC 30 48                               BMI     check_start_new_game    ; key pressed, go
ROM:61AE CA                                  DEX
ROM:61AF D0 E8                               BNE     loc_6199
ROM:61B1 88                                  DEY
ROM:61B2 D0 E5                               BNE     loc_6199
ROM:61B4 C6 86                               DEC     row                     ; timed-out?
ROM:61B6 D0 E1                               BNE     loc_6199                ; no, loop
ROM:61B8 A5 A7                               LDA     attract_mode            ; attract mode?
ROM:61BA D0 22                               BNE     loc_61DE                ; yes, skip
ROM:61BC A2 01                               LDX     #1
ROM:61BE 86 A7                               STX     attract_mode
ROM:61C0 86 A6                               STX     level
ROM:61C2 86 AC                               STX     demo_not_interrupted
ROM:61C4 86 9D                               STX     no_cheat
ROM:61C6 A6 99                               LDX     sound_enabled
ROM:61C8 8E D1 61                            STX     finish_demo+1           ; self-modifying code
ROM:61CB 85 99                               STA     sound_enabled           ; attract_mode
ROM:61CD 4C 56 60                            JMP     zero_score_and_init_game
ROM:61D0             ; ---------------------------------------------------------------------------
ROM:61D0
ROM:61D0             finish_demo:                                            ; modified (restore setting)
ROM:61D0 A9 00                               LDA     #0
ROM:61D2 85 99                               STA     sound_enabled
ROM:61D4 AD 00 C0                            LDA     0C000h                  ; read keyboard
ROM:61D7 A6 AC                               LDX     demo_not_interrupted    ; interrupted?
ROM:61D9 F0 1B                               BEQ     check_start_new_game    ; yes, go
ROM:61DB 4C 8E 61                            JMP     title_wait_for_key
ROM:61DE             ; ---------------------------------------------------------------------------
ROM:61DE
ROM:61DE             loc_61DE:
ROM:61DE C9 01                               CMP     #1
ROM:61E0 D0 11                               BNE     jmp_display_title_screen
ROM:61E2 F0 05                               BEQ     high_score_screen
ROM:61E4
ROM:61E4             read_and_display_scores:
ROM:61E4 A9 01                               LDA     #1
ROM:61E6 20 59 63                            JSR     read_disk_and_chk_sig   ; disk access
ROM:61E9
ROM:61E9             high_score_screen:
ROM:61E9 20 6B 78                            JSR     cls_and_display_high_scores
ROM:61EC A9 02                               LDA     #2
ROM:61EE 85 A7                               STA     attract_mode
ROM:61F0 4C 8E 61                            JMP     title_wait_for_key
ROM:61F3             ; ---------------------------------------------------------------------------
ROM:61F3
ROM:61F3             jmp_display_title_screen:
ROM:61F3 4C 08 60                            JMP     display_title_screen
ROM:61F6             ; ---------------------------------------------------------------------------
ROM:61F6
ROM:61F6             check_start_new_game:                                   ; keyboard strobe
ROM:61F6 8D 10 C0                            STA     0C010h
ROM:61F9 C9 85                               CMP     #85h ; ''              ; 'e'?
ROM:61FB F0 14                               BEQ     jmp_board_editor        ; yes, go to editor
ROM:61FD C9 8D                               CMP     #8Dh ; ''              ; <ENTER>?
ROM:61FF F0 E3                               BEQ     read_and_display_scores
ROM:6201
ROM:6201             start_new_game:
ROM:6201 A2 00                               LDX     #0
ROM:6203 86 96                               STX     level_0_based
ROM:6205 E8                                  INX
ROM:6206 86 A6                               STX     level
ROM:6208 86 9D                               STX     no_cheat
ROM:620A A9 02                               LDA     #2
ROM:620C 85 A7                               STA     attract_mode
ROM:620E 4C 56 60                            JMP     zero_score_and_init_game
ROM:6211             ; ---------------------------------------------------------------------------
ROM:6211
ROM:6211             jmp_board_editor:
ROM:6211 4C 84 7B                            JMP     enter_board_editor
ROM:6211             ; ---------------------------------------------------------------------------
ROM:6214 00 03 06 09+x3_tbl:                 .db 0, 3, 6, 9, 12, 15, 18, 21, 24
ROM:621D 26 26 2E 44+guard_trap_cnt_init_tbl:.db 26h, 26h, 2Eh, 44h, 47h, 49h, 4Ah, 4Bh, 4Ch, 4Dh, 4Eh
ROM:621D 47 49 4A 4B+                        .db 4Fh, 50h
ROM:622A
ROM:622A             ; =============== S U B R O U T I N E =======================================
ROM:622A
ROM:622A
ROM:622A             play_score_sound:
ROM:622A A5 5C                               LDA     farthest_updown_plyr_row
ROM:622C 0A                                  ASL     A
ROM:622D 0A                                  ASL     A
ROM:622E 0A                                  ASL     A
ROM:622F 0A                                  ASL     A
ROM:6230 A2 06                               LDX     #6
ROM:6232 20 D5 87                            JSR     queue_note
ROM:6235 4C 11 88                            JMP     throttle_and_update_sound
ROM:6235             ; End of function play_score_sound
ROM:6235
ROM:6238
ROM:6238             ; =============== S U B R O U T I N E =======================================
ROM:6238
ROM:6238
ROM:6238             init_read_unpack_display_level:
ROM:6238 86 A2                               STX     editor_n
ROM:623A A2 FF                               LDX     #0FFh
ROM:623C 86 00                               STX     current_col
ROM:623E E8                                  INX                             ; =0
ROM:623F 86 A3                               STX     no_eos_ladder_tiles
ROM:6241 86 93                               STX     no_gold
ROM:6243 86 8D                               STX     no_guards
ROM:6245 86 19                               STX     curr_guard
ROM:6247 86 A0                               STX     dig_sprite
ROM:6249 86 92                               STX     packed_byte_cnt
ROM:624B 86 1A                               STX     nibble_cnt
ROM:624D 86 86                               STX     row
ROM:624F 8A                                  TXA
ROM:6250 A2 1E                               LDX     #1Eh                    ; number of holes
ROM:6252
ROM:6252             loc_6252:                                               ; hole counters
ROM:6252 9D E0 0C                            STA     hole_cnt,X
ROM:6255 CA                                  DEX
ROM:6256 10 FA                               BPL     loc_6252                ; clear all counters
ROM:6258 A2 05                               LDX     #5                      ; number of guards
ROM:625A
ROM:625A             loc_625A:
ROM:625A 9D 98 0C                            STA     guard_cnt,X
ROM:625D CA                                  DEX
ROM:625E 10 FA                               BPL     loc_625A                ; loop through all guards
ROM:6260 A9 01                               LDA     #1
ROM:6262 85 9A                               STA     level_active
ROM:6264 20 0E 63                            JSR     read_level_data
ROM:6267 A4 86                               LDY     row
ROM:6269
ROM:6269             loc_6269:
ROM:6269 B9 05 1C                            LDA     lsb_row_a_tbl,Y
ROM:626C 85 06                               STA     lsb_row_lda_dyn
ROM:626E 85 08                               STA     lsb_row_lda_static
ROM:6270 B9 15 1C                            LDA     msb_row_a_dyn_tbl,Y
ROM:6273 85 07                               STA     msb_row_lda_dyn
ROM:6275 B9 25 1C                            LDA     msb_row_a_static_tbl,Y
ROM:6278 85 09                               STA     msb_row_lda_static      ; setup tilemap address
ROM:627A A9 00                               LDA     #0                      ; first column
ROM:627C 85 85                               STA     col
ROM:627E
ROM:627E             loc_627E:                                               ; nibble count
ROM:627E A5 1A                               LDA     nibble_cnt
ROM:6280 4A                                  LSR     A                       ; bit0 -> carry
ROM:6281 A4 92                               LDY     packed_byte_cnt         ; data counter
ROM:6283 B9 00 0D                            LDA     0D00h,Y                 ; level data from disk buffer
ROM:6286 B0 04                               BCS     loc_628C                ; high nibble? yes, skip
ROM:6288 29 0F                               AND     #0Fh                    ; low nibble only
ROM:628A 10 06                               BPL     loc_6292
ROM:628C
ROM:628C             loc_628C:
ROM:628C 4A                                  LSR     A
ROM:628D 4A                                  LSR     A
ROM:628E 4A                                  LSR     A
ROM:628F 4A                                  LSR     A                       ; high to low nibble
ROM:6290 E6 92                               INC     packed_byte_cnt         ; inc data counter
ROM:6292
ROM:6292             loc_6292:                                               ; inc nibble count
ROM:6292 E6 1A                               INC     nibble_cnt
ROM:6294 A4 85                               LDY     col
ROM:6296 C9 0A                               CMP     #0Ah                    ; 0-9?
ROM:6298 90 02                               BCC     loc_629C                ; yes, skip
ROM:629A A9 00                               LDA     #0                      ; invalid data
ROM:629C
ROM:629C             loc_629C:                                               ; store level data nibble as byte
ROM:629C 91 06                               STA     (lsb_row_lda_dyn),Y
ROM:629E 91 08                               STA     (lsb_row_lda_static),Y  ; store level data nibble as byte (copy)
ROM:62A0 E6 85                               INC     col                     ; next column
ROM:62A2 A5 85                               LDA     col
ROM:62A4 C9 1C                               CMP     #28                     ; last column?
ROM:62A6 90 D6                               BCC     loc_627E                ; no, loop
ROM:62A8 E6 86                               INC     row
ROM:62AA A4 86                               LDY     row
ROM:62AC C0 10                               CPY     #16                     ; last row?
ROM:62AE 90 B9                               BCC     loc_6269                ; no, loop
ROM:62B0 20 B3 63                            JSR     init_and_draw_level
ROM:62B3 90 0E                               BCC     draw_ok                 ; if no error
ROM:62B5 A5 96                               LDA     level_0_based
ROM:62B7 F0 0B                               BEQ     jmp_display_title_screen
ROM:62B9 A2 00                               LDX     #0
ROM:62BB 86 96                               STX     level_0_based
ROM:62BD E6 97                               INC     unused_97
ROM:62BF CA                                  DEX
ROM:62C0 4C 38 62                            JMP     init_read_unpack_display_level
ROM:62C3             ; ---------------------------------------------------------------------------
ROM:62C3
ROM:62C3             draw_ok:
ROM:62C3 60                                  RTS
ROM:62C4             ; ---------------------------------------------------------------------------
ROM:62C4
ROM:62C4             jmp_display_title_screen:
ROM:62C4 4C 08 60                            JMP     display_title_screen
ROM:62C4             ; End of function init_read_unpack_display_level
ROM:62C4
ROM:62C7
ROM:62C7             ; =============== S U B R O U T I N E =======================================
ROM:62C7
ROM:62C7
ROM:62C7             sub_62C7:
ROM:62C7 A9 00                               LDA     #0
ROM:62C9 85 92                               STA     packed_byte_cnt
ROM:62CB 85 1A                               STA     nibble_cnt
ROM:62CD 85 86                               STA     row
ROM:62CF
ROM:62CF             loc_62CF:
ROM:62CF A4 86                               LDY     row
ROM:62D1 B9 05 1C                            LDA     lsb_row_a_tbl,Y
ROM:62D4 85 06                               STA     lsb_row_lda_dyn
ROM:62D6 B9 15 1C                            LDA     msb_row_a_dyn_tbl,Y
ROM:62D9 85 07                               STA     msb_row_lda_dyn
ROM:62DB A0 00                               LDY     #0
ROM:62DD 84 85                               STY     col
ROM:62DF
ROM:62DF             loc_62DF:
ROM:62DF A5 1A                               LDA     nibble_cnt
ROM:62E1 4A                                  LSR     A
ROM:62E2 B1 06                               LDA     (lsb_row_lda_dyn),Y
ROM:62E4 B0 04                               BCS     loc_62EA
ROM:62E6 85 1E                               STA     msg_char
ROM:62E8 10 0D                               BPL     loc_62F7
ROM:62EA
ROM:62EA             loc_62EA:
ROM:62EA 0A                                  ASL     A
ROM:62EB 0A                                  ASL     A
ROM:62EC 0A                                  ASL     A
ROM:62ED 0A                                  ASL     A
ROM:62EE 05 1E                               ORA     msg_char
ROM:62F0 A4 92                               LDY     packed_byte_cnt
ROM:62F2 99 00 0D                            STA     0D00h,Y                 ; disk buffer address
ROM:62F5 E6 92                               INC     packed_byte_cnt
ROM:62F7
ROM:62F7             loc_62F7:
ROM:62F7 E6 1A                               INC     nibble_cnt
ROM:62F9 E6 85                               INC     col                     ; next column
ROM:62FB A4 85                               LDY     col
ROM:62FD C0 1C                               CPY     #28                     ; done all columns?
ROM:62FF 90 DE                               BCC     loc_62DF                ; no, loop
ROM:6301 E6 86                               INC     row                     ; next row
ROM:6303 A5 86                               LDA     row
ROM:6305 C9 10                               CMP     #16                     ; done all rows?
ROM:6307 90 C6                               BCC     loc_62CF                ; no, loop
ROM:6309 A9 02                               LDA     #2
ROM:630B 4C 0E 63                            JMP     read_level_data
ROM:630B             ; End of function sub_62C7
ROM:630B
ROM:630E
ROM:630E             ; =============== S U B R O U T I N E =======================================
ROM:630E
ROM:630E
ROM:630E             read_level_data:
ROM:630E 8D F4 B7                            STA     byte_B7F4
ROM:6311 A5 A7                               LDA     attract_mode
ROM:6313 4A                                  LSR     A
ROM:6314 F0 2F                               BEQ     read_attract_mode_levels ; already in memory, skip
ROM:6316 A5 96                               LDA     level_0_based           ; zero-based level
ROM:6318 4A                                  LSR     A
ROM:6319 4A                                  LSR     A
ROM:631A 4A                                  LSR     A
ROM:631B 4A                                  LSR     A
ROM:631C 18                                  CLC
ROM:631D 69 03                               ADC     #3                      ; calculate track # for level data
ROM:631F 8D EC B7                            STA     byte_B7EC               ; track
ROM:6322 A5 96                               LDA     level_0_based
ROM:6324 29 0F                               AND     #0Fh                    ; calculate sector # for level data
ROM:6326 8D ED B7                            STA     byte_B7ED               ; sector
ROM:6329 A9 00                               LDA     #0
ROM:632B 8D F0 B7                            STA     byte_B7F0
ROM:632E A9 0D                               LDA     #0Dh                    ; disk buffer address = $D00
ROM:6330 8D F1 B7                            STA     byte_B7F1
ROM:6333 A9 00                               LDA     #0
ROM:6335 8D EB B7                            STA     byte_B7EB
ROM:6338
ROM:6338             loc_6338:
ROM:6338 A0 E8                               LDY     #0E8h ; 'è'
ROM:633A A9 B7                               LDA     #0B7h ; '·'
ROM:633C 20 23 00                            JSR     unk_23
ROM:633F 90 03                               BCC     locret_6344             ; ok, return
ROM:6341 4C 08 60                            JMP     display_title_screen    ; problem!
ROM:6344             ; ---------------------------------------------------------------------------
ROM:6344
ROM:6344             locret_6344:
ROM:6344 60                                  RTS
ROM:6345             ; ---------------------------------------------------------------------------
ROM:6345
ROM:6345             read_attract_mode_levels:
ROM:6345 A5 A6                               LDA     level
ROM:6347 18                                  CLC
ROM:6348 69 9E                               ADC     #9Eh ; ''              ; calculate base address of level data
ROM:634A 85 0D                               STA     msb_line_addr_pg1
ROM:634C A0 00                               LDY     #0
ROM:634E 84 0C                               STY     lsb_line_addr_pg1
ROM:6350
ROM:6350             copy_level_data:
ROM:6350 B1 0C                               LDA     (lsb_line_addr_pg1),Y
ROM:6352 99 00 0D                            STA     0D00h,Y                 ; copy to low memory
ROM:6355 C8                                  INY                             ; next addr
ROM:6356 D0 F8                               BNE     copy_level_data         ; finished? no, loop
ROM:6358 60                                  RTS
ROM:6358             ; End of function read_level_data
ROM:6358
ROM:6359
ROM:6359             ; =============== S U B R O U T I N E =======================================
ROM:6359
ROM:6359
ROM:6359             read_disk_and_chk_sig:
ROM:6359
ROM:6359             ; FUNCTION CHUNK AT ROM:6008 SIZE 00000028 BYTES
ROM:6359
ROM:6359 8D F4 B7                            STA     byte_B7F4
ROM:635C A9 0C                               LDA     #0Ch
ROM:635E 8D EC B7                            STA     byte_B7EC
ROM:6361 A9 0F                               LDA     #0Fh
ROM:6363 8D ED B7                            STA     byte_B7ED
ROM:6366 A9 00                               LDA     #0
ROM:6368 8D F0 B7                            STA     byte_B7F0
ROM:636B A9 1F                               LDA     #1Fh
ROM:636D 8D F1 B7                            STA     byte_B7F1
ROM:6370 A9 00                               LDA     #0
ROM:6372 8D EB B7                            STA     byte_B7EB
ROM:6375 A0 E8                               LDY     #0E8h ; 'è'
ROM:6377 A9 B7                               LDA     #0B7h ; '·'
ROM:6379 20 A5 63                            JSR     sub_63A5
ROM:637C 90 03                               BCC     check_disk_signature
ROM:637E 4C 08 60                            JMP     display_title_screen
ROM:6381             ; ---------------------------------------------------------------------------
ROM:6381
ROM:6381             check_disk_signature:                                   ; number of letters-1
ROM:6381 A0 0A                               LDY     #10
ROM:6383 A9 00                               LDA     #0
ROM:6385 85 50                               STA     lchar_mask
ROM:6387
ROM:6387             loc_6387:                                               ; ptr "LODE RUNNER" in disk sector
ROM:6387 B9 F4 1F                            LDA     1FF4h,Y
ROM:638A 59 A8 63                            EOR     disk_signature,Y        ; signature text
ROM:638D 05 50                               ORA     lchar_mask              ; running XOR
ROM:638F 85 50                               STA     lchar_mask              ; save
ROM:6391 88                                  DEY                             ; done?
ROM:6392 10 F3                               BPL     loc_6387                ; no, loop
ROM:6394 A5 50                               LDA     lchar_mask              ; get running XOR
ROM:6396 F0 03                               BEQ     loc_639B                ; ok? yes, skip
ROM:6398 A9 00                               LDA     #0                      ; flag failure
ROM:639A 60                                  RTS
ROM:639B             ; ---------------------------------------------------------------------------
ROM:639B
ROM:639B             loc_639B:
ROM:639B A9 01                               LDA     #1
ROM:639D AE FF 1F                            LDX     1FFFh                   ; last byte in sector
ROM:63A0 D0 02                               BNE     locret_63A4
ROM:63A2 A9 FF                               LDA     #0FFh
ROM:63A4
ROM:63A4             locret_63A4:
ROM:63A4 60                                  RTS
ROM:63A4             ; End of function read_disk_and_chk_sig
ROM:63A4
ROM:63A5
ROM:63A5             ; =============== S U B R O U T I N E =======================================
ROM:63A5
ROM:63A5
ROM:63A5             sub_63A5:
ROM:63A5 6C 36 00                            JMP     (off_36)
ROM:63A5             ; End of function sub_63A5
ROM:63A5
ROM:63A5             ; ---------------------------------------------------------------------------
ROM:63A8 CC CF C4 C5+disk_signature:         .db 0CCh, 0CFh, 0C4h, 0C5h, 0A0h, 0D2h, 0D5h, 0CEh, 0CEh ; "LODE RUNNER"
ROM:63A8 A0 D2 D5 CE+                        .db 0C5h, 0D2h
ROM:63B3
ROM:63B3             ; =============== S U B R O U T I N E =======================================
ROM:63B3
ROM:63B3
ROM:63B3             init_and_draw_level:
ROM:63B3 A0 0F                               LDY     #15                     ; last row
ROM:63B5 84 86                               STY     row
ROM:63B7
ROM:63B7             loc_63B7:                                               ; lsb of row in level data
ROM:63B7 B9 05 1C                            LDA     lsb_row_a_tbl,Y         ; (level data $0800-)
ROM:63BA 85 06                               STA     lsb_row_lda_dyn
ROM:63BC 85 08                               STA     lsb_row_lda_static
ROM:63BE B9 15 1C                            LDA     msb_row_a_dyn_tbl,Y     ; msb of row in level data
ROM:63C1 85 07                               STA     msb_row_lda_dyn
ROM:63C3 B9 25 1C                            LDA     msb_row_a_static_tbl,Y  ; msb of row in level data (copy)
ROM:63C6 85 09                               STA     msb_row_lda_static
ROM:63C8 A0 1B                               LDY     #27                     ; last column
ROM:63CA 84 85                               STY     col
ROM:63CC
ROM:63CC             loc_63CC:                                               ; get object from tilemap 1
ROM:63CC B1 06                               LDA     (lsb_row_lda_dyn),Y
ROM:63CE A6 A2                               LDX     editor_n
ROM:63D0 F0 1C                               BEQ     loc_63EE
ROM:63D2 C9 06                               CMP     #6                      ; end-of_screen ladder?
ROM:63D4 D0 1A                               BNE     loc_63F0                ; no, skip
ROM:63D6 A6 A3                               LDX     no_eos_ladder_tiles
ROM:63D8 E0 2D                               CPX     #2Dh ; '-'              ; max?
ROM:63DA B0 0C                               BCS     loc_63E8                ; yes, skip
ROM:63DC E6 A3                               INC     no_eos_ladder_tiles
ROM:63DE E8                                  INX
ROM:63DF A5 86                               LDA     row
ROM:63E1 9D 30 0C                            STA     eos_ladder_row,X        ; store eos ladder row
ROM:63E4 98                                  TYA
ROM:63E5 9D 00 0C                            STA     eos_ladder_col,X        ; store eos ladder col
ROM:63E8
ROM:63E8             loc_63E8:
ROM:63E8 A9 00                               LDA     #0
ROM:63EA 91 06                               STA     (lsb_row_lda_dyn),Y     ; update tilemap 1
ROM:63EC 91 08                               STA     (lsb_row_lda_static),Y  ; update tilemap 2
ROM:63EE
ROM:63EE             loc_63EE:
ROM:63EE F0 60                               BEQ     loc_6450
ROM:63F0
ROM:63F0             loc_63F0:                                               ; gold?
ROM:63F0 C9 07                               CMP     #7
ROM:63F2 D0 04                               BNE     loc_63F8                ; no, skip
ROM:63F4 E6 93                               INC     no_gold
ROM:63F6 D0 58                               BNE     loc_6450                ; always
ROM:63F8
ROM:63F8             loc_63F8:                                               ; enemy?
ROM:63F8 C9 08                               CMP     #8
ROM:63FA D0 2E                               BNE     loc_642A                ; no, skip
ROM:63FC A6 8D                               LDX     no_guards
ROM:63FE E0 05                               CPX     #5                      ; max?
ROM:6400 B0 E6                               BCS     loc_63E8                ; yes, skip
ROM:6402 E6 8D                               INC     no_guards               ; add a guard
ROM:6404 E8                                  INX
ROM:6405 98                                  TYA
ROM:6406 9D 60 0C                            STA     guard_col,X
ROM:6409 A5 86                               LDA     row
ROM:640B 9D 68 0C                            STA     guard_row,X
ROM:640E A9 00                               LDA     #0
ROM:6410 9D 70 0C                            STA     guard_state,X
ROM:6413 9D 88 0C                            STA     guard_sprite,X
ROM:6416 A9 02                               LDA     #2
ROM:6418 9D 78 0C                            STA     guard_x_offset,X
ROM:641B 9D 80 0C                            STA     guard_y_offset,X
ROM:641E A9 00                               LDA     #0
ROM:6420 91 08                               STA     (lsb_row_lda_static),Y  ; update tilemap 2
ROM:6422 A9 08                               LDA     #8                      ; enemy
ROM:6424 D0 2A                               BNE     loc_6450                ; always
ROM:6426
ROM:6426             loc_6426:
ROM:6426 10 8F                               BPL     loc_63B7
ROM:6428
ROM:6428             loc_6428:
ROM:6428 10 A2                               BPL     loc_63CC
ROM:642A
ROM:642A             loc_642A:                                               ; player?
ROM:642A C9 09                               CMP     #9
ROM:642C D0 1C                               BNE     loc_644A                ; no, skip
ROM:642E A6 00                               LDX     current_col
ROM:6430 10 B6                               BPL     loc_63E8
ROM:6432 84 00                               STY     current_col
ROM:6434 A6 86                               LDX     row
ROM:6436 86 01                               STX     current_row
ROM:6438 A2 02                               LDX     #2
ROM:643A 86 02                               STX     x_offset_within_tile
ROM:643C 86 03                               STX     y_offset_within_tile
ROM:643E A2 08                               LDX     #8
ROM:6440 86 04                               STX     sprite_index
ROM:6442 A9 00                               LDA     #0
ROM:6444 91 08                               STA     (lsb_row_lda_static),Y  ; update tilemap 2
ROM:6446 A9 09                               LDA     #9                      ; player
ROM:6448 D0 06                               BNE     loc_6450                ; always
ROM:644A
ROM:644A             loc_644A:                                               ; fall-thru?
ROM:644A C9 05                               CMP     #5
ROM:644C D0 02                               BNE     loc_6450                ; no, skip
ROM:644E A9 01                               LDA     #1                      ; set to display diggable brick
ROM:6450
ROM:6450             loc_6450:                                               ; render on background
ROM:6450 20 B0 82                            JSR     display_char_pg2
ROM:6453 C6 85                               DEC     col                     ; next column
ROM:6455 A4 85                               LDY     col                     ; finished all columns?
ROM:6457 10 CF                               BPL     loc_6428                ; no, loop
ROM:6459 C6 86                               DEC     row                     ; next row
ROM:645B A4 86                               LDY     row                     ; finished all rows?
ROM:645D 10 C7                               BPL     loc_6426                ; no, loop
ROM:645F A5 A2                               LDA     editor_n
ROM:6461 F0 06                               BEQ     loc_6469
ROM:6463 A5 00                               LDA     current_col
ROM:6465 10 24                               BPL     draw_level              ; draw the level (with wipe)
ROM:6467 38                                  SEC
ROM:6468 60                                  RTS
ROM:6469             ; ---------------------------------------------------------------------------
ROM:6469
ROM:6469             loc_6469:                                               ; hires page 1
ROM:6469 A9 20                               LDA     #20h ; ' '
ROM:646B 85 0F                               STA     msb_line_addr_pg2
ROM:646D A9 40                               LDA     #40h ; '@'              ; hires page 2
ROM:646F 85 0D                               STA     msb_line_addr_pg1
ROM:6471 A9 00                               LDA     #0
ROM:6473 85 0E                               STA     lsb_line_addr_pg2
ROM:6475 85 0C                               STA     lsb_line_addr_pg1
ROM:6477 A8                                  TAY
ROM:6478
ROM:6478             loc_6478:
ROM:6478 B1 0C                               LDA     (lsb_line_addr_pg1),Y
ROM:647A 91 0E                               STA     (lsb_line_addr_pg2),Y
ROM:647C C8                                  INY
ROM:647D D0 F9                               BNE     loc_6478
ROM:647F E6 0F                               INC     msb_line_addr_pg2
ROM:6481 E6 0D                               INC     msb_line_addr_pg1
ROM:6483 A6 0D                               LDX     msb_line_addr_pg1
ROM:6485 E0 60                               CPX     #60h ; '`'
ROM:6487 90 EF                               BCC     loc_6478
ROM:6489 18                                  CLC
ROM:648A 60                                  RTS
ROM:648B             ; ---------------------------------------------------------------------------
ROM:648B
ROM:648B             draw_level:
ROM:648B 20 A2 88                            JSR     wipe_and_draw_level
ROM:648E A0 0F                               LDY     #15                     ; last row
ROM:6490 84 86                               STY     row
ROM:6492
ROM:6492             loc_6492:                                               ; lsb of row in level data
ROM:6492 B9 05 1C                            LDA     lsb_row_a_tbl,Y
ROM:6495 85 06                               STA     lsb_row_lda_dyn
ROM:6497 B9 15 1C                            LDA     msb_row_a_dyn_tbl,Y     ; msb of row in level data
ROM:649A 85 07                               STA     msb_row_lda_dyn
ROM:649C A0 1B                               LDY     #27                     ; last column
ROM:649E 84 85                               STY     col
ROM:64A0
ROM:64A0             loc_64A0:                                               ; get level data tile byte
ROM:64A0 B1 06                               LDA     (lsb_row_lda_dyn),Y
ROM:64A2 C9 09                               CMP     #9                      ; player?
ROM:64A4 F0 04                               BEQ     loc_64AA                ; yes, continue
ROM:64A6 C9 08                               CMP     #8                      ; enemy?
ROM:64A8 D0 05                               BNE     loc_64AF                ; no, skip
ROM:64AA
ROM:64AA             loc_64AA:                                               ; space
ROM:64AA A9 00                               LDA     #0
ROM:64AC 20 B0 82                            JSR     display_char_pg2        ; wipe players & enemies from the background
ROM:64AF
ROM:64AF             loc_64AF:                                               ; next column
ROM:64AF C6 85                               DEC     col
ROM:64B1 A4 85                               LDY     col                     ; finished all columns?
ROM:64B3 10 EB                               BPL     loc_64A0                ; no, loop
ROM:64B5 C6 86                               DEC     row                     ; next row
ROM:64B7 A4 86                               LDY     row                     ; finished all rows?
ROM:64B9 10 D7                               BPL     loc_6492                ; no, loop
ROM:64BB 18                                  CLC
ROM:64BC 60                                  RTS
ROM:64BC             ; End of function init_and_draw_level
ROM:64BC
ROM:64BD
ROM:64BD             ; =============== S U B R O U T I N E =======================================
ROM:64BD
ROM:64BD
ROM:64BD             handle_player:
ROM:64BD A9 01                               LDA     #1
ROM:64BF 85 94                               STA     enable_collision_detect
ROM:64C1 A5 9C                               LDA     dig_dir
ROM:64C3 F0 08                               BEQ     not_digging
ROM:64C5 10 03                               BPL     loc_64CA
ROM:64C7 4C E7 67                            JMP     digging_left
ROM:64CA             ; ---------------------------------------------------------------------------
ROM:64CA
ROM:64CA             loc_64CA:
ROM:64CA 4C AD 68                            JMP     digging_right
ROM:64CD             ; ---------------------------------------------------------------------------
ROM:64CD
ROM:64CD             not_digging:
ROM:64CD A4 01                               LDY     current_row
ROM:64CF B9 05 1C                            LDA     lsb_row_a_tbl,Y
ROM:64D2 85 08                               STA     lsb_row_lda_static
ROM:64D4 B9 25 1C                            LDA     msb_row_a_static_tbl,Y
ROM:64D7 85 09                               STA     msb_row_lda_static
ROM:64D9 A4 00                               LDY     current_col
ROM:64DB B1 08                               LDA     (lsb_row_lda_static),Y  ; get object from tilemap
ROM:64DD C9 03                               CMP     #3                      ; ladder?
ROM:64DF F0 41                               BEQ     cant_fall               ; yes, go
ROM:64E1 C9 04                               CMP     #4                      ; rope?
ROM:64E3 D0 06                               BNE     check_falling           ; no, skip
ROM:64E5 A5 03                               LDA     y_offset_within_tile
ROM:64E7 C9 02                               CMP     #2
ROM:64E9 F0 37                               BEQ     cant_fall
ROM:64EB
ROM:64EB             check_falling:
ROM:64EB A5 03                               LDA     y_offset_within_tile
ROM:64ED C9 02                               CMP     #2
ROM:64EF 90 34                               BCC     handle_falling
ROM:64F1 A4 01                               LDY     current_row
ROM:64F3 C0 0F                               CPY     #15                     ; bottom row?
ROM:64F5 F0 2B                               BEQ     cant_fall               ; yes, skip
ROM:64F7 B9 06 1C                            LDA     (lsb_row_a_tbl+1),Y
ROM:64FA 85 06                               STA     lsb_row_lda_dyn
ROM:64FC 85 08                               STA     lsb_row_lda_static
ROM:64FE B9 16 1C                            LDA     (msb_row_a_dyn_tbl+1),Y
ROM:6501 85 07                               STA     msb_row_lda_dyn
ROM:6503 B9 26 1C                            LDA     (msb_row_a_static_tbl+1),Y
ROM:6506 85 09                               STA     msb_row_lda_static      ; adjust tilemap & video address to row below
ROM:6508 A4 00                               LDY     current_col
ROM:650A B1 06                               LDA     (lsb_row_lda_dyn),Y     ; get object from tilemap
ROM:650C C9 00                               CMP     #0                      ; space?
ROM:650E F0 15                               BEQ     handle_falling          ; yes, go
ROM:6510 C9 08                               CMP     #8                      ; enemy?
ROM:6512 F0 0E                               BEQ     cant_fall               ; yes, go
ROM:6514 B1 08                               LDA     (lsb_row_lda_static),Y
ROM:6516 C9 01                               CMP     #1                      ; brick?
ROM:6518 F0 08                               BEQ     cant_fall               ; yes, go
ROM:651A C9 02                               CMP     #2                      ; solid?
ROM:651C F0 04                               BEQ     cant_fall               ; yes, go
ROM:651E C9 03                               CMP     #3                      ; ladder?
ROM:6520 D0 03                               BNE     handle_falling          ; no, go
ROM:6522
ROM:6522             cant_fall:
ROM:6522 4C 84 65                            JMP     check_falling_sound
ROM:6525             ; ---------------------------------------------------------------------------
ROM:6525
ROM:6525             handle_falling:
ROM:6525 A9 00                               LDA     #0
ROM:6527 85 9B                               STA     not_falling             ; flag falling
ROM:6529 20 85 6B                            JSR     calc_char_and_addr
ROM:652C 20 36 83                            JSR     wipe_char
ROM:652F A9 07                               LDA     #7                      ; char=0x13 (fall left)
ROM:6531 A6 05                               LDX     dir                     ; left?
ROM:6533 30 02                               BMI     loc_6537                ; yes, skip
ROM:6535 A9 0F                               LDA     #0Fh                    ; char=0x14 (fall right)
ROM:6537
ROM:6537             loc_6537:
ROM:6537 85 04                               STA     sprite_index
ROM:6539 20 13 6C                            JSR     adjust_x_offset_in_tile
ROM:653C E6 03                               INC     y_offset_within_tile
ROM:653E A5 03                               LDA     y_offset_within_tile
ROM:6540 C9 05                               CMP     #5                      ; >=5?
ROM:6542 B0 06                               BCS     fall_check_row_below    ; yes, skip
ROM:6544 20 9D 6B                            JSR     check_for_gold
ROM:6547 4C 02 6C                            JMP     draw_player_sprite
ROM:654A             ; ---------------------------------------------------------------------------
ROM:654A
ROM:654A             fall_check_row_below:
ROM:654A A9 00                               LDA     #0
ROM:654C 85 03                               STA     y_offset_within_tile
ROM:654E A4 01                               LDY     current_row
ROM:6550 B9 05 1C                            LDA     lsb_row_a_tbl,Y
ROM:6553 85 06                               STA     lsb_row_lda_dyn
ROM:6555 85 08                               STA     lsb_row_lda_static
ROM:6557 B9 15 1C                            LDA     msb_row_a_dyn_tbl,Y
ROM:655A 85 07                               STA     msb_row_lda_dyn
ROM:655C B9 25 1C                            LDA     msb_row_a_static_tbl,Y
ROM:655F 85 09                               STA     msb_row_lda_static
ROM:6561 A4 00                               LDY     current_col
ROM:6563 B1 08                               LDA     (lsb_row_lda_static),Y  ; get object from tilemap
ROM:6565 C9 01                               CMP     #1                      ; brick?
ROM:6567 D0 02                               BNE     loc_656B                ; no, skip
ROM:6569 A9 00                               LDA     #0                      ; space
ROM:656B
ROM:656B             loc_656B:                                               ; update tilemap
ROM:656B 91 06                               STA     (lsb_row_lda_dyn),Y
ROM:656D E6 01                               INC     current_row             ; next row
ROM:656F A4 01                               LDY     current_row
ROM:6571 B9 05 1C                            LDA     lsb_row_a_tbl,Y
ROM:6574 85 06                               STA     lsb_row_lda_dyn
ROM:6576 B9 15 1C                            LDA     msb_row_a_dyn_tbl,Y
ROM:6579 85 07                               STA     msb_row_lda_dyn
ROM:657B A4 00                               LDY     current_col
ROM:657D A9 09                               LDA     #9                      ; player
ROM:657F 91 06                               STA     (lsb_row_lda_dyn),Y     ; update tilemap
ROM:6581 4C 02 6C                            JMP     draw_player_sprite
ROM:6584             ; ---------------------------------------------------------------------------
ROM:6584
ROM:6584             check_falling_sound:                                    ; falling?
ROM:6584 A5 9B                               LDA     not_falling
ROM:6586 D0 07                               BNE     check_controls          ; no, skip
ROM:6588 A9 64                               LDA     #64h ; 'd'              ; frequency
ROM:658A A2 08                               LDX     #8                      ; duration
ROM:658C 20 BA 87                            JSR     play_sound
ROM:658F
ROM:658F             check_controls:
ROM:658F A9 20                               LDA     #20h ; ' '
ROM:6591 85 A4                               STA     falling_snd_freq
ROM:6593 85 9B                               STA     not_falling             ; flag not falling
ROM:6595 20 12 6A                            JSR     read_controls
ROM:6598 A5 9E                               LDA     key_1
ROM:659A C9 C9                               CMP     #0C9h ; 'É'             ; 'I'?
ROM:659C D0 06                               BNE     check_down_key          ; no, skip
ROM:659E 20 BD 66                            JSR     move_up
ROM:65A1 B0 1F                               BCS     check_left_key
ROM:65A3 60                                  RTS
ROM:65A4             ; ---------------------------------------------------------------------------
ROM:65A4
ROM:65A4             check_down_key:                                         ; 'K'?
ROM:65A4 C9 CB                               CMP     #0CBh ; 'Ë'
ROM:65A6 D0 06                               BNE     check_dig_left_key      ; no, skip
ROM:65A8 20 66 67                            JSR     move_down
ROM:65AB B0 15                               BCS     check_left_key
ROM:65AD 60                                  RTS
ROM:65AE             ; ---------------------------------------------------------------------------
ROM:65AE
ROM:65AE             check_dig_left_key:                                     ; 'U'?
ROM:65AE C9 D5                               CMP     #0D5h ; 'Õ'
ROM:65B0 D0 06                               BNE     check_dig_right_key     ; no, skip
ROM:65B2 20 DB 67                            JSR     dig_left
ROM:65B5 B0 0B                               BCS     check_left_key
ROM:65B7 60                                  RTS
ROM:65B8             ; ---------------------------------------------------------------------------
ROM:65B8
ROM:65B8             check_dig_right_key:                                    ; 'O'?
ROM:65B8 C9 CF                               CMP     #0CFh ; 'Ï'
ROM:65BA D0 06                               BNE     check_left_key          ; no, skip
ROM:65BC 20 A1 68                            JSR     dig_right
ROM:65BF B0 01                               BCS     check_left_key
ROM:65C1 60                                  RTS
ROM:65C2             ; ---------------------------------------------------------------------------
ROM:65C2
ROM:65C2             check_left_key:
ROM:65C2 A5 9F                               LDA     key_2
ROM:65C4 C9 CA                               CMP     #0CAh ; 'Ê'             ; 'J'?
ROM:65C6 D0 03                               BNE     check_right_key         ; no, skip
ROM:65C8 4C D3 65                            JMP     move_left
ROM:65CB             ; ---------------------------------------------------------------------------
ROM:65CB
ROM:65CB             check_right_key:                                        ; 'L'?
ROM:65CB C9 CC                               CMP     #0CCh ; 'Ì'
ROM:65CD D0 03                               BNE     no_keys                 ; no, skip
ROM:65CF 4C 45 66                            JMP     move_right
ROM:65D2             ; ---------------------------------------------------------------------------
ROM:65D2
ROM:65D2             no_keys:
ROM:65D2 60                                  RTS
ROM:65D3             ; ---------------------------------------------------------------------------
ROM:65D3
ROM:65D3             move_left:
ROM:65D3 A4 01                               LDY     current_row
ROM:65D5 B9 05 1C                            LDA     lsb_row_a_tbl,Y
ROM:65D8 85 06                               STA     lsb_row_lda_dyn
ROM:65DA 85 08                               STA     lsb_row_lda_static
ROM:65DC B9 15 1C                            LDA     msb_row_a_dyn_tbl,Y
ROM:65DF 85 07                               STA     msb_row_lda_dyn
ROM:65E1 B9 25 1C                            LDA     msb_row_a_static_tbl,Y
ROM:65E4 85 09                               STA     msb_row_lda_static      ; setup tilemap and video addresses
ROM:65E6 A6 02                               LDX     x_offset_within_tile
ROM:65E8 E0 03                               CPX     #3
ROM:65EA B0 14                               BCS     can_move_left
ROM:65EC A4 00                               LDY     current_col
ROM:65EE F0 0F                               BEQ     locret_65FF             ; left-most column? yes, exit
ROM:65F0 88                                  DEY                             ; previous column
ROM:65F1 B1 06                               LDA     (lsb_row_lda_dyn),Y     ; get object from tilemap
ROM:65F3 C9 02                               CMP     #2                      ; solid?
ROM:65F5 F0 08                               BEQ     locret_65FF             ; yes, exit
ROM:65F7 C9 01                               CMP     #1                      ; brick?
ROM:65F9 F0 04                               BEQ     locret_65FF             ; yes, exit
ROM:65FB C9 05                               CMP     #5                      ; fall-thru?
ROM:65FD D0 01                               BNE     can_move_left           ; no, continue
ROM:65FF
ROM:65FF             locret_65FF:
ROM:65FF 60                                  RTS
ROM:6600             ; ---------------------------------------------------------------------------
ROM:6600
ROM:6600             can_move_left:
ROM:6600 20 85 6B                            JSR     calc_char_and_addr
ROM:6603 20 36 83                            JSR     wipe_char
ROM:6606 A9 FF                               LDA     #-1                     ; set direction=left
ROM:6608 85 05                               STA     dir
ROM:660A 20 26 6C                            JSR     adjust_y_offset_within_tile
ROM:660D C6 02                               DEC     x_offset_within_tile
ROM:660F 10 19                               BPL     loc_662A                ; new tile? no, skip
ROM:6611 A4 00                               LDY     current_col
ROM:6613 B1 08                               LDA     (lsb_row_lda_static),Y  ; get object from tilemap
ROM:6615 C9 01                               CMP     #1                      ; brick?
ROM:6617 D0 02                               BNE     loc_661B                ; no, skip
ROM:6619 A9 00                               LDA     #0                      ; space
ROM:661B
ROM:661B             loc_661B:                                               ; update tilemap
ROM:661B 91 06                               STA     (lsb_row_lda_dyn),Y
ROM:661D C6 00                               DEC     current_col             ; adjust current col
ROM:661F 88                                  DEY
ROM:6620 A9 09                               LDA     #9                      ; player
ROM:6622 91 06                               STA     (lsb_row_lda_dyn),Y     ; update tilemap
ROM:6624 A9 04                               LDA     #4
ROM:6626 85 02                               STA     x_offset_within_tile
ROM:6628 D0 03                               BNE     loc_662D                ; always
ROM:662A
ROM:662A             loc_662A:
ROM:662A 20 9D 6B                            JSR     check_for_gold
ROM:662D
ROM:662D             loc_662D:
ROM:662D A4 00                               LDY     current_col
ROM:662F B1 08                               LDA     (lsb_row_lda_static),Y  ; get object from tilemap
ROM:6631 C9 04                               CMP     #4                      ; rope?
ROM:6633 F0 06                               BEQ     loc_663B                ; yes, go
ROM:6635 A9 00                               LDA     #0                      ; 1st sprite index (runner left)
ROM:6637 A2 02                               LDX     #2                      ; last sprite index (runner left)
ROM:6639 D0 04                               BNE     loc_663F                ; always
ROM:663B
ROM:663B             loc_663B:                                               ; 1st sprite index (swinger left)
ROM:663B A9 03                               LDA     #3
ROM:663D A2 05                               LDX     #5                      ; last sprite index (swinger left)
ROM:663F
ROM:663F             loc_663F:
ROM:663F 20 F4 6B                            JSR     update_sprite_index
ROM:6642 4C 02 6C                            JMP     draw_player_sprite
ROM:6645             ; ---------------------------------------------------------------------------
ROM:6645
ROM:6645             move_right:                                             ; current row
ROM:6645 A4 01                               LDY     current_row
ROM:6647 B9 05 1C                            LDA     lsb_row_a_tbl,Y
ROM:664A 85 06                               STA     lsb_row_lda_dyn
ROM:664C 85 08                               STA     lsb_row_lda_static
ROM:664E B9 15 1C                            LDA     msb_row_a_dyn_tbl,Y
ROM:6651 85 07                               STA     msb_row_lda_dyn
ROM:6653 B9 25 1C                            LDA     msb_row_a_static_tbl,Y
ROM:6656 85 09                               STA     msb_row_lda_static      ; setup tilemap & video addresses
ROM:6658 A6 02                               LDX     x_offset_within_tile
ROM:665A E0 02                               CPX     #2                      ; offset into tile????
ROM:665C 90 16                               BCC     can_move_right
ROM:665E A4 00                               LDY     current_col             ; current_col
ROM:6660 C0 1B                               CPY     #27                     ; right-most?
ROM:6662 F0 0F                               BEQ     locret_6673             ; yes, exit
ROM:6664 C8                                  INY                             ; next column (right)
ROM:6665 B1 06                               LDA     (lsb_row_lda_dyn),Y     ; get tile data
ROM:6667 C9 02                               CMP     #2                      ; solid?
ROM:6669 F0 08                               BEQ     locret_6673             ; yes, exit
ROM:666B C9 01                               CMP     #1                      ; brick?
ROM:666D F0 04                               BEQ     locret_6673             ; yes, exit
ROM:666F C9 05                               CMP     #5                      ; fall-thru?
ROM:6671 D0 01                               BNE     can_move_right          ; no, continue
ROM:6673
ROM:6673             locret_6673:
ROM:6673 60                                  RTS
ROM:6674             ; ---------------------------------------------------------------------------
ROM:6674
ROM:6674             can_move_right:
ROM:6674 20 85 6B                            JSR     calc_char_and_addr
ROM:6677 20 36 83                            JSR     wipe_char
ROM:667A A9 01                               LDA     #1                      ; set direction right
ROM:667C 85 05                               STA     dir
ROM:667E 20 26 6C                            JSR     adjust_y_offset_within_tile
ROM:6681 E6 02                               INC     x_offset_within_tile
ROM:6683 A5 02                               LDA     x_offset_within_tile
ROM:6685 C9 05                               CMP     #5
ROM:6687 90 19                               BCC     loc_66A2
ROM:6689 A4 00                               LDY     current_col             ; current col
ROM:668B B1 08                               LDA     (lsb_row_lda_static),Y  ; get object from tilemap
ROM:668D C9 01                               CMP     #1                      ; brick?
ROM:668F D0 02                               BNE     loc_6693                ; no, skip
ROM:6691 A9 00                               LDA     #0                      ; space
ROM:6693
ROM:6693             loc_6693:                                               ; update tilemap
ROM:6693 91 06                               STA     (lsb_row_lda_dyn),Y
ROM:6695 E6 00                               INC     current_col             ; next tile
ROM:6697 C8                                  INY
ROM:6698 A9 09                               LDA     #9                      ; player
ROM:669A 91 06                               STA     (lsb_row_lda_dyn),Y     ; update tilemap
ROM:669C A9 00                               LDA     #0
ROM:669E 85 02                               STA     x_offset_within_tile
ROM:66A0 F0 03                               BEQ     loc_66A5
ROM:66A2
ROM:66A2             loc_66A2:
ROM:66A2 20 9D 6B                            JSR     check_for_gold
ROM:66A5
ROM:66A5             loc_66A5:                                               ; current col
ROM:66A5 A4 00                               LDY     current_col
ROM:66A7 B1 08                               LDA     (lsb_row_lda_static),Y  ; get object from tilemap
ROM:66A9 C9 04                               CMP     #4                      ; rope?
ROM:66AB F0 06                               BEQ     loc_66B3                ; yes, go
ROM:66AD A9 08                               LDA     #8                      ; 1st sprite index (runner right)
ROM:66AF A2 0A                               LDX     #0Ah                    ; last sprite index (runner right)
ROM:66B1 D0 04                               BNE     loc_66B7
ROM:66B3
ROM:66B3             loc_66B3:                                               ; 1st sprite index (swinger right)
ROM:66B3 A9 0B                               LDA     #0Bh
ROM:66B5 A2 0D                               LDX     #0Dh                    ; last sprite index (swinger right)
ROM:66B7
ROM:66B7             loc_66B7:
ROM:66B7 20 F4 6B                            JSR     update_sprite_index
ROM:66BA 4C 02 6C                            JMP     draw_player_sprite
ROM:66BA             ; End of function handle_player
ROM:66BA
ROM:66BD
ROM:66BD             ; =============== S U B R O U T I N E =======================================
ROM:66BD
ROM:66BD
ROM:66BD             move_up:
ROM:66BD A4 01                               LDY     current_row
ROM:66BF B9 05 1C                            LDA     lsb_row_a_tbl,Y
ROM:66C2 85 08                               STA     lsb_row_lda_static
ROM:66C4 B9 25 1C                            LDA     msb_row_a_static_tbl,Y
ROM:66C7 85 09                               STA     msb_row_lda_static
ROM:66C9 A4 00                               LDY     current_col             ; setup tilemap & video addresses
ROM:66CB B1 08                               LDA     (lsb_row_lda_static),Y  ; get object from tilemap
ROM:66CD C9 03                               CMP     #3                      ; ladder?
ROM:66CF F0 1C                               BEQ     check_move_up           ; yes, go
ROM:66D1 A4 03                               LDY     y_offset_within_tile
ROM:66D3 C0 03                               CPY     #3                      ; <3?
ROM:66D5 90 14                               BCC     cant_move_up            ; yes, exit
ROM:66D7 A4 01                               LDY     current_row
ROM:66D9 B9 06 1C                            LDA     (lsb_row_a_tbl+1),Y     ; row below???
ROM:66DC 85 08                               STA     lsb_row_lda_static
ROM:66DE B9 26 1C                            LDA     (msb_row_a_static_tbl+1),Y
ROM:66E1 85 09                               STA     msb_row_lda_static
ROM:66E3 A4 00                               LDY     current_col             ; setup tilemap & video addresses
ROM:66E5 B1 08                               LDA     (lsb_row_lda_static),Y  ; get object from tilemap
ROM:66E7 C9 03                               CMP     #3                      ; ladder?
ROM:66E9 F0 26                               BEQ     can_move_up             ; yes, go
ROM:66EB
ROM:66EB             cant_move_up:                                           ; flag unable to move
ROM:66EB 38                                  SEC
ROM:66EC 60                                  RTS
ROM:66ED             ; ---------------------------------------------------------------------------
ROM:66ED
ROM:66ED             check_move_up:
ROM:66ED A4 03                               LDY     y_offset_within_tile
ROM:66EF C0 03                               CPY     #3                      ; >=3?
ROM:66F1 B0 1E                               BCS     can_move_up             ; yes, skip
ROM:66F3 A4 01                               LDY     current_row
ROM:66F5 F0 F4                               BEQ     cant_move_up            ; top row? yes, exit
ROM:66F7 B9 04 1C                            LDA     1C04h,Y                 ; lsb_row_address-1
ROM:66FA 85 06                               STA     lsb_row_lda_dyn
ROM:66FC B9 14 1C                            LDA     1C14h,Y                 ; msb_row_addr-1
ROM:66FF 85 07                               STA     msb_row_lda_dyn         ; adjust tilemap address to row above
ROM:6701 A4 00                               LDY     current_col
ROM:6703 B1 06                               LDA     (lsb_row_lda_dyn),Y     ; get object from tilemap (above)
ROM:6705 C9 01                               CMP     #1                      ; brick?
ROM:6707 F0 E2                               BEQ     cant_move_up            ; yes, exit
ROM:6709 C9 02                               CMP     #2                      ; solid?
ROM:670B F0 DE                               BEQ     cant_move_up            ; yes, exit
ROM:670D C9 05                               CMP     #5                      ; fall-thru?
ROM:670F F0 DA                               BEQ     cant_move_up            ; yes, exit
ROM:6711
ROM:6711             can_move_up:
ROM:6711 20 85 6B                            JSR     calc_char_and_addr
ROM:6714 20 36 83                            JSR     wipe_char
ROM:6717 A4 01                               LDY     current_row
ROM:6719 B9 05 1C                            LDA     lsb_row_a_tbl,Y
ROM:671C 85 06                               STA     lsb_row_lda_dyn
ROM:671E 85 08                               STA     lsb_row_lda_static
ROM:6720 B9 15 1C                            LDA     msb_row_a_dyn_tbl,Y
ROM:6723 85 07                               STA     msb_row_lda_dyn
ROM:6725 B9 25 1C                            LDA     msb_row_a_static_tbl,Y
ROM:6728 85 09                               STA     msb_row_lda_static      ; setup tilemap & video addresses
ROM:672A 20 13 6C                            JSR     adjust_x_offset_in_tile
ROM:672D C6 03                               DEC     y_offset_within_tile
ROM:672F 10 26                               BPL     climber_check_for_gold  ; change tiles? no, skip
ROM:6731 A4 00                               LDY     current_col
ROM:6733 B1 08                               LDA     (lsb_row_lda_static),Y  ; get object from tilemap
ROM:6735 C9 01                               CMP     #1                      ; brick?
ROM:6737 D0 02                               BNE     loc_673B                ; no, skip
ROM:6739 A9 00                               LDA     #0                      ; space
ROM:673B
ROM:673B             loc_673B:                                               ; adjust tilemap
ROM:673B 91 06                               STA     (lsb_row_lda_dyn),Y
ROM:673D C6 01                               DEC     current_row             ; row above
ROM:673F A4 01                               LDY     current_row
ROM:6741 B9 05 1C                            LDA     lsb_row_a_tbl,Y
ROM:6744 85 06                               STA     lsb_row_lda_dyn
ROM:6746 B9 15 1C                            LDA     msb_row_a_dyn_tbl,Y
ROM:6749 85 07                               STA     msb_row_lda_dyn         ; adjust video & tilemap addresses
ROM:674B A4 00                               LDY     current_col
ROM:674D A9 09                               LDA     #9                      ; player
ROM:674F 91 06                               STA     (lsb_row_lda_dyn),Y     ; set tilemap object
ROM:6751 A9 04                               LDA     #4
ROM:6753 85 03                               STA     y_offset_within_tile
ROM:6755 D0 03                               BNE     update_climber_sprite   ; always
ROM:6757
ROM:6757             climber_check_for_gold:
ROM:6757 20 9D 6B                            JSR     check_for_gold
ROM:675A
ROM:675A             update_climber_sprite:                                  ; 1st sprite index (climber)
ROM:675A A9 10                               LDA     #10h
ROM:675C A2 11                               LDX     #11h                    ; last sprite index (climber)
ROM:675E 20 F4 6B                            JSR     update_sprite_index
ROM:6761 20 02 6C                            JSR     draw_player_sprite
ROM:6764 18                                  CLC
ROM:6765 60                                  RTS
ROM:6765             ; End of function move_up
ROM:6765
ROM:6766
ROM:6766             ; =============== S U B R O U T I N E =======================================
ROM:6766
ROM:6766
ROM:6766             move_down:
ROM:6766 A4 03                               LDY     y_offset_within_tile
ROM:6768 C0 02                               CPY     #2
ROM:676A 90 1E                               BCC     can_move_down
ROM:676C A4 01                               LDY     current_row
ROM:676E C0 0F                               CPY     #15                     ; bottom row?
ROM:6770 B0 16                               BCS     cant_move_down          ; yes, exit
ROM:6772 B9 06 1C                            LDA     (lsb_row_a_tbl+1),Y     ; row below
ROM:6775 85 06                               STA     lsb_row_lda_dyn
ROM:6777 B9 16 1C                            LDA     (msb_row_a_dyn_tbl+1),Y
ROM:677A 85 07                               STA     msb_row_lda_dyn         ; adjust tilemap & video addresses for row below
ROM:677C A4 00                               LDY     current_col
ROM:677E B1 06                               LDA     (lsb_row_lda_dyn),Y     ; get object from tilemap
ROM:6780 C9 02                               CMP     #2                      ; solid?
ROM:6782 F0 04                               BEQ     cant_move_down          ; yes, exit
ROM:6784 C9 01                               CMP     #1                      ; brick?
ROM:6786 D0 02                               BNE     can_move_down           ; no, go
ROM:6788
ROM:6788             cant_move_down:                                         ; flag unable to move
ROM:6788 38                                  SEC
ROM:6789 60                                  RTS
ROM:678A             ; ---------------------------------------------------------------------------
ROM:678A
ROM:678A             can_move_down:
ROM:678A 20 85 6B                            JSR     calc_char_and_addr
ROM:678D 20 36 83                            JSR     wipe_char
ROM:6790 A4 01                               LDY     current_row
ROM:6792 B9 05 1C                            LDA     lsb_row_a_tbl,Y
ROM:6795 85 06                               STA     lsb_row_lda_dyn
ROM:6797 85 08                               STA     lsb_row_lda_static
ROM:6799 B9 15 1C                            LDA     msb_row_a_dyn_tbl,Y
ROM:679C 85 07                               STA     msb_row_lda_dyn
ROM:679E B9 25 1C                            LDA     msb_row_a_static_tbl,Y
ROM:67A1 85 09                               STA     msb_row_lda_static
ROM:67A3 20 13 6C                            JSR     adjust_x_offset_in_tile
ROM:67A6 E6 03                               INC     y_offset_within_tile
ROM:67A8 A5 03                               LDA     y_offset_within_tile
ROM:67AA C9 05                               CMP     #5                      ; <5?
ROM:67AC 90 27                               BCC     loc_67D5                ; yes, skip
ROM:67AE A4 00                               LDY     current_col
ROM:67B0 B1 08                               LDA     (lsb_row_lda_static),Y  ; get object from tilemap
ROM:67B2 C9 01                               CMP     #1                      ; brick?
ROM:67B4 D0 02                               BNE     loc_67B8                ; no, skip
ROM:67B6 A9 00                               LDA     #0                      ; space
ROM:67B8
ROM:67B8             loc_67B8:                                               ; update tilemap
ROM:67B8 91 06                               STA     (lsb_row_lda_dyn),Y
ROM:67BA E6 01                               INC     current_row             ; row below
ROM:67BC A4 01                               LDY     current_row
ROM:67BE B9 05 1C                            LDA     lsb_row_a_tbl,Y
ROM:67C1 85 06                               STA     lsb_row_lda_dyn
ROM:67C3 B9 15 1C                            LDA     msb_row_a_dyn_tbl,Y
ROM:67C6 85 07                               STA     msb_row_lda_dyn         ; update tilemap & video addresses
ROM:67C8 A4 00                               LDY     current_col
ROM:67CA A9 09                               LDA     #9                      ; player
ROM:67CC 91 06                               STA     (lsb_row_lda_dyn),Y     ; update tilemap
ROM:67CE A9 00                               LDA     #0
ROM:67D0 85 03                               STA     y_offset_within_tile
ROM:67D2 4C 5A 67                            JMP     update_climber_sprite
ROM:67D5             ; ---------------------------------------------------------------------------
ROM:67D5
ROM:67D5             loc_67D5:
ROM:67D5 4C 57 67                            JMP     climber_check_for_gold
ROM:67D5             ; End of function move_down
ROM:67D5
ROM:67D8             ; ---------------------------------------------------------------------------
ROM:67D8             ; START OF FUNCTION CHUNK FOR dig_left
ROM:67D8
ROM:67D8             cant_dig_left:
ROM:67D8 4C 92 68                            JMP     finish_dig_left
ROM:67D8             ; END OF FUNCTION CHUNK FOR dig_left
ROM:67DB
ROM:67DB             ; =============== S U B R O U T I N E =======================================
ROM:67DB
ROM:67DB
ROM:67DB             dig_left:
ROM:67DB
ROM:67DB             ; FUNCTION CHUNK AT ROM:67D8 SIZE 00000003 BYTES
ROM:67DB             ; FUNCTION CHUNK AT ROM:6C39 SIZE 00000049 BYTES
ROM:67DB
ROM:67DB A9 FF                               LDA     #0FFh
ROM:67DD 85 9C                               STA     dig_dir
ROM:67DF 85 9E                               STA     key_1
ROM:67E1 85 9F                               STA     key_2
ROM:67E3 A9 00                               LDA     #0
ROM:67E5 85 A0                               STA     dig_sprite
ROM:67E7
ROM:67E7             digging_left:
ROM:67E7 A4 01                               LDY     current_row
ROM:67E9 C0 0F                               CPY     #15                     ; bottom row?
ROM:67EB B0 EB                               BCS     cant_dig_left           ; yes, exit
ROM:67ED C8                                  INY                             ; look at row below
ROM:67EE 20 4B 88                            JSR     set_row_addr_1_2
ROM:67F1 A4 00                               LDY     current_col
ROM:67F3 F0 E3                               BEQ     cant_dig_left           ; left edge? yes, exit
ROM:67F5 88                                  DEY
ROM:67F6 B1 06                               LDA     (lsb_row_lda_dyn),Y     ; get object from tilemap (down,left)
ROM:67F8 C9 01                               CMP     #1                      ; brick?
ROM:67FA D0 DC                               BNE     cant_dig_left           ; no, exit
ROM:67FC A4 01                               LDY     current_row
ROM:67FE 20 4B 88                            JSR     set_row_addr_1_2
ROM:6801 A4 00                               LDY     current_col
ROM:6803 88                                  DEY
ROM:6804 B1 06                               LDA     (lsb_row_lda_dyn),Y     ; get object from tilemap (left)
ROM:6806 C9 00                               CMP     #0                      ; space?
ROM:6808 D0 64                               BNE     abort_dig_left          ; no, go
ROM:680A 20 85 6B                            JSR     calc_char_and_addr
ROM:680D 20 36 83                            JSR     wipe_char
ROM:6810 20 13 6C                            JSR     adjust_x_offset_in_tile
ROM:6813 20 26 6C                            JSR     adjust_y_offset_within_tile
ROM:6816 A4 A0                               LDY     dig_sprite
ROM:6818 B9 9E 69                            LDA     dig_snd_freq_tbl,Y
ROM:681B BE AB 69                            LDX     dig_snd_dur_tbl,Y
ROM:681E 20 D5 87                            JSR     queue_note
ROM:6821 A6 A0                               LDX     dig_sprite
ROM:6823 A9 00                               LDA     #0                      ; sprite=0, tile=$B (running left)
ROM:6825 E0 06                               CPX     #6
ROM:6827 B0 02                               BCS     loc_682B
ROM:6829 A9 06                               LDA     #6                      ; sprite=6, tile=$F (starting to dig left)
ROM:682B
ROM:682B             loc_682B:
ROM:682B 85 04                               STA     sprite_index
ROM:682D 20 02 6C                            JSR     draw_player_sprite
ROM:6830 A6 A0                               LDX     dig_sprite
ROM:6832 E0 0C                               CPX     #0Ch
ROM:6834 F0 62                               BEQ     loc_6898
ROM:6836 E0 00                               CPX     #0
ROM:6838 F0 12                               BEQ     loc_684C
ROM:683A BD 79 69                            LDA     byte_6979,X
ROM:683D 48                                  PHA
ROM:683E A6 00                               LDX     current_col
ROM:6840 CA                                  DEX
ROM:6841 A4 01                               LDY     current_row
ROM:6843 20 5D 88                            JSR     calc_colx5_scanline
ROM:6846 68                                  PLA
ROM:6847 20 36 83                            JSR     wipe_char
ROM:684A A6 A0                               LDX     dig_sprite
ROM:684C
ROM:684C             loc_684C:
ROM:684C BD 7A 69                            LDA     byte_697A,X
ROM:684F 48                                  PHA
ROM:6850 A6 00                               LDX     current_col
ROM:6852 CA                                  DEX
ROM:6853 86 85                               STX     col
ROM:6855 A4 01                               LDY     current_row
ROM:6857 84 86                               STY     row
ROM:6859 20 5D 88                            JSR     calc_colx5_scanline
ROM:685C 68                                  PLA
ROM:685D 20 A7 83                            JSR     display_transparent_char
ROM:6860 A6 A0                               LDX     dig_sprite
ROM:6862 BD 92 69                            LDA     byte_6992,X
ROM:6865 E6 86                               INC     row
ROM:6867 20 AA 82                            JSR     display_char_pg1
ROM:686A E6 A0                               INC     dig_sprite
ROM:686C 18                                  CLC
ROM:686D 60                                  RTS
ROM:686E             ; ---------------------------------------------------------------------------
ROM:686E
ROM:686E             abort_dig_left:
ROM:686E A4 01                               LDY     current_row
ROM:6870 C8                                  INY
ROM:6871 84 86                               STY     row
ROM:6873 A4 00                               LDY     current_col
ROM:6875 88                                  DEY
ROM:6876 84 85                               STY     col
ROM:6878 A9 01                               LDA     #1                      ; diggable brick
ROM:687A 20 AA 82                            JSR     display_char_pg1
ROM:687D A6 A0                               LDX     dig_sprite
ROM:687F F0 11                               BEQ     finish_dig_left
ROM:6881 CA                                  DEX
ROM:6882 BD 7A 69                            LDA     byte_697A,X
ROM:6885 48                                  PHA
ROM:6886 A4 01                               LDY     current_row
ROM:6888 A6 00                               LDX     current_col
ROM:688A CA                                  DEX
ROM:688B 20 5D 88                            JSR     calc_colx5_scanline
ROM:688E 68                                  PLA
ROM:688F 20 36 83                            JSR     wipe_char
ROM:6892
ROM:6892             finish_dig_left:
ROM:6892 A9 00                               LDA     #0
ROM:6894 85 9C                               STA     dig_dir
ROM:6896 38                                  SEC
ROM:6897 60                                  RTS
ROM:6898             ; ---------------------------------------------------------------------------
ROM:6898
ROM:6898             loc_6898:
ROM:6898 A6 00                               LDX     current_col
ROM:689A CA                                  DEX
ROM:689B 4C 39 6C                            JMP     add_hole_entry
ROM:689B             ; End of function dig_left
ROM:689B
ROM:689E             ; ---------------------------------------------------------------------------
ROM:689E             ; START OF FUNCTION CHUNK FOR dig_right
ROM:689E
ROM:689E             cant_dig_right:
ROM:689E 4C 5C 69                            JMP     finish_dig_right
ROM:689E             ; END OF FUNCTION CHUNK FOR dig_right
ROM:68A1
ROM:68A1             ; =============== S U B R O U T I N E =======================================
ROM:68A1
ROM:68A1
ROM:68A1             dig_right:
ROM:68A1
ROM:68A1             ; FUNCTION CHUNK AT ROM:689E SIZE 00000003 BYTES
ROM:68A1
ROM:68A1 A9 01                               LDA     #1
ROM:68A3 85 9C                               STA     dig_dir
ROM:68A5 85 9E                               STA     key_1
ROM:68A7 85 9F                               STA     key_2
ROM:68A9 A9 0C                               LDA     #0Ch
ROM:68AB 85 A0                               STA     dig_sprite
ROM:68AD
ROM:68AD             digging_right:
ROM:68AD A4 01                               LDY     current_row
ROM:68AF C0 0F                               CPY     #15                     ; bottom row?
ROM:68B1 B0 EB                               BCS     cant_dig_right          ; yes, exit
ROM:68B3 C8                                  INY                             ; look at row below
ROM:68B4 20 4B 88                            JSR     set_row_addr_1_2
ROM:68B7 A4 00                               LDY     current_col
ROM:68B9 C0 1B                               CPY     #27                     ; right-most column?
ROM:68BB B0 E1                               BCS     cant_dig_right          ; yes, exit
ROM:68BD C8                                  INY                             ; column to the right
ROM:68BE B1 06                               LDA     (lsb_row_lda_dyn),Y     ; get object from tilemap (down,right)
ROM:68C0 C9 01                               CMP     #1                      ; brick?
ROM:68C2 D0 DA                               BNE     cant_dig_right          ; no, exit
ROM:68C4 A4 01                               LDY     current_row
ROM:68C6 20 4B 88                            JSR     set_row_addr_1_2
ROM:68C9 A4 00                               LDY     current_col
ROM:68CB C8                                  INY                             ; next column
ROM:68CC B1 06                               LDA     (lsb_row_lda_dyn),Y     ; get object from tilemap (right)
ROM:68CE C9 00                               CMP     #0                      ; space?
ROM:68D0 D0 64                               BNE     abort_dig_right         ; no, go
ROM:68D2 20 85 6B                            JSR     calc_char_and_addr
ROM:68D5 20 36 83                            JSR     wipe_char
ROM:68D8 20 13 6C                            JSR     adjust_x_offset_in_tile
ROM:68DB 20 26 6C                            JSR     adjust_y_offset_within_tile
ROM:68DE A4 A0                               LDY     dig_sprite
ROM:68E0 B9 92 69                            LDA     byte_6992,Y
ROM:68E3 BE 9F 69                            LDX     (dig_snd_freq_tbl+1),Y
ROM:68E6 20 D5 87                            JSR     queue_note
ROM:68E9 A6 A0                               LDX     dig_sprite
ROM:68EB A9 08                               LDA     #8
ROM:68ED E0 12                               CPX     #12h
ROM:68EF B0 02                               BCS     loc_68F3
ROM:68F1 A9 0E                               LDA     #0Eh
ROM:68F3
ROM:68F3             loc_68F3:
ROM:68F3 85 04                               STA     sprite_index
ROM:68F5 20 02 6C                            JSR     draw_player_sprite
ROM:68F8 A6 A0                               LDX     dig_sprite
ROM:68FA E0 18                               CPX     #18h
ROM:68FC F0 64                               BEQ     loc_6962
ROM:68FE E0 0C                               CPX     #0Ch
ROM:6900 F0 12                               BEQ     loc_6914
ROM:6902 BD 79 69                            LDA     byte_6979,X
ROM:6905 48                                  PHA
ROM:6906 A6 00                               LDX     current_col
ROM:6908 E8                                  INX
ROM:6909 A4 01                               LDY     current_row
ROM:690B 20 5D 88                            JSR     calc_colx5_scanline
ROM:690E 68                                  PLA
ROM:690F 20 36 83                            JSR     wipe_char
ROM:6912 A6 A0                               LDX     dig_sprite
ROM:6914
ROM:6914             loc_6914:
ROM:6914 BD 7A 69                            LDA     byte_697A,X
ROM:6917 48                                  PHA
ROM:6918 A6 00                               LDX     current_col
ROM:691A E8                                  INX
ROM:691B 86 85                               STX     col
ROM:691D A4 01                               LDY     current_row
ROM:691F 84 86                               STY     row
ROM:6921 20 5D 88                            JSR     calc_colx5_scanline
ROM:6924 68                                  PLA
ROM:6925 20 A7 83                            JSR     display_transparent_char
ROM:6928 E6 86                               INC     row
ROM:692A A6 A0                               LDX     dig_sprite
ROM:692C BD 86 69                            LDA     byte_6986,X
ROM:692F 20 AA 82                            JSR     display_char_pg1
ROM:6932 E6 A0                               INC     dig_sprite
ROM:6934 18                                  CLC
ROM:6935 60                                  RTS
ROM:6936             ; ---------------------------------------------------------------------------
ROM:6936
ROM:6936             abort_dig_right:
ROM:6936 A4 01                               LDY     current_row
ROM:6938 C8                                  INY
ROM:6939 84 86                               STY     row
ROM:693B A4 00                               LDY     current_col
ROM:693D C8                                  INY
ROM:693E 84 85                               STY     col
ROM:6940 A9 01                               LDA     #1                      ; diggable brick
ROM:6942 20 AA 82                            JSR     display_char_pg1
ROM:6945 A6 A0                               LDX     dig_sprite
ROM:6947 E0 0C                               CPX     #0Ch
ROM:6949 F0 11                               BEQ     finish_dig_right
ROM:694B CA                                  DEX
ROM:694C BD 7A 69                            LDA     byte_697A,X
ROM:694F 48                                  PHA
ROM:6950 A6 00                               LDX     current_col
ROM:6952 E8                                  INX
ROM:6953 A4 01                               LDY     current_row
ROM:6955 20 5D 88                            JSR     calc_colx5_scanline
ROM:6958 68                                  PLA
ROM:6959 20 36 83                            JSR     wipe_char
ROM:695C
ROM:695C             finish_dig_right:
ROM:695C A9 00                               LDA     #0
ROM:695E 85 9C                               STA     dig_dir
ROM:6960 38                                  SEC
ROM:6961 60                                  RTS
ROM:6962             ; ---------------------------------------------------------------------------
ROM:6962
ROM:6962             loc_6962:
ROM:6962 A6 00                               LDX     current_col
ROM:6964 E8                                  INX
ROM:6965 4C 39 6C                            JMP     add_hole_entry
ROM:6965             ; End of function dig_right
ROM:6965
ROM:6965             ; ---------------------------------------------------------------------------
ROM:6968 0B 0C 0D 18+sprite_to_char_tbl:     .db 0Bh, 0Ch, 0Dh, 18h, 19h, 1Ah, 0Fh, 13h, 9, 10h, 11h
ROM:6968 19 1A 0F 13+                        .db 15h, 16h, 17h, 25h, 14h, 0Eh
ROM:6979 12          byte_6979:              .db 12h
ROM:697A 1B 1B 1C 1C+byte_697A:              .db 1Bh, 1Bh, 1Ch, 1Ch, 1Dh, 1Dh, 1Eh, 1Eh, 0, 0, 0, 0
ROM:6986 26 26 27 27+byte_6986:              .db 26h, 26h, 27h, 27h, 1Dh, 1Dh, 1Eh, 1Eh, 0, 0, 0, 0
ROM:6992 1F 1F 20 20+byte_6992:              .db 1Fh, 1Fh, 20h, 20h, 21h, 21h, 22h, 22h, 23h, 23h, 24h
ROM:6992 21 21 22 22+                        .db 24h
ROM:699E 20 20 20 20+dig_snd_freq_tbl:       .db 20h, 20h, 20h, 20h, 20h, 20h, 20h, 20h, 24h, 24h, 24h
ROM:699E 20 20 20 20+                        .db 24h, 24h
ROM:69AB 04 04 04 04+dig_snd_dur_tbl:        .db 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 2, 2, 1
ROM:69B8             ; ---------------------------------------------------------------------------
ROM:69B8             ; START OF FUNCTION CHUNK FOR read_controls
ROM:69B8
ROM:69B8             handle_attract_mode:                                    ; read keyboard
ROM:69B8 AD 00 C0                            LDA     0C000h
ROM:69BB 30 10                               BMI     exit_demo               ; key pressed, go
ROM:69BD A5 95                               LDA     paddles_detected
ROM:69BF C9 CB                               CMP     #0CBh ; 'Ë'
ROM:69C1 F0 13                               BEQ     next_demo_inp
ROM:69C3 AD 62 C0                            LDA     0C062h                  ; closed apple key read
ROM:69C6 30 05                               BMI     exit_demo               ; pressed, go
ROM:69C8 AD 61 C0                            LDA     0C061h                  ; open apple key read
ROM:69CB 10 09                               BPL     next_demo_inp           ; not pressed, go
ROM:69CD
ROM:69CD             exit_demo:                                              ; flag interrupted
ROM:69CD 46 AC                               LSR     demo_not_interrupted
ROM:69CF 46 9A                               LSR     level_active
ROM:69D1 A9 01                               LDA     #1
ROM:69D3 85 98                               STA     no_lives
ROM:69D5 60                                  RTS
ROM:69D6             ; ---------------------------------------------------------------------------
ROM:69D6
ROM:69D6             next_demo_inp:                                          ; counter=0?
ROM:69D6 A5 AB                               LDA     demo_inp_cnt
ROM:69D8 D0 18                               BNE     loc_69F2                ; no, skip
ROM:69DA A0 00                               LDY     #0
ROM:69DC B1 A8                               LDA     (lsb_demo_inp_ptr),Y    ; demo mode input
ROM:69DE 85 AA                               STA     demo_inp_key_1_2        ; get 1st byte
ROM:69E0 C8                                  INY
ROM:69E1 B1 A8                               LDA     (lsb_demo_inp_ptr),Y    ; get 2nd byte
ROM:69E3 85 AB                               STA     demo_inp_cnt
ROM:69E5 A5 A8                               LDA     lsb_demo_inp_ptr        ; get ptr
ROM:69E7 18                                  CLC
ROM:69E8 69 02                               ADC     #2                      ; ptr += 2
ROM:69EA 85 A8                               STA     lsb_demo_inp_ptr        ; update LSB
ROM:69EC A5 A9                               LDA     msb_demo_inp_ptr
ROM:69EE 69 00                               ADC     #0
ROM:69F0 85 A9                               STA     msb_demo_inp_ptr        ; update MSB
ROM:69F2
ROM:69F2             loc_69F2:                                               ; 1st byte
ROM:69F2 A5 AA                               LDA     demo_inp_key_1_2
ROM:69F4 29 0F                               AND     #0Fh                    ; low nibble
ROM:69F6 AA                                  TAX
ROM:69F7 BD 0B 6A                            LDA     demo_inp_remap_tbl,X    ; get equivalent keycode
ROM:69FA 85 9E                               STA     key_1                   ; store in key input buffer
ROM:69FC A5 AA                               LDA     demo_inp_key_1_2        ; 1st byte
ROM:69FE 4A                                  LSR     A
ROM:69FF 4A                                  LSR     A
ROM:6A00 4A                                  LSR     A
ROM:6A01 4A                                  LSR     A                       ; high nibble
ROM:6A02 AA                                  TAX
ROM:6A03 BD 0B 6A                            LDA     demo_inp_remap_tbl,X    ; get equivalent keycode
ROM:6A06 85 9F                               STA     key_2                   ; store in key input buffer
ROM:6A08 C6 AB                               DEC     demo_inp_cnt            ; sec counter
ROM:6A0A 60                                  RTS
ROM:6A0A             ; END OF FUNCTION CHUNK FOR read_controls
ROM:6A0A             ; ---------------------------------------------------------------------------
ROM:6A0B C9 CA CB CC+demo_inp_remap_tbl:     .db 0C9h, 0CAh, 0CBh, 0CCh, 0CFh, 0D5h, 0A0h ; I,J,K,L,O,U,<SPACE>
ROM:6A12
ROM:6A12             ; =============== S U B R O U T I N E =======================================
ROM:6A12
ROM:6A12
ROM:6A12             read_controls:
ROM:6A12
ROM:6A12             ; FUNCTION CHUNK AT ROM:69B8 SIZE 00000053 BYTES
ROM:6A12
ROM:6A12 A5 A7                               LDA     attract_mode
ROM:6A14 C9 01                               CMP     #1
ROM:6A16 F0 A0                               BEQ     handle_attract_mode
ROM:6A18 AE 00 C0                            LDX     0C000h                  ; read keyboard
ROM:6A1B 8E 10 C0                            STX     0C010h                  ; keyboard strobe
ROM:6A1E 86 1E                               STX     msg_char                ; store key
ROM:6A20 30 09                               BMI     key_pressed             ; key pressed, skip
ROM:6A22 A5 95                               LDA     paddles_detected
ROM:6A24 C9 CB                               CMP     #0CBh ; 'Ë'             ; detected?
ROM:6A26 F0 2D                               BEQ     key_ret                 ; no, skip
ROM:6A28
ROM:6A28             jmp_decode_joystick:
ROM:6A28 4C D0 6A                            JMP     decode_joystick
ROM:6A2B             ; ---------------------------------------------------------------------------
ROM:6A2B
ROM:6A2B             key_pressed:                                            ; displayable character?
ROM:6A2B E0 A0                               CPX     #0A0h ; ' '
ROM:6A2D B0 1A                               BCS     loc_6A49                ; yes, go
ROM:6A2F 86 1E                               STX     msg_char                ; save key
ROM:6A31 A0 FF                               LDY     #0FFh
ROM:6A33
ROM:6A33             loc_6A33:                                               ; next entry
ROM:6A33 C8                                  INY
ROM:6A34 B9 59 6B                            LDA     ctl_keys,Y              ; get entry
ROM:6A37 F0 10                               BEQ     loc_6A49                ; done? yes, exit
ROM:6A39 C5 1E                               CMP     msg_char                ; matches key?
ROM:6A3B D0 F6                               BNE     loc_6A33                ; no, loop
ROM:6A3D 98                                  TYA
ROM:6A3E 0A                                  ASL     A
ROM:6A3F A8                                  TAY                             ; y *= 2
ROM:6A40 B9 68 6B                            LDA     (ctl_key_vector_fn+1),Y ; msb of vector
ROM:6A43 48                                  PHA
ROM:6A44 B9 67 6B                            LDA     ctl_key_vector_fn,Y     ; lsb of vector
ROM:6A47 48                                  PHA                             ; set as return address
ROM:6A48 60                                  RTS                             ; jump to vector
ROM:6A49             ; ---------------------------------------------------------------------------
ROM:6A49
ROM:6A49             loc_6A49:
ROM:6A49 A5 95                               LDA     paddles_detected
ROM:6A4B C9 CA                               CMP     #0CAh ; 'Ê'             ; detected?
ROM:6A4D F0 D9                               BEQ     jmp_decode_joystick     ; yes, go
ROM:6A4F A6 1E                               LDX     msg_char
ROM:6A51 86 9E                               STX     key_1
ROM:6A53 86 9F                               STX     key_2
ROM:6A55
ROM:6A55             key_ret:
ROM:6A55 60                                  RTS
ROM:6A56             ; ---------------------------------------------------------------------------
ROM:6A56
ROM:6A56             goto_next_level:
ROM:6A56 E6 98                               INC     no_lives
ROM:6A58 E6 A6                               INC     level
ROM:6A5A E6 96                               INC     level_0_based
ROM:6A5C 46 9A                               LSR     level_active
ROM:6A5E 46 9D                               LSR     no_cheat
ROM:6A60
ROM:6A60             locret_6A60:
ROM:6A60 60                                  RTS
ROM:6A61             ; ---------------------------------------------------------------------------
ROM:6A61
ROM:6A61             extra_life:
ROM:6A61 E6 98                               INC     no_lives
ROM:6A63 D0 02                               BNE     loc_6A67
ROM:6A65 C6 98                               DEC     no_lives
ROM:6A67
ROM:6A67             loc_6A67:
ROM:6A67 20 70 7A                            JSR     display_no_lives
ROM:6A6A 46 9D                               LSR     no_cheat
ROM:6A6C 4C 12 6A                            JMP     read_controls
ROM:6A6F             ; ---------------------------------------------------------------------------
ROM:6A6F E6 97                               INC     unused_97               ; dead code
ROM:6A71 E6 98                               INC     no_lives
ROM:6A73 46 9A                               LSR     level_active
ROM:6A75
ROM:6A75             locret_6A75:
ROM:6A75 60                                  RTS
ROM:6A76             ; ---------------------------------------------------------------------------
ROM:6A76
ROM:6A76             freeze:
ROM:6A76 20 A8 86                            JSR     wait_for_key
ROM:6A79 C9 9B                               CMP     #9Bh ; ''              ; <ESC>?
ROM:6A7B D0 F9                               BNE     freeze                  ; no, loop
ROM:6A7D
ROM:6A7D             loc_6A7D:
ROM:6A7D 4C 12 6A                            JMP     read_controls
ROM:6A80             ; ---------------------------------------------------------------------------
ROM:6A80
ROM:6A80             terminate_game:
ROM:6A80 A9 01                               LDA     #1
ROM:6A82
ROM:6A82             loc_6A82:
ROM:6A82 85 98                               STA     no_lives
ROM:6A84
ROM:6A84             abort_life:                                             ; kill player
ROM:6A84 46 9A                               LSR     level_active
ROM:6A86
ROM:6A86             locret_6A86:
ROM:6A86 60                                  RTS
ROM:6A87             ; ---------------------------------------------------------------------------
ROM:6A87
ROM:6A87             toggle_sound:
ROM:6A87 A5 99                               LDA     sound_enabled
ROM:6A89 49 FF                               EOR     #0FFh
ROM:6A8B 85 99                               STA     sound_enabled
ROM:6A8D
ROM:6A8D             loc_6A8D:
ROM:6A8D 4C 12 6A                            JMP     read_controls
ROM:6A90             ; ---------------------------------------------------------------------------
ROM:6A90
ROM:6A90             enable_joystick:                                        ; flag detected
ROM:6A90 A9 CA                               LDA     #0CAh ; 'Ê'
ROM:6A92 85 95                               STA     paddles_detected
ROM:6A94
ROM:6A94             loc_6A94:
ROM:6A94 4C 12 6A                            JMP     read_controls
ROM:6A97             ; ---------------------------------------------------------------------------
ROM:6A97
ROM:6A97             enable_keyboard:                                        ; flag not detected
ROM:6A97 A9 CB                               LDA     #0CBh ; 'Ë'
ROM:6A99 85 95                               STA     paddles_detected
ROM:6A9B
ROM:6A9B             loc_6A9B:
ROM:6A9B 4C 12 6A                            JMP     read_controls
ROM:6A9E             ; ---------------------------------------------------------------------------
ROM:6A9E
ROM:6A9E             x_flip:
ROM:6A9E AD 81 6B                            LDA     byte_6B81
ROM:6AA1 AE 82 6B                            LDX     byte_6B82
ROM:6AA4 8D 82 6B                            STA     byte_6B82
ROM:6AA7 8E 81 6B                            STX     byte_6B81
ROM:6AAA
ROM:6AAA             loc_6AAA:
ROM:6AAA 4C 12 6A                            JMP     read_controls
ROM:6AAD             ; ---------------------------------------------------------------------------
ROM:6AAD
ROM:6AAD             y_flip:
ROM:6AAD AD 83 6B                            LDA     byte_6B83
ROM:6AB0 AE 84 6B                            LDX     byte_6B84
ROM:6AB3 8D 84 6B                            STA     byte_6B84
ROM:6AB6 8E 83 6B                            STX     byte_6B83
ROM:6AB9
ROM:6AB9             loc_6AB9:
ROM:6AB9 4C 12 6A                            JMP     read_controls
ROM:6ABC             ; ---------------------------------------------------------------------------
ROM:6ABC
ROM:6ABC             speed_up:
ROM:6ABC A5 8C                               LDA     game_speed
ROM:6ABE F0 0D                               BEQ     loc_6ACD
ROM:6AC0 C6 8C                               DEC     game_speed
ROM:6AC2
ROM:6AC2             loc_6AC2:
ROM:6AC2 4C 12 6A                            JMP     read_controls
ROM:6AC5             ; ---------------------------------------------------------------------------
ROM:6AC5
ROM:6AC5             slow_down:
ROM:6AC5 A5 8C                               LDA     game_speed
ROM:6AC7 C9 0F                               CMP     #0Fh
ROM:6AC9 F0 02                               BEQ     loc_6ACD
ROM:6ACB E6 8C                               INC     game_speed
ROM:6ACD
ROM:6ACD             loc_6ACD:
ROM:6ACD 4C 12 6A                            JMP     read_controls
ROM:6AD0             ; ---------------------------------------------------------------------------
ROM:6AD0
ROM:6AD0             decode_joystick:                                        ; button #1
ROM:6AD0 AD 62 C0                            LDA     0C062h
ROM:6AD3 10 04                               BPL     loc_6AD9                ; not pressed, skip
ROM:6AD5 A9 D5                               LDA     #0D5h ; 'Õ'             ; 'U' (dig left)
ROM:6AD7 D0 07                               BNE     loc_6AE0
ROM:6AD9
ROM:6AD9             loc_6AD9:                                               ; button #0
ROM:6AD9 AD 61 C0                            LDA     0C061h
ROM:6ADC 10 07                               BPL     loc_6AE5                ; not pressed, exit
ROM:6ADE A9 CF                               LDA     #0CFh ; 'Ï'             ; 'O' (dig right)
ROM:6AE0
ROM:6AE0             loc_6AE0:
ROM:6AE0 85 9E                               STA     key_1
ROM:6AE2 85 9F                               STA     key_2
ROM:6AE4 60                                  RTS
ROM:6AE5             ; ---------------------------------------------------------------------------
ROM:6AE5
ROM:6AE5             loc_6AE5:
ROM:6AE5 20 46 87                            JSR     read_joystick_axes
ROM:6AE8 A4 65                               LDY     joy_x
ROM:6AEA AD 82 6B                            LDA     byte_6B82
ROM:6AED C9 2E                               CMP     #2Eh ; '.'
ROM:6AEF F0 09                               BEQ     loc_6AFA
ROM:6AF1 CC 82 6B                            CPY     byte_6B82
ROM:6AF4 B0 0D                               BCS     loc_6B03
ROM:6AF6 A9 CC                               LDA     #0CCh ; 'Ì'             ; 'L' (move right)
ROM:6AF8 D0 24                               BNE     loc_6B1E
ROM:6AFA
ROM:6AFA             loc_6AFA:
ROM:6AFA CC 82 6B                            CPY     byte_6B82
ROM:6AFD 90 04                               BCC     loc_6B03
ROM:6AFF A9 CC                               LDA     #0CCh ; 'Ì'             ; 'L' (move right)
ROM:6B01 D0 1B                               BNE     loc_6B1E
ROM:6B03
ROM:6B03             loc_6B03:
ROM:6B03 AD 81 6B                            LDA     byte_6B81
ROM:6B06 C9 2E                               CMP     #2Eh ; '.'
ROM:6B08 F0 09                               BEQ     loc_6B13
ROM:6B0A CC 81 6B                            CPY     byte_6B81
ROM:6B0D B0 0D                               BCS     loc_6B1C
ROM:6B0F A9 CA                               LDA     #0CAh ; 'Ê'             ; 'J' (move left)
ROM:6B11 D0 0B                               BNE     loc_6B1E
ROM:6B13
ROM:6B13             loc_6B13:
ROM:6B13 CC 81 6B                            CPY     byte_6B81
ROM:6B16 90 04                               BCC     loc_6B1C
ROM:6B18 A9 CA                               LDA     #0CAh ; 'Ê'             ; 'J' (move left)
ROM:6B1A D0 02                               BNE     loc_6B1E
ROM:6B1C
ROM:6B1C             loc_6B1C:
ROM:6B1C A9 C0                               LDA     #0C0h ; 'À'
ROM:6B1E
ROM:6B1E             loc_6B1E:
ROM:6B1E 85 9F                               STA     key_2
ROM:6B20 A4 66                               LDY     joy_y
ROM:6B22 AD 83 6B                            LDA     byte_6B83
ROM:6B25 C9 2E                               CMP     #2Eh ; '.'
ROM:6B27 F0 09                               BEQ     loc_6B32
ROM:6B29 CC 83 6B                            CPY     byte_6B83
ROM:6B2C B0 0D                               BCS     loc_6B3B
ROM:6B2E A9 C9                               LDA     #0C9h ; 'É'             ; 'I' (move up)
ROM:6B30 D0 24                               BNE     loc_6B56
ROM:6B32
ROM:6B32             loc_6B32:
ROM:6B32 CC 83 6B                            CPY     byte_6B83
ROM:6B35 90 04                               BCC     loc_6B3B
ROM:6B37 A9 C9                               LDA     #0C9h ; 'É'             ; 'I' (move up)
ROM:6B39 D0 1B                               BNE     loc_6B56
ROM:6B3B
ROM:6B3B             loc_6B3B:
ROM:6B3B AD 84 6B                            LDA     byte_6B84
ROM:6B3E C9 2E                               CMP     #2Eh ; '.'
ROM:6B40 F0 09                               BEQ     loc_6B4B
ROM:6B42 CC 84 6B                            CPY     byte_6B84
ROM:6B45 B0 0D                               BCS     loc_6B54
ROM:6B47 A9 CB                               LDA     #0CBh ; 'Ë'             ; 'K' (move down)
ROM:6B49 D0 0B                               BNE     loc_6B56
ROM:6B4B
ROM:6B4B             loc_6B4B:
ROM:6B4B CC 84 6B                            CPY     byte_6B84
ROM:6B4E 90 04                               BCC     loc_6B54
ROM:6B50 A9 CB                               LDA     #0CBh ; 'Ë'             ; 'K' (move down)
ROM:6B52 D0 02                               BNE     loc_6B56
ROM:6B54
ROM:6B54             loc_6B54:
ROM:6B54 A9 C0                               LDA     #0C0h ; 'À'
ROM:6B56
ROM:6B56             loc_6B56:
ROM:6B56 85 9E                               STA     key_1
ROM:6B58 60                                  RTS
ROM:6B58             ; End of function read_controls
ROM:6B58
ROM:6B58             ; ---------------------------------------------------------------------------
ROM:6B59 9E 80 9B 92+ctl_keys:               .db 9Eh, 80h, 9Bh, 92h, 81h, 93h, 8Ah, 8Bh, 88h, 95h, 98h ; CTRL-^ (next level)
ROM:6B59 81 93 8A 8B+                        .db 99h, 8Dh, 0
ROM:6B67 55 6A       ctl_key_vector_fn:      .dw key_ret                     ; CTRL-^ (next level)
ROM:6B69 60 6A                               .dw locret_6A60                 ; CTRl-@ (extra life)
ROM:6B6B 75 6A                               .dw locret_6A75                 ; ESC (freeze toggle)
ROM:6B6D 7F 6A                               .dw loc_6A7D+2                  ; CTRL-R (terminate game)
ROM:6B6F 83 6A                               .dw loc_6A82+1                  ; CTRL-A (abort life)
ROM:6B71 86 6A                               .dw locret_6A86                 ; CTRL-S (sound toggle)
ROM:6B73 8F 6A                               .dw loc_6A8D+2                  ; CTRL-J (joystick enable)
ROM:6B75 96 6A                               .dw loc_6A94+2                  ; CTRL-K (keyboard enable)
ROM:6B77 C4 6A                               .dw loc_6AC2+2                  ; CTRL-H (speed up)
ROM:6B79 BB 6A                               .dw loc_6AB9+2                  ; CTRL-U (slow down)
ROM:6B7B 9D 6A                               .dw loc_6A9B+2                  ; CTRL-X (X flip)
ROM:6B7D AC 6A                               .dw loc_6AAA+2                  ; CTRL-Y (Y flip)
ROM:6B7F AB 77                               .dw loc_77A9+2                  ; CTRL-M (display high scores)
ROM:6B81 12          byte_6B81:              .db 12h
ROM:6B82 2E          byte_6B82:              .db 2Eh
ROM:6B83 12          byte_6B83:              .db 12h
ROM:6B84 2E          byte_6B84:              .db 2Eh
ROM:6B85
ROM:6B85             ; =============== S U B R O U T I N E =======================================
ROM:6B85
ROM:6B85
ROM:6B85             calc_char_and_addr:
ROM:6B85 A6 00                               LDX     current_col
ROM:6B87 A4 02                               LDY     x_offset_within_tile
ROM:6B89 20 8F 88                            JSR     calc_x_div_2            ; used for table lookup
ROM:6B8C 86 1E                               STX     msg_char                ; store x_in_2_pixel_incs
ROM:6B8E A4 01                               LDY     current_row
ROM:6B90 A6 03                               LDX     y_offset_within_tile
ROM:6B92 20 7C 88                            JSR     calc_scanline           ; (Y)
ROM:6B95 A6 04                               LDX     sprite_index
ROM:6B97 BD 68 69                            LDA     sprite_to_char_tbl,X    ; lookup char from sprite
ROM:6B9A A6 1E                               LDX     msg_char                ; restore x_in_2_pixel_incs
ROM:6B9C 60                                  RTS
ROM:6B9C             ; End of function calc_char_and_addr
ROM:6B9C
ROM:6B9D             ; ---------------------------------------------------------------------------
ROM:6B9D
ROM:6B9D             check_for_gold:
ROM:6B9D A5 02                               LDA     x_offset_within_tile
ROM:6B9F C9 02                               CMP     #2
ROM:6BA1 D0 50                               BNE     locret_6BF3             ; no, return
ROM:6BA3 A5 03                               LDA     y_offset_within_tile
ROM:6BA5 C9 02                               CMP     #2
ROM:6BA7 D0 4A                               BNE     locret_6BF3             ; no, return
ROM:6BA9 A4 01                               LDY     current_row             ; get current row
ROM:6BAB B9 05 1C                            LDA     lsb_row_a_tbl,Y
ROM:6BAE 85 08                               STA     lsb_row_lda_static
ROM:6BB0 B9 25 1C                            LDA     msb_row_a_static_tbl,Y
ROM:6BB3 85 09                               STA     msb_row_lda_static      ; get current row address
ROM:6BB5 A4 00                               LDY     current_col             ; get current column
ROM:6BB7 B1 08                               LDA     (8),Y                   ; get object at current row,col
ROM:6BB9 C9 07                               CMP     #7                      ; gold?
ROM:6BBB D0 36                               BNE     locret_6BF3             ; no, exit
ROM:6BBD 46 94                               LSR     enable_collision_detect
ROM:6BBF C6 93                               DEC     no_gold
ROM:6BC1 A4 01                               LDY     current_row             ; current row
ROM:6BC3 84 86                               STY     row
ROM:6BC5 A4 00                               LDY     current_col             ; current col
ROM:6BC7 84 85                               STY     col
ROM:6BC9 A9 00                               LDA     #0                      ; space
ROM:6BCB 91 08                               STA     (8),Y                   ; wipe gold from background tilemap
ROM:6BCD 20 B0 82                            JSR     display_char_pg2
ROM:6BD0 A4 86                               LDY     row
ROM:6BD2 A6 85                               LDX     col
ROM:6BD4 20 5D 88                            JSR     calc_colx5_scanline
ROM:6BD7 A9 07                               LDA     #7                      ; gold
ROM:6BD9 20 36 83                            JSR     wipe_char               ; from video display
ROM:6BDC A0 02                               LDY     #2
ROM:6BDE A9 50                               LDA     #50h ; 'P'              ; add 250
ROM:6BE0 20 92 7A                            JSR     update_and_display_score
ROM:6BE3 20 E1 87                            JSR     queue_sound
ROM:6BE3             ; ---------------------------------------------------------------------------
ROM:6BE6 07 45 06 55+                        .dw 4507h, 5506h, 4405h, 5404h, 4303h, 5302h
ROM:6BF2             ; ---------------------------------------------------------------------------
ROM:6BF2 00                                  BRK
ROM:6BF3             ; ---------------------------------------------------------------------------
ROM:6BF3
ROM:6BF3             locret_6BF3:
ROM:6BF3 60                                  RTS
ROM:6BF4
ROM:6BF4             ; =============== S U B R O U T I N E =======================================
ROM:6BF4
ROM:6BF4
ROM:6BF4             update_sprite_index:
ROM:6BF4 E6 04                               INC     sprite_index            ; next sprite index
ROM:6BF6 C5 04                               CMP     sprite_index            ; > 1st sprint index?
ROM:6BF8 90 03                               BCC     loc_6BFD                ; yes, skip
ROM:6BFA
ROM:6BFA             loc_6BFA:                                               ; reset sprite index
ROM:6BFA 85 04                               STA     sprite_index
ROM:6BFC 60                                  RTS
ROM:6BFD             ; ---------------------------------------------------------------------------
ROM:6BFD
ROM:6BFD             loc_6BFD:                                               ; > last sprite index?
ROM:6BFD E4 04                               CPX     sprite_index
ROM:6BFF 90 F9                               BCC     loc_6BFA                ; yes, reset
ROM:6C01 60                                  RTS
ROM:6C01             ; End of function update_sprite_index
ROM:6C01
ROM:6C02
ROM:6C02             ; =============== S U B R O U T I N E =======================================
ROM:6C02
ROM:6C02
ROM:6C02             draw_player_sprite:
ROM:6C02 20 85 6B                            JSR     calc_char_and_addr
ROM:6C05 20 A7 83                            JSR     display_transparent_char
ROM:6C08 A5 52                               LDA     collision_detect
ROM:6C0A F0 06                               BEQ     locret_6C12
ROM:6C0C A5 94                               LDA     enable_collision_detect
ROM:6C0E F0 02                               BEQ     locret_6C12
ROM:6C10 46 9A                               LSR     level_active
ROM:6C12
ROM:6C12             locret_6C12:
ROM:6C12 60                                  RTS
ROM:6C12             ; End of function draw_player_sprite
ROM:6C12
ROM:6C13
ROM:6C13             ; =============== S U B R O U T I N E =======================================
ROM:6C13
ROM:6C13
ROM:6C13             adjust_x_offset_in_tile:
ROM:6C13 A5 02                               LDA     x_offset_within_tile
ROM:6C15 C9 02                               CMP     #2
ROM:6C17 90 07                               BCC     loc_6C20
ROM:6C19 F0 0A                               BEQ     locret_6C25
ROM:6C1B C6 02                               DEC     x_offset_within_tile
ROM:6C1D 4C 9D 6B                            JMP     check_for_gold
ROM:6C20             ; ---------------------------------------------------------------------------
ROM:6C20
ROM:6C20             loc_6C20:
ROM:6C20 E6 02                               INC     x_offset_within_tile
ROM:6C22 4C 9D 6B                            JMP     check_for_gold
ROM:6C25             ; ---------------------------------------------------------------------------
ROM:6C25
ROM:6C25             locret_6C25:
ROM:6C25 60                                  RTS
ROM:6C25             ; End of function adjust_x_offset_in_tile
ROM:6C25
ROM:6C26
ROM:6C26             ; =============== S U B R O U T I N E =======================================
ROM:6C26
ROM:6C26
ROM:6C26             adjust_y_offset_within_tile:
ROM:6C26 A5 03                               LDA     y_offset_within_tile
ROM:6C28 C9 02                               CMP     #2                      ; offset<2?
ROM:6C2A 90 07                               BCC     loc_6C33                ; yes, skip
ROM:6C2C F0 0A                               BEQ     locret_6C38
ROM:6C2E C6 03                               DEC     y_offset_within_tile
ROM:6C30 4C 9D 6B                            JMP     check_for_gold
ROM:6C33             ; ---------------------------------------------------------------------------
ROM:6C33
ROM:6C33             loc_6C33:
ROM:6C33 E6 03                               INC     y_offset_within_tile
ROM:6C35 4C 9D 6B                            JMP     check_for_gold
ROM:6C38             ; ---------------------------------------------------------------------------
ROM:6C38
ROM:6C38             locret_6C38:
ROM:6C38 60                                  RTS
ROM:6C38             ; End of function adjust_y_offset_within_tile
ROM:6C38
ROM:6C39             ; ---------------------------------------------------------------------------
ROM:6C39             ; START OF FUNCTION CHUNK FOR dig_left
ROM:6C39
ROM:6C39             add_hole_entry:
ROM:6C39 A9 00                               LDA     #0
ROM:6C3B 85 9C                               STA     dig_dir
ROM:6C3D A4 01                               LDY     current_row
ROM:6C3F C8                                  INY
ROM:6C40 86 85                               STX     col
ROM:6C42 84 86                               STY     row
ROM:6C44 B9 05 1C                            LDA     lsb_row_a_tbl,Y
ROM:6C47 85 06                               STA     lsb_row_lda_dyn
ROM:6C49 B9 15 1C                            LDA     msb_row_a_dyn_tbl,Y
ROM:6C4C 85 07                               STA     msb_row_lda_dyn
ROM:6C4E A9 00                               LDA     #0                      ; space
ROM:6C50 A4 85                               LDY     col
ROM:6C52 91 06                               STA     (lsb_row_lda_dyn),Y
ROM:6C54 20 AA 82                            JSR     display_char_pg1
ROM:6C57 A9 00                               LDA     #0                      ; space
ROM:6C59 20 B0 82                            JSR     display_char_pg2
ROM:6C5C C6 86                               DEC     row
ROM:6C5E A9 00                               LDA     #0                      ; space
ROM:6C60 20 AA 82                            JSR     display_char_pg1
ROM:6C63 E6 86                               INC     row
ROM:6C65 A2 FF                               LDX     #0FFh
ROM:6C67
ROM:6C67             loc_6C67:                                               ; next hole
ROM:6C67 E8                                  INX
ROM:6C68 E0 1E                               CPX     #1Eh                    ; max?
ROM:6C6A F0 15                               BEQ     locret_6C81             ; yes, exit
ROM:6C6C BD E0 0C                            LDA     hole_cnt,X              ; empty entry?
ROM:6C6F D0 F6                               BNE     loc_6C67                ; yes, loop
ROM:6C71 A5 86                               LDA     row
ROM:6C73 9D C0 0C                            STA     hole_row,X              ; store row of hole
ROM:6C76 A5 85                               LDA     col
ROM:6C78 9D A0 0C                            STA     hole_col,X              ; store column of hole
ROM:6C7B A9 B4                               LDA     #180                    ; init counter
ROM:6C7D 9D E0 0C                            STA     hole_cnt,X              ; store counter
ROM:6C80 38                                  SEC
ROM:6C81
ROM:6C81             locret_6C81:
ROM:6C81 60                                  RTS
ROM:6C81             ; END OF FUNCTION CHUNK FOR dig_left
ROM:6C82
ROM:6C82             ; =============== S U B R O U T I N E =======================================
ROM:6C82
ROM:6C82
ROM:6C82             handle_guards:
ROM:6C82 A6 8D                               LDX     no_guards               ; any guards left?
ROM:6C84 F0 20                               BEQ     locret_6CA6             ; no, exit
ROM:6C86 E6 64                               INC     byte_64
ROM:6C88 A4 64                               LDY     byte_64
ROM:6C8A C0 03                               CPY     #3
ROM:6C8C 90 04                               BCC     loc_6C92
ROM:6C8E A0 00                               LDY     #0
ROM:6C90 84 64                               STY     byte_64
ROM:6C92
ROM:6C92             loc_6C92:
ROM:6C92 B9 60 00                            LDA     byte_60,Y
ROM:6C95 85 63                               STA     byte_63
ROM:6C97
ROM:6C97             loc_6C97:
ROM:6C97 46 63                               LSR     byte_63
ROM:6C99 90 07                               BCC     loc_6CA2
ROM:6C9B 20 DB 6C                            JSR     update_guards           ; update guards
ROM:6C9E A5 9A                               LDA     level_active            ; player still alive?
ROM:6CA0 F0 04                               BEQ     locret_6CA6             ; no, exit
ROM:6CA2
ROM:6CA2             loc_6CA2:
ROM:6CA2 A5 63                               LDA     byte_63
ROM:6CA4 D0 F1                               BNE     loc_6C97
ROM:6CA6
ROM:6CA6             locret_6CA6:
ROM:6CA6 60                                  RTS
ROM:6CA6             ; End of function handle_guards
ROM:6CA6
ROM:6CA6             ; ---------------------------------------------------------------------------
ROM:6CA7 00 00 00    byte_6CA7:              .db 0, 0, 0
ROM:6CAA 00 01 01                            .db 0, 1, 1
ROM:6CAD 01 01 01                            .db 1, 1, 1
ROM:6CB0 01 03 01                            .db 1, 3, 1
ROM:6CB3 01 03 03                            .db 1, 3, 3
ROM:6CB6 03 03 03                            .db 3, 3, 3
ROM:6CB9 03 03 07                            .db 3, 3, 7
ROM:6CBC 03 07 07                            .db 3, 7, 7
ROM:6CBF 07 07 07                            .db 7, 7, 7
ROM:6CC2 07 07 0F                            .db 7, 7, 0Fh
ROM:6CC5 07 0F 0F                            .db 7, 0Fh, 0Fh
ROM:6CC8 0F 0F 0F                            .db 0Fh, 0Fh, 0Fh
ROM:6CCB 08 2B 2C 30+guard_sprite_to_char_tbl:.db 8, 2Bh, 2Ch, 30h, 31h, 32h, 36h, 28h, 29h, 2Ah, 2Dh
ROM:6CCB 31 32 36 28+                        .db 2Eh, 2Fh, 35h, 33h, 34h
ROM:6CDB             ; ---------------------------------------------------------------------------
ROM:6CDB
ROM:6CDB             update_guards:                                          ; next guard
ROM:6CDB E6 19                               INC     curr_guard
ROM:6CDD A6 8D                               LDX     no_guards
ROM:6CDF E4 19                               CPX     curr_guard              ; max?
ROM:6CE1 B0 04                               BCS     loc_6CE7                ; no, skip
ROM:6CE3 A2 01                               LDX     #1
ROM:6CE5 86 19                               STX     curr_guard              ; set current to #1
ROM:6CE7
ROM:6CE7             loc_6CE7:
ROM:6CE7 20 CE 75                            JSR     copy_guard_to_curr
ROM:6CEA A5 16                               LDA     curr_guard_state
ROM:6CEC 30 1A                               BMI     check_guard_falling
ROM:6CEE F0 18                               BEQ     check_guard_falling
ROM:6CF0 C6 16                               DEC     curr_guard_state
ROM:6CF2 A4 16                               LDY     curr_guard_state
ROM:6CF4 C0 0D                               CPY     #13
ROM:6CF6 B0 03                               BCS     save_guard_and_ret
ROM:6CF8 4C 65 6E                            JMP     check_wriggle
ROM:6CFB             ; ---------------------------------------------------------------------------
ROM:6CFB
ROM:6CFB             save_guard_and_ret:
ROM:6CFB A6 19                               LDX     curr_guard
ROM:6CFD BD 98 0C                            LDA     guard_cnt,X
ROM:6D00 F0 03                               BEQ     loc_6D05
ROM:6D02 4C A8 75                            JMP     copy_curr_to_guard      ; save guard data
ROM:6D05             ; ---------------------------------------------------------------------------
ROM:6D05
ROM:6D05             loc_6D05:
ROM:6D05 4C B7 6D                            JMP     render_guard_and_ret
ROM:6D08             ; ---------------------------------------------------------------------------
ROM:6D08
ROM:6D08             check_guard_falling:
ROM:6D08 A4 13                               LDY     curr_guard_row
ROM:6D0A B9 05 1C                            LDA     lsb_row_a_tbl,Y
ROM:6D0D 85 08                               STA     lsb_row_lda_static
ROM:6D0F B9 25 1C                            LDA     msb_row_a_static_tbl,Y
ROM:6D12 85 09                               STA     msb_row_lda_static      ; setup tilemap address
ROM:6D14 A4 12                               LDY     curr_guard_col
ROM:6D16 B1 08                               LDA     (lsb_row_lda_static),Y  ; get object from tilemap
ROM:6D18 C9 03                               CMP     #3                      ; ladder?
ROM:6D1A F0 45                               BEQ     loc_6D61                ; yes, go
ROM:6D1C C9 04                               CMP     #4                      ; rope?
ROM:6D1E D0 06                               BNE     loc_6D26                ; no, skip
ROM:6D20 A5 18                               LDA     curr_guard_y_offset
ROM:6D22 C9 02                               CMP     #2
ROM:6D24 F0 3B                               BEQ     loc_6D61
ROM:6D26
ROM:6D26             loc_6D26:
ROM:6D26 A5 18                               LDA     curr_guard_y_offset
ROM:6D28 C9 02                               CMP     #2
ROM:6D2A 90 38                               BCC     handle_guard_falling
ROM:6D2C A4 13                               LDY     curr_guard_row
ROM:6D2E C0 0F                               CPY     #15                     ; bottom row?
ROM:6D30 F0 2F                               BEQ     loc_6D61
ROM:6D32 B9 06 1C                            LDA     (lsb_row_a_tbl+1),Y
ROM:6D35 85 06                               STA     lsb_row_lda_dyn
ROM:6D37 85 08                               STA     lsb_row_lda_static
ROM:6D39 B9 26 1C                            LDA     (msb_row_a_static_tbl+1),Y
ROM:6D3C 85 09                               STA     msb_row_lda_static
ROM:6D3E B9 16 1C                            LDA     (msb_row_a_dyn_tbl+1),Y
ROM:6D41 85 07                               STA     msb_row_lda_dyn
ROM:6D43 A4 12                               LDY     curr_guard_col
ROM:6D45 B1 06                               LDA     (lsb_row_lda_dyn),Y     ; get object from tilemap
ROM:6D47 C9 00                               CMP     #0                      ; space?
ROM:6D49 F0 19                               BEQ     handle_guard_falling    ; yes, go
ROM:6D4B C9 09                               CMP     #9                      ; player?
ROM:6D4D F0 15                               BEQ     handle_guard_falling    ; yes, go
ROM:6D4F C9 08                               CMP     #8                      ; guard?
ROM:6D51 F0 0E                               BEQ     loc_6D61                ; yes, skip
ROM:6D53 B1 08                               LDA     (lsb_row_lda_static),Y  ; get object from tilemap
ROM:6D55 C9 01                               CMP     #1                      ; brick?
ROM:6D57 F0 08                               BEQ     loc_6D61                ; yes, skip
ROM:6D59 C9 02                               CMP     #2                      ; solid?
ROM:6D5B F0 04                               BEQ     loc_6D61                ; yes, skip
ROM:6D5D C9 03                               CMP     #3                      ; ladder?
ROM:6D5F D0 03                               BNE     handle_guard_falling    ; no, go
ROM:6D61
ROM:6D61             loc_6D61:
ROM:6D61 4C 85 6E                            JMP     calc_guard_movement
ROM:6D64             ; ---------------------------------------------------------------------------
ROM:6D64
ROM:6D64             handle_guard_falling:
ROM:6D64 20 DF 74                            JSR     calc_guard_xychar
ROM:6D67 20 36 83                            JSR     wipe_char
ROM:6D6A 20 82 75                            JSR     adjust_guard_x_offset
ROM:6D6D A9 06                               LDA     #6                      ; =char $36 = fall left
ROM:6D6F A4 15                               LDY     curr_guard_dir          ; left?
ROM:6D71 30 02                               BMI     loc_6D75                ; yes, skip
ROM:6D73 A9 0D                               LDA     #0Dh                    ; =char $35 = fall right
ROM:6D75
ROM:6D75             loc_6D75:
ROM:6D75 85 14                               STA     curr_guard_sprite
ROM:6D77 E6 18                               INC     curr_guard_y_offset
ROM:6D79 A5 18                               LDA     curr_guard_y_offset
ROM:6D7B C9 05                               CMP     #5                      ; >5?
ROM:6D7D B0 41                               BCS     guard_fall_into_next_row ; yes, go
ROM:6D7F A5 18                               LDA     curr_guard_y_offset
ROM:6D81 C9 02                               CMP     #2
ROM:6D83 D0 32                               BNE     render_guard_and_ret
ROM:6D85 20 F7 74                            JSR     check_guard_pickup_gold
ROM:6D88 A4 13                               LDY     curr_guard_row
ROM:6D8A B9 05 1C                            LDA     lsb_row_a_tbl,Y
ROM:6D8D 85 08                               STA     lsb_row_lda_static
ROM:6D8F B9 25 1C                            LDA     msb_row_a_static_tbl,Y
ROM:6D92 85 09                               STA     msb_row_lda_static
ROM:6D94 A4 12                               LDY     curr_guard_col
ROM:6D96 B1 08                               LDA     (lsb_row_lda_static),Y  ; get object from tilemap
ROM:6D98 C9 01                               CMP     #1                      ; brick?
ROM:6D9A D0 1B                               BNE     render_guard_and_ret    ; no, go
ROM:6D9A                                                                     ; guard hit bottom of hole
ROM:6D9C A5 16                               LDA     curr_guard_state
ROM:6D9E 10 02                               BPL     loc_6DA2
ROM:6DA0 C6 93                               DEC     no_gold
ROM:6DA2
ROM:6DA2             loc_6DA2:
ROM:6DA2 A5 5F                               LDA     guard_trap_cnt_init
ROM:6DA4 85 16                               STA     curr_guard_state
ROM:6DA6 A0 00                               LDY     #0
ROM:6DA8 A9 75                               LDA     #75h ; 'u'              ; add 75
ROM:6DAA 20 92 7A                            JSR     update_and_display_score
ROM:6DAD 20 E1 87                            JSR     queue_sound
ROM:6DAD             ; ---------------------------------------------------------------------------
ROM:6DB0 06 20 04 30+                        .dw 2006h, 3004h, 4002h
ROM:6DB6             ; ---------------------------------------------------------------------------
ROM:6DB6 00                                  BRK
ROM:6DB7             ; ---------------------------------------------------------------------------
ROM:6DB7
ROM:6DB7             render_guard_and_ret:
ROM:6DB7 20 DF 74                            JSR     calc_guard_xychar
ROM:6DBA 20 A7 83                            JSR     display_transparent_char
ROM:6DBD 4C A8 75                            JMP     copy_curr_to_guard
ROM:6DC0             ; ---------------------------------------------------------------------------
ROM:6DC0
ROM:6DC0             guard_fall_into_next_row:
ROM:6DC0 A9 00                               LDA     #0
ROM:6DC2 85 18                               STA     curr_guard_y_offset
ROM:6DC4 A4 13                               LDY     curr_guard_row
ROM:6DC6 B9 05 1C                            LDA     lsb_row_a_tbl,Y
ROM:6DC9 85 06                               STA     lsb_row_lda_dyn
ROM:6DCB 85 08                               STA     lsb_row_lda_static
ROM:6DCD B9 15 1C                            LDA     msb_row_a_dyn_tbl,Y
ROM:6DD0 85 07                               STA     msb_row_lda_dyn
ROM:6DD2 B9 25 1C                            LDA     msb_row_a_static_tbl,Y
ROM:6DD5 85 09                               STA     msb_row_lda_static      ; setup tilemap address
ROM:6DD7 A4 12                               LDY     curr_guard_col
ROM:6DD9 B1 08                               LDA     (lsb_row_lda_static),Y
ROM:6DDB C9 01                               CMP     #1
ROM:6DDD D0 02                               BNE     loc_6DE1
ROM:6DDF A9 00                               LDA     #0
ROM:6DE1
ROM:6DE1             loc_6DE1:
ROM:6DE1 91 06                               STA     (lsb_row_lda_dyn),Y
ROM:6DE3 E6 13                               INC     curr_guard_row
ROM:6DE5 A4 13                               LDY     curr_guard_row
ROM:6DE7 B9 05 1C                            LDA     lsb_row_a_tbl,Y
ROM:6DEA 85 06                               STA     lsb_row_lda_dyn
ROM:6DEC 85 08                               STA     lsb_row_lda_static
ROM:6DEE B9 15 1C                            LDA     msb_row_a_dyn_tbl,Y
ROM:6DF1 85 07                               STA     msb_row_lda_dyn
ROM:6DF3 B9 25 1C                            LDA     msb_row_a_static_tbl,Y
ROM:6DF6 85 09                               STA     msb_row_lda_static      ; setup tilemap address
ROM:6DF8 A4 12                               LDY     curr_guard_col
ROM:6DFA B1 06                               LDA     (lsb_row_lda_dyn),Y
ROM:6DFC C9 09                               CMP     #9                      ; player?
ROM:6DFE D0 02                               BNE     loc_6E02                ; no, skip
ROM:6E00 46 9A                               LSR     level_active            ; kill player
ROM:6E02
ROM:6E02             loc_6E02:
ROM:6E02 B1 08                               LDA     (lsb_row_lda_static),Y
ROM:6E04 C9 01                               CMP     #1
ROM:6E06 D0 50                               BNE     loc_6E58
ROM:6E08 A5 16                               LDA     curr_guard_state
ROM:6E0A 10 4C                               BPL     loc_6E58
ROM:6E0C A4 13                               LDY     curr_guard_row          ; just fallen into a hole!
ROM:6E0E 88                                  DEY
ROM:6E0F 84 86                               STY     row
ROM:6E11 B9 05 1C                            LDA     lsb_row_a_tbl,Y
ROM:6E14 85 06                               STA     lsb_row_lda_dyn
ROM:6E16 85 08                               STA     lsb_row_lda_static
ROM:6E18 B9 15 1C                            LDA     msb_row_a_dyn_tbl,Y
ROM:6E1B 85 07                               STA     msb_row_lda_dyn
ROM:6E1D B9 25 1C                            LDA     msb_row_a_static_tbl,Y
ROM:6E20 85 09                               STA     msb_row_lda_static
ROM:6E22 A4 12                               LDY     curr_guard_col
ROM:6E24 84 85                               STY     col
ROM:6E26 B1 08                               LDA     (lsb_row_lda_static),Y
ROM:6E28 C9 00                               CMP     #0
ROM:6E2A F0 05                               BEQ     guard_drop_gold
ROM:6E2C C6 93                               DEC     no_gold
ROM:6E2E 4C 46 6E                            JMP     loc_6E46
ROM:6E31             ; ---------------------------------------------------------------------------
ROM:6E31
ROM:6E31             guard_drop_gold:                                        ; gold
ROM:6E31 A9 07                               LDA     #7
ROM:6E33 91 06                               STA     (lsb_row_lda_dyn),Y     ; update tilemap
ROM:6E35 91 08                               STA     (lsb_row_lda_static),Y  ; update tilemap
ROM:6E37 20 B0 82                            JSR     display_char_pg2        ; render on background
ROM:6E3A A4 86                               LDY     row
ROM:6E3C A6 85                               LDX     col
ROM:6E3E 20 5D 88                            JSR     calc_colx5_scanline
ROM:6E41 A9 07                               LDA     #7                      ; gold
ROM:6E43 20 A7 83                            JSR     display_transparent_char ; render on foreground
ROM:6E46
ROM:6E46             loc_6E46:
ROM:6E46 A4 13                               LDY     curr_guard_row
ROM:6E48 B9 05 1C                            LDA     lsb_row_a_tbl,Y
ROM:6E4B 85 06                               STA     lsb_row_lda_dyn
ROM:6E4D B9 15 1C                            LDA     msb_row_a_dyn_tbl,Y
ROM:6E50 85 07                               STA     msb_row_lda_dyn         ; setup tilemap addr
ROM:6E52 A9 00                               LDA     #0
ROM:6E54 85 16                               STA     curr_guard_state
ROM:6E56 A4 12                               LDY     curr_guard_col
ROM:6E58
ROM:6E58             loc_6E58:                                               ; guard
ROM:6E58 A9 08                               LDA     #8
ROM:6E5A 91 06                               STA     (lsb_row_lda_dyn),Y     ; update tilemap
ROM:6E5C 20 DF 74                            JSR     calc_guard_xychar
ROM:6E5F 20 A7 83                            JSR     display_transparent_char ; render on screen
ROM:6E62 4C A8 75                            JMP     copy_curr_to_guard
ROM:6E65             ; ---------------------------------------------------------------------------
ROM:6E65
ROM:6E65             check_wriggle:                                          ; still wriggling?
ROM:6E65 C0 07                               CPY     #7
ROM:6E67 90 1C                               BCC     calc_guard_movement     ; no, skip
ROM:6E69 20 DF 74                            JSR     calc_guard_xychar
ROM:6E6C 20 36 83                            JSR     wipe_char
ROM:6E6F A4 16                               LDY     curr_guard_state
ROM:6E71 B9 78 6E                            LDA     (loc_6E76+2),Y          ; get wriggle x_offset
ROM:6E74 85 17                               STA     curr_guard_x_offset
ROM:6E76
ROM:6E76             loc_6E76:
ROM:6E76 20 DF 74                            JSR     calc_guard_xychar
ROM:6E79 20 A7 83                            JSR     display_transparent_char
ROM:6E7C 4C A8 75                            JMP     copy_curr_to_guard
ROM:6E7C             ; ---------------------------------------------------------------------------
ROM:6E7F 02 01 02 03+wriggle_tbl:            .db 2, 1, 2, 3, 2, 1
ROM:6E85             ; ---------------------------------------------------------------------------
ROM:6E85
ROM:6E85             calc_guard_movement:
ROM:6E85 A6 12                               LDX     curr_guard_col
ROM:6E87 A4 13                               LDY     curr_guard_row
ROM:6E89 20 D8 70                            JSR     guard_ai                ; *** AI *** ???
ROM:6E8C 0A                                  ASL     A                       ; byte to word offset
ROM:6E8D A8                                  TAY
ROM:6E8E B9 98 6E                            LDA     (guard_move_vector_tbl+1),Y
ROM:6E91 48                                  PHA
ROM:6E92 B9 97 6E                            LDA     guard_move_vector_tbl,Y
ROM:6E95 48                                  PHA
ROM:6E96 60                                  RTS                             ; go to vector fn
ROM:6E96             ; ---------------------------------------------------------------------------
ROM:6E97 A7 75       guard_move_vector_tbl:  .dw 75A7h                       ; copy_guard_to_curr
ROM:6E99 BB 6F                               .dw 6FBBh                       ; guard_move_left
ROM:6E9B 46 70                               .dw 7046h                       ; guard_move_right
ROM:6E9D AB 6E                               .dw 6EABh                       ; guard_move_up
ROM:6E9F 38 6F                               .dw 6F38h                       ; guard_move_down
ROM:6EA1             ; ---------------------------------------------------------------------------
ROM:6EA1
ROM:6EA1             guard_cant_climb:
ROM:6EA1 A5 16                               LDA     curr_guard_state
ROM:6EA3 F0 04                               BEQ     loc_6EA9
ROM:6EA5 30 02                               BMI     loc_6EA9
ROM:6EA7 E6 16                               INC     curr_guard_state
ROM:6EA9
ROM:6EA9             loc_6EA9:
ROM:6EA9 4C A8 75                            JMP     copy_curr_to_guard
ROM:6EAC             ; ---------------------------------------------------------------------------
ROM:6EAC
ROM:6EAC             guard_move_up:
ROM:6EAC A4 18                               LDY     curr_guard_y_offset
ROM:6EAE C0 03                               CPY     #3
ROM:6EB0 B0 23                               BCS     guard_can_move_up
ROM:6EB2 A4 13                               LDY     curr_guard_row          ; top row?
ROM:6EB4 F0 EB                               BEQ     guard_cant_climb        ; yes, go
ROM:6EB6 88                                  DEY                             ; row above
ROM:6EB7 B9 05 1C                            LDA     lsb_row_a_tbl,Y
ROM:6EBA 85 06                               STA     lsb_row_lda_dyn
ROM:6EBC B9 15 1C                            LDA     msb_row_a_dyn_tbl,Y
ROM:6EBF 85 07                               STA     msb_row_lda_dyn
ROM:6EC1 A4 12                               LDY     curr_guard_col
ROM:6EC3 B1 06                               LDA     (lsb_row_lda_dyn),Y
ROM:6EC5 C9 01                               CMP     #1
ROM:6EC7 F0 D8                               BEQ     guard_cant_climb
ROM:6EC9 C9 02                               CMP     #2
ROM:6ECB F0 D4                               BEQ     guard_cant_climb
ROM:6ECD C9 05                               CMP     #5
ROM:6ECF F0 D0                               BEQ     guard_cant_climb
ROM:6ED1 C9 08                               CMP     #8
ROM:6ED3 F0 CC                               BEQ     guard_cant_climb
ROM:6ED5
ROM:6ED5             guard_can_move_up:
ROM:6ED5 20 DF 74                            JSR     calc_guard_xychar
ROM:6ED8 20 36 83                            JSR     wipe_char
ROM:6EDB 20 82 75                            JSR     adjust_guard_x_offset
ROM:6EDE A4 13                               LDY     curr_guard_row
ROM:6EE0 B9 05 1C                            LDA     lsb_row_a_tbl,Y
ROM:6EE3 85 06                               STA     lsb_row_lda_dyn
ROM:6EE5 85 08                               STA     lsb_row_lda_static
ROM:6EE7 B9 15 1C                            LDA     msb_row_a_dyn_tbl,Y
ROM:6EEA 85 07                               STA     msb_row_lda_dyn
ROM:6EEC B9 25 1C                            LDA     msb_row_a_static_tbl,Y
ROM:6EEF 85 09                               STA     msb_row_lda_static
ROM:6EF1 C6 18                               DEC     curr_guard_y_offset
ROM:6EF3 10 31                               BPL     guard_climber_check_for_gold
ROM:6EF5 20 3E 75                            JSR     check_guard_drop_gold
ROM:6EF8 A4 12                               LDY     curr_guard_col
ROM:6EFA B1 08                               LDA     (lsb_row_lda_static),Y  ; get object from tilemap
ROM:6EFC C9 01                               CMP     #1                      ; brick?
ROM:6EFE D0 02                               BNE     loc_6F02                ; no, skip
ROM:6F00 A9 00                               LDA     #0                      ; space
ROM:6F02
ROM:6F02             loc_6F02:
ROM:6F02 91 06                               STA     (lsb_row_lda_dyn),Y
ROM:6F04 C6 13                               DEC     curr_guard_row
ROM:6F06 A4 13                               LDY     curr_guard_row
ROM:6F08 B9 05 1C                            LDA     lsb_row_a_tbl,Y
ROM:6F0B 85 06                               STA     lsb_row_lda_dyn
ROM:6F0D B9 15 1C                            LDA     msb_row_a_dyn_tbl,Y
ROM:6F10 85 07                               STA     msb_row_lda_dyn
ROM:6F12 A4 12                               LDY     curr_guard_col
ROM:6F14 B1 06                               LDA     (lsb_row_lda_dyn),Y
ROM:6F16 C9 09                               CMP     #9                      ; player?
ROM:6F18 D0 02                               BNE     loc_6F1C                ; no, skip
ROM:6F1A 46 9A                               LSR     level_active
ROM:6F1C
ROM:6F1C             loc_6F1C:                                               ; enemy
ROM:6F1C A9 08                               LDA     #8
ROM:6F1E 91 06                               STA     (lsb_row_lda_dyn),Y     ; update tilemap
ROM:6F20 A9 04                               LDA     #4
ROM:6F22 85 18                               STA     curr_guard_y_offset
ROM:6F24 D0 03                               BNE     update_guard_climber_sprite
ROM:6F26
ROM:6F26             guard_climber_check_for_gold:
ROM:6F26 20 F7 74                            JSR     check_guard_pickup_gold
ROM:6F29
ROM:6F29             update_guard_climber_sprite:                            ; 1st climber sprite
ROM:6F29 A9 0E                               LDA     #0Eh
ROM:6F2B A2 0F                               LDX     #0Fh                    ; last climber sprite
ROM:6F2D 20 74 75                            JSR     update_guard_sprite_index
ROM:6F30 20 DF 74                            JSR     calc_guard_xychar
ROM:6F33 20 A7 83                            JSR     display_transparent_char
ROM:6F36 4C A8 75                            JMP     copy_curr_to_guard
ROM:6F39             ; ---------------------------------------------------------------------------
ROM:6F39
ROM:6F39             guard_move_down:
ROM:6F39 A4 18                               LDY     curr_guard_y_offset
ROM:6F3B C0 02                               CPY     #2
ROM:6F3D 90 24                               BCC     guard_can_move_down
ROM:6F3F A4 13                               LDY     curr_guard_row
ROM:6F41 C0 0F                               CPY     #0Fh
ROM:6F43 B0 1B                               BCS     guard_cant_move_down
ROM:6F45 C8                                  INY
ROM:6F46 B9 05 1C                            LDA     lsb_row_a_tbl,Y
ROM:6F49 85 06                               STA     lsb_row_lda_dyn
ROM:6F4B B9 15 1C                            LDA     msb_row_a_dyn_tbl,Y
ROM:6F4E 85 07                               STA     msb_row_lda_dyn
ROM:6F50 A4 12                               LDY     curr_guard_col
ROM:6F52 B1 06                               LDA     (lsb_row_lda_dyn),Y     ; get object from tilemap
ROM:6F54 C9 02                               CMP     #2                      ; solid?
ROM:6F56 F0 08                               BEQ     guard_cant_move_down    ; yes, skip
ROM:6F58 C9 08                               CMP     #8                      ; enemy?
ROM:6F5A F0 04                               BEQ     guard_cant_move_down    ; yes, skip
ROM:6F5C C9 01                               CMP     #1                      ; brick?
ROM:6F5E D0 03                               BNE     guard_can_move_down     ; no, go
ROM:6F60
ROM:6F60             guard_cant_move_down:
ROM:6F60 4C A8 75                            JMP     copy_curr_to_guard
ROM:6F63             ; ---------------------------------------------------------------------------
ROM:6F63
ROM:6F63             guard_can_move_down:
ROM:6F63 20 DF 74                            JSR     calc_guard_xychar
ROM:6F66 20 36 83                            JSR     wipe_char
ROM:6F69 20 82 75                            JSR     adjust_guard_x_offset
ROM:6F6C A4 13                               LDY     curr_guard_row
ROM:6F6E B9 05 1C                            LDA     lsb_row_a_tbl,Y
ROM:6F71 85 06                               STA     lsb_row_lda_dyn
ROM:6F73 85 08                               STA     lsb_row_lda_static
ROM:6F75 B9 15 1C                            LDA     msb_row_a_dyn_tbl,Y
ROM:6F78 85 07                               STA     msb_row_lda_dyn
ROM:6F7A B9 25 1C                            LDA     msb_row_a_static_tbl,Y
ROM:6F7D 85 09                               STA     msb_row_lda_static
ROM:6F7F E6 18                               INC     curr_guard_y_offset
ROM:6F81 A5 18                               LDA     curr_guard_y_offset
ROM:6F83 C9 05                               CMP     #5
ROM:6F85 90 32                               BCC     loc_6FB9
ROM:6F87 20 3E 75                            JSR     check_guard_drop_gold
ROM:6F8A A4 12                               LDY     curr_guard_col
ROM:6F8C B1 08                               LDA     (lsb_row_lda_static),Y
ROM:6F8E C9 01                               CMP     #1
ROM:6F90 D0 02                               BNE     loc_6F94
ROM:6F92 A9 00                               LDA     #0
ROM:6F94
ROM:6F94             loc_6F94:
ROM:6F94 91 06                               STA     (lsb_row_lda_dyn),Y
ROM:6F96 E6 13                               INC     curr_guard_row
ROM:6F98 A4 13                               LDY     curr_guard_row
ROM:6F9A B9 05 1C                            LDA     lsb_row_a_tbl,Y
ROM:6F9D 85 06                               STA     lsb_row_lda_dyn
ROM:6F9F B9 15 1C                            LDA     msb_row_a_dyn_tbl,Y
ROM:6FA2 85 07                               STA     msb_row_lda_dyn
ROM:6FA4 A4 12                               LDY     curr_guard_col
ROM:6FA6 B1 06                               LDA     (lsb_row_lda_dyn),Y     ; get object from tilemap
ROM:6FA8 C9 09                               CMP     #9                      ; player?
ROM:6FAA D0 02                               BNE     loc_6FAE
ROM:6FAC 46 9A                               LSR     level_active
ROM:6FAE
ROM:6FAE             loc_6FAE:
ROM:6FAE A9 08                               LDA     #8
ROM:6FB0 91 06                               STA     (lsb_row_lda_dyn),Y
ROM:6FB2 A9 00                               LDA     #0
ROM:6FB4 85 18                               STA     curr_guard_y_offset
ROM:6FB6 4C 29 6F                            JMP     update_guard_climber_sprite
ROM:6FB9             ; ---------------------------------------------------------------------------
ROM:6FB9
ROM:6FB9             loc_6FB9:
ROM:6FB9 4C 26 6F                            JMP     guard_climber_check_for_gold
ROM:6FBC             ; ---------------------------------------------------------------------------
ROM:6FBC
ROM:6FBC             guard_move_left:
ROM:6FBC A4 13                               LDY     curr_guard_row
ROM:6FBE B9 05 1C                            LDA     lsb_row_a_tbl,Y
ROM:6FC1 85 06                               STA     lsb_row_lda_dyn
ROM:6FC3 85 08                               STA     lsb_row_lda_static
ROM:6FC5 B9 15 1C                            LDA     msb_row_a_dyn_tbl,Y
ROM:6FC8 85 07                               STA     msb_row_lda_dyn
ROM:6FCA B9 25 1C                            LDA     msb_row_a_static_tbl,Y
ROM:6FCD 85 09                               STA     msb_row_lda_static      ; setup tilemap addr
ROM:6FCF A6 17                               LDX     curr_guard_x_offset
ROM:6FD1 E0 03                               CPX     #3
ROM:6FD3 B0 1C                               BCS     guard_can_move_left
ROM:6FD5 A4 12                               LDY     curr_guard_col          ; left-most column?
ROM:6FD7 F0 15                               BEQ     guard_cant_move_left    ; yes, skip
ROM:6FD9 88                                  DEY                             ; column to left
ROM:6FDA B1 06                               LDA     (lsb_row_lda_dyn),Y     ; get object from tilemap
ROM:6FDC C9 08                               CMP     #8                      ; guard?
ROM:6FDE F0 0E                               BEQ     guard_cant_move_left    ; yes, skip
ROM:6FE0 C9 02                               CMP     #2                      ; solid?
ROM:6FE2 F0 0A                               BEQ     guard_cant_move_left    ; yes, skip
ROM:6FE4 C9 01                               CMP     #1                      ; brick?
ROM:6FE6 F0 06                               BEQ     guard_cant_move_left    ; yes, skip
ROM:6FE8 B1 08                               LDA     (lsb_row_lda_static),Y  ; get object from tilemap
ROM:6FEA C9 05                               CMP     #5                      ; fall-thru?
ROM:6FEC D0 03                               BNE     guard_can_move_left     ; no, skip
ROM:6FEE
ROM:6FEE             guard_cant_move_left:
ROM:6FEE 4C A8 75                            JMP     copy_curr_to_guard
ROM:6FF1             ; ---------------------------------------------------------------------------
ROM:6FF1
ROM:6FF1             guard_can_move_left:
ROM:6FF1 20 DF 74                            JSR     calc_guard_xychar
ROM:6FF4 20 36 83                            JSR     wipe_char               ; remove guard from screen
ROM:6FF7 20 95 75                            JSR     adjust_guard_y_offset
ROM:6FFA A9 FF                               LDA     #0FFh
ROM:6FFC 85 15                               STA     curr_guard_dir          ; set dir=left
ROM:6FFE C6 17                               DEC     curr_guard_x_offset
ROM:7000 10 24                               BPL     loc_7026
ROM:7002 20 3E 75                            JSR     check_guard_drop_gold
ROM:7005 A4 12                               LDY     curr_guard_col
ROM:7007 B1 08                               LDA     (lsb_row_lda_static),Y  ; get object from tilemap
ROM:7009 C9 01                               CMP     #1                      ; brick?
ROM:700B D0 02                               BNE     loc_700F                ; no, skip
ROM:700D A9 00                               LDA     #0                      ; space
ROM:700F
ROM:700F             loc_700F:                                               ; update tilemap
ROM:700F 91 06                               STA     (lsb_row_lda_dyn),Y
ROM:7011 C6 12                               DEC     curr_guard_col
ROM:7013 88                                  DEY
ROM:7014 B1 06                               LDA     (lsb_row_lda_dyn),Y     ; get object from tilemap (left)
ROM:7016 C9 09                               CMP     #9                      ; player?
ROM:7018 D0 02                               BNE     loc_701C                ; no, skip
ROM:701A 46 9A                               LSR     level_active            ; kill player
ROM:701C
ROM:701C             loc_701C:                                               ; guard
ROM:701C A9 08                               LDA     #8
ROM:701E 91 06                               STA     (lsb_row_lda_dyn),Y     ; update tilemap
ROM:7020 A9 04                               LDA     #4
ROM:7022 85 17                               STA     curr_guard_x_offset
ROM:7024 D0 03                               BNE     loc_7029                ; always
ROM:7026
ROM:7026             loc_7026:
ROM:7026 20 F7 74                            JSR     check_guard_pickup_gold
ROM:7029
ROM:7029             loc_7029:
ROM:7029 A4 12                               LDY     curr_guard_col
ROM:702B B1 08                               LDA     (lsb_row_lda_static),Y  ; get object from tilemap
ROM:702D C9 04                               CMP     #4                      ; rope?
ROM:702F F0 06                               BEQ     loc_7037                ; yes, skip
ROM:7031 A9 00                               LDA     #0                      ; =$08 1st guard sprite (running left)
ROM:7033 A2 02                               LDX     #2                      ; =$2C last guard sprite (running left)
ROM:7035 D0 04                               BNE     loc_703B                ; always
ROM:7037
ROM:7037             loc_7037:                                               ; =$30 1st guard sprite (swinging left)
ROM:7037 A9 03                               LDA     #3
ROM:7039 A2 05                               LDX     #5                      ; =$32 last guard sprite (swinging left)
ROM:703B
ROM:703B             loc_703B:
ROM:703B 20 74 75                            JSR     update_guard_sprite_index
ROM:703E 20 DF 74                            JSR     calc_guard_xychar
ROM:7041 20 A7 83                            JSR     display_transparent_char
ROM:7044 4C A8 75                            JMP     copy_curr_to_guard
ROM:7047             ; ---------------------------------------------------------------------------
ROM:7047
ROM:7047             guard_move_right:
ROM:7047 A4 13                               LDY     curr_guard_row
ROM:7049 B9 05 1C                            LDA     lsb_row_a_tbl,Y
ROM:704C 85 06                               STA     lsb_row_lda_dyn
ROM:704E 85 08                               STA     lsb_row_lda_static
ROM:7050 B9 15 1C                            LDA     msb_row_a_dyn_tbl,Y
ROM:7053 85 07                               STA     msb_row_lda_dyn
ROM:7055 B9 25 1C                            LDA     msb_row_a_static_tbl,Y
ROM:7058 85 09                               STA     msb_row_lda_static      ; setup tilemap address
ROM:705A A6 17                               LDX     curr_guard_x_offset
ROM:705C E0 02                               CPX     #2
ROM:705E 90 1E                               BCC     guard_can_move_right
ROM:7060 A4 12                               LDY     curr_guard_col
ROM:7062 C0 1B                               CPY     #27                     ; right-most column?
ROM:7064 F0 15                               BEQ     guard_cant_move_right   ; yes, exit
ROM:7066 C8                                  INY                             ; next column
ROM:7067 B1 06                               LDA     (lsb_row_lda_dyn),Y     ; get object from tilemap (right)
ROM:7069 C9 08                               CMP     #8                      ; guard?
ROM:706B F0 0E                               BEQ     guard_cant_move_right   ; yes, skip
ROM:706D C9 02                               CMP     #2                      ; solid?
ROM:706F F0 0A                               BEQ     guard_cant_move_right   ; yes, skip
ROM:7071 C9 01                               CMP     #1                      ; brick?
ROM:7073 F0 06                               BEQ     guard_cant_move_right   ; yes, skip
ROM:7075 B1 08                               LDA     (lsb_row_lda_static),Y  ; get object from tilemap
ROM:7077 C9 05                               CMP     #5                      ; fall-thru?
ROM:7079 D0 03                               BNE     guard_can_move_right    ; no, go
ROM:707B
ROM:707B             guard_cant_move_right:
ROM:707B 4C A8 75                            JMP     copy_curr_to_guard
ROM:707E             ; ---------------------------------------------------------------------------
ROM:707E
ROM:707E             guard_can_move_right:
ROM:707E 20 DF 74                            JSR     calc_guard_xychar
ROM:7081 20 36 83                            JSR     wipe_char
ROM:7084 20 95 75                            JSR     adjust_guard_y_offset
ROM:7087 A9 01                               LDA     #1
ROM:7089 85 15                               STA     curr_guard_dir
ROM:708B E6 17                               INC     curr_guard_x_offset
ROM:708D A5 17                               LDA     curr_guard_x_offset
ROM:708F C9 05                               CMP     #5
ROM:7091 90 24                               BCC     loc_70B7
ROM:7093 20 3E 75                            JSR     check_guard_drop_gold
ROM:7096 A4 12                               LDY     curr_guard_col
ROM:7098 B1 08                               LDA     (lsb_row_lda_static),Y
ROM:709A C9 01                               CMP     #1
ROM:709C D0 02                               BNE     loc_70A0
ROM:709E A9 00                               LDA     #0
ROM:70A0
ROM:70A0             loc_70A0:                                               ; update tilemap
ROM:70A0 91 06                               STA     (lsb_row_lda_dyn),Y
ROM:70A2 E6 12                               INC     curr_guard_col
ROM:70A4 C8                                  INY                             ; next row
ROM:70A5 B1 06                               LDA     (lsb_row_lda_dyn),Y     ; get object from tilemap
ROM:70A7 C9 09                               CMP     #9                      ; player?
ROM:70A9 D0 02                               BNE     loc_70AD
ROM:70AB 46 9A                               LSR     level_active
ROM:70AD
ROM:70AD             loc_70AD:
ROM:70AD A9 08                               LDA     #8
ROM:70AF 91 06                               STA     (lsb_row_lda_dyn),Y
ROM:70B1 A9 00                               LDA     #0
ROM:70B3 85 17                               STA     curr_guard_x_offset
ROM:70B5 F0 03                               BEQ     loc_70BA
ROM:70B7
ROM:70B7             loc_70B7:
ROM:70B7 20 F7 74                            JSR     check_guard_pickup_gold
ROM:70BA
ROM:70BA             loc_70BA:
ROM:70BA A4 12                               LDY     curr_guard_col
ROM:70BC B1 08                               LDA     (lsb_row_lda_static),Y  ; get object from tilemap
ROM:70BE C9 04                               CMP     #4                      ; rope?
ROM:70C0 F0 06                               BEQ     loc_70C8                ; yes, skip
ROM:70C2 A9 07                               LDA     #7
ROM:70C4 A2 09                               LDX     #9
ROM:70C6 D0 04                               BNE     loc_70CC
ROM:70C8
ROM:70C8             loc_70C8:
ROM:70C8 A9 0A                               LDA     #0Ah
ROM:70CA A2 0C                               LDX     #0Ch
ROM:70CC
ROM:70CC             loc_70CC:
ROM:70CC 20 74 75                            JSR     update_guard_sprite_index
ROM:70CF 20 DF 74                            JSR     calc_guard_xychar
ROM:70D2 20 A7 83                            JSR     display_transparent_char
ROM:70D5 4C A8 75                            JMP     copy_curr_to_guard
ROM:70D8
ROM:70D8             ; =============== S U B R O U T I N E =======================================
ROM:70D8
ROM:70D8
ROM:70D8             guard_ai:
ROM:70D8 86 55                               STX     guard_ai_col            ; col
ROM:70DA 84 56                               STY     guard_ai_row            ; row
ROM:70DC B9 05 1C                            LDA     lsb_row_a_tbl,Y
ROM:70DF 85 08                               STA     lsb_row_lda_static
ROM:70E1 B9 25 1C                            LDA     msb_row_a_static_tbl,Y
ROM:70E4 85 09                               STA     msb_row_lda_static      ; setup tilemap addr
ROM:70E6 A4 55                               LDY     guard_ai_col            ; col
ROM:70E8 B1 08                               LDA     (lsb_row_lda_static),Y  ; get object from tilemap
ROM:70EA C9 01                               CMP     #1                      ; brick (ie. trapped)?
ROM:70EC D0 09                               BNE     loc_70F7                ; no, skip
ROM:70EE A5 16                               LDA     curr_guard_state
ROM:70F0 F0 05                               BEQ     loc_70F7
ROM:70F2 30 03                               BMI     loc_70F7
ROM:70F4 A9 03                               LDA     #3                      ; move guard UP
ROM:70F6 60                                  RTS
ROM:70F7             ; ---------------------------------------------------------------------------
ROM:70F7
ROM:70F7             loc_70F7:                                               ; row
ROM:70F7 A4 56                               LDY     guard_ai_row
ROM:70F9 C4 01                               CPY     current_row             ; player row
ROM:70FB F0 03                               BEQ     same_row                ; same? yes, continue
ROM:70FD 4C 86 71                            JMP     different_row
ROM:7100             ; ---------------------------------------------------------------------------
ROM:7100
ROM:7100             same_row:                                               ; col
ROM:7100 A4 55                               LDY     guard_ai_col
ROM:7102 84 57                               STY     target_col
ROM:7104 C4 00                               CPY     current_col             ; guard to the right?
ROM:7106 B0 3F                               BCS     guard_right_of_player   ; yes, go
ROM:7108
ROM:7108             guard_left_of_player:                                   ; column to right
ROM:7108 E6 57                               INC     target_col
ROM:710A A4 56                               LDY     guard_ai_row
ROM:710C B9 05 1C                            LDA     lsb_row_a_tbl,Y
ROM:710F 85 08                               STA     lsb_row_lda_static
ROM:7111 B9 25 1C                            LDA     msb_row_a_static_tbl,Y
ROM:7114 85 09                               STA     msb_row_lda_static      ; setup tilemap address
ROM:7116 A4 57                               LDY     target_col
ROM:7118 B1 08                               LDA     (lsb_row_lda_static),Y  ; get object from tilemap (right)
ROM:711A C9 03                               CMP     #3                      ; ladder?
ROM:711C F0 20                               BEQ     try_next_col_right      ; yes, go
ROM:711E C9 04                               CMP     #4                      ; rope?
ROM:7120 F0 1C                               BEQ     try_next_col_right      ; yes, go
ROM:7122 A4 56                               LDY     guard_ai_row
ROM:7124 C0 0F                               CPY     #15                     ; bottom row?
ROM:7126 F0 16                               BEQ     try_next_col_right      ; yes, go
ROM:7128 B9 06 1C                            LDA     (lsb_row_a_tbl+1),Y
ROM:712B 85 08                               STA     lsb_row_lda_static
ROM:712D B9 26 1C                            LDA     (msb_row_a_static_tbl+1),Y
ROM:7130 85 09                               STA     msb_row_lda_static      ; setup tilmap address (row below)
ROM:7132 A4 57                               LDY     target_col
ROM:7134 B1 08                               LDA     (lsb_row_lda_static),Y  ; get object from tilemap (below right)
ROM:7136 C9 00                               CMP     #0                      ; space?
ROM:7138 F0 4C                               BEQ     different_row           ; yes, go
ROM:713A C9 05                               CMP     #5                      ; fall-thru?
ROM:713C F0 48                               BEQ     different_row           ; yes, go
ROM:713E
ROM:713E             try_next_col_right:
ROM:713E A4 57                               LDY     target_col
ROM:7140 C4 00                               CPY     current_col
ROM:7142 D0 C4                               BNE     guard_left_of_player    ; no, try next column
ROM:7144 A9 02                               LDA     #2                      ; RIGHT
ROM:7146 60                                  RTS
ROM:7147             ; ---------------------------------------------------------------------------
ROM:7147
ROM:7147             guard_right_of_player:                                  ; column to left
ROM:7147 C6 57                               DEC     target_col
ROM:7149 A4 56                               LDY     guard_ai_row
ROM:714B B9 05 1C                            LDA     lsb_row_a_tbl,Y
ROM:714E 85 08                               STA     lsb_row_lda_static
ROM:7150 B9 25 1C                            LDA     msb_row_a_static_tbl,Y
ROM:7153 85 09                               STA     msb_row_lda_static      ; setup tilemap address (left)
ROM:7155 A4 57                               LDY     target_col
ROM:7157 B1 08                               LDA     (lsb_row_lda_static),Y  ; get object from tilemap (left)
ROM:7159 C9 03                               CMP     #3                      ; ladder?
ROM:715B F0 20                               BEQ     try_next_col_left       ; yes, go
ROM:715D C9 04                               CMP     #4                      ; rope?
ROM:715F F0 1C                               BEQ     try_next_col_left       ; yes, go
ROM:7161 A4 56                               LDY     guard_ai_row
ROM:7163 C0 0F                               CPY     #15                     ; bottom row?
ROM:7165 F0 16                               BEQ     try_next_col_left       ; yes, go
ROM:7167 B9 06 1C                            LDA     (lsb_row_a_tbl+1),Y
ROM:716A 85 08                               STA     lsb_row_lda_static
ROM:716C B9 26 1C                            LDA     (msb_row_a_static_tbl+1),Y
ROM:716F 85 09                               STA     msb_row_lda_static      ; setup tilemap address (below)
ROM:7171 A4 57                               LDY     target_col
ROM:7173 B1 08                               LDA     (lsb_row_lda_static),Y  ; get object from tilemap (below, left)
ROM:7175 C9 00                               CMP     #0                      ; space?
ROM:7177 F0 0D                               BEQ     different_row           ; yes, go
ROM:7179 C9 05                               CMP     #5                      ; fall-thru?
ROM:717B F0 09                               BEQ     different_row           ; yes, go
ROM:717D
ROM:717D             try_next_col_left:
ROM:717D A4 57                               LDY     target_col
ROM:717F C4 00                               CPY     current_col             ; same as player?
ROM:7181 D0 C4                               BNE     guard_right_of_player   ; no, try next column
ROM:7183 A9 01                               LDA     #1                      ; LEFT
ROM:7185 60                                  RTS
ROM:7186             ; ---------------------------------------------------------------------------
ROM:7186
ROM:7186             different_row:
ROM:7186 A9 00                               LDA     #0
ROM:7188 85 58                               STA     guard_ai_dir            ; no direction
ROM:718A A9 FF                               LDA     #0FFh
ROM:718C 85 59                               STA     guard_ai_best_delta
ROM:718E A6 55                               LDX     guard_ai_col
ROM:7190 A4 56                               LDY     guard_ai_row
ROM:7192 20 3E 74                            JSR     find_farthest_left_right ; ...on this row?
ROM:7195 20 75 72                            JSR     guard_ai_up_down
ROM:7198 20 A2 71                            JSR     guard_ai_left
ROM:719B 20 0C 72                            JSR     guard_ai_right
ROM:719E A5 58                               LDA     guard_ai_dir
ROM:71A0 60                                  RTS
ROM:71A0             ; End of function guard_ai
ROM:71A0
ROM:71A1             ; ---------------------------------------------------------------------------
ROM:71A1             ; START OF FUNCTION CHUNK FOR guard_ai_left
ROM:71A1
ROM:71A1             locret_71A1:
ROM:71A1 60                                  RTS
ROM:71A1             ; END OF FUNCTION CHUNK FOR guard_ai_left
ROM:71A2
ROM:71A2             ; =============== S U B R O U T I N E =======================================
ROM:71A2
ROM:71A2
ROM:71A2             guard_ai_left:
ROM:71A2
ROM:71A2             ; FUNCTION CHUNK AT ROM:71A1 SIZE 00000001 BYTES
ROM:71A2
ROM:71A2 A4 5A                               LDY     farthest_left           ; left-most column guard can get to on this row
ROM:71A4 C4 55                               CPY     guard_ai_col            ; there now?
ROM:71A6 F0 F9                               BEQ     locret_71A1             ; yes, exit
ROM:71A8 A4 56                               LDY     guard_ai_row
ROM:71AA C0 0F                               CPY     #15                     ; bottom row?
ROM:71AC F0 2C                               BEQ     loc_71DA                ; yes, go (no good)
ROM:71AE B9 06 1C                            LDA     (lsb_row_a_tbl+1),Y
ROM:71B1 85 08                               STA     lsb_row_lda_static
ROM:71B3 B9 26 1C                            LDA     (msb_row_a_static_tbl+1),Y
ROM:71B6 85 09                               STA     msb_row_lda_static      ; setup tilemap address (row below)
ROM:71B8 A4 5A                               LDY     farthest_left
ROM:71BA B1 08                               LDA     (lsb_row_lda_static),Y  ; get object from tilemap (below farthest left)
ROM:71BC C9 01                               CMP     #1                      ; brick?
ROM:71BE F0 1A                               BEQ     loc_71DA                ; yes, go
ROM:71C0 C9 02                               CMP     #2                      ; solid?
ROM:71C2 F0 16                               BEQ     loc_71DA                ; yes, go
ROM:71C4 A6 5A                               LDX     farthest_left
ROM:71C6 A4 56                               LDY     guard_ai_row
ROM:71C8 20 9D 73                            JSR     find_farthest_down
ROM:71CB A6 5A                               LDX     farthest_left
ROM:71CD 20 D4 72                            JSR     calc_row_col_delta
ROM:71D0 C5 59                               CMP     guard_ai_best_delta
ROM:71D2 B0 06                               BCS     loc_71DA
ROM:71D4 85 59                               STA     guard_ai_best_delta
ROM:71D6 A9 01                               LDA     #1                      ; LEFT
ROM:71D8 85 58                               STA     guard_ai_dir
ROM:71DA
ROM:71DA             loc_71DA:                                               ; top row?
ROM:71DA A4 56                               LDY     guard_ai_row
ROM:71DC F0 28                               BEQ     loc_7206                ; yes, go
ROM:71DE B9 05 1C                            LDA     lsb_row_a_tbl,Y
ROM:71E1 85 08                               STA     lsb_row_lda_static
ROM:71E3 B9 25 1C                            LDA     msb_row_a_static_tbl,Y
ROM:71E6 85 09                               STA     msb_row_lda_static      ; setup tilemap address
ROM:71E8 A4 5A                               LDY     farthest_left
ROM:71EA B1 08                               LDA     (lsb_row_lda_static),Y  ; get object from tilemap
ROM:71EC C9 03                               CMP     #3                      ; ladder?
ROM:71EE D0 16                               BNE     loc_7206                ; no, go
ROM:71F0 A4 56                               LDY     guard_ai_row
ROM:71F2 A6 5A                               LDX     farthest_left
ROM:71F4 20 00 73                            JSR     find_farthest_up
ROM:71F7 A6 5A                               LDX     farthest_left
ROM:71F9 20 D4 72                            JSR     calc_row_col_delta
ROM:71FC C5 59                               CMP     guard_ai_best_delta
ROM:71FE B0 06                               BCS     loc_7206
ROM:7200 85 59                               STA     guard_ai_best_delta
ROM:7202 A9 01                               LDA     #1                      ; LEFT
ROM:7204 85 58                               STA     guard_ai_dir
ROM:7206
ROM:7206             loc_7206:
ROM:7206 E6 5A                               INC     farthest_left
ROM:7208 4C A2 71                            JMP     guard_ai_left
ROM:7208             ; End of function guard_ai_left
ROM:7208
ROM:720B             ; ---------------------------------------------------------------------------
ROM:720B             ; START OF FUNCTION CHUNK FOR guard_ai_right
ROM:720B
ROM:720B             locret_720B:
ROM:720B 60                                  RTS
ROM:720B             ; END OF FUNCTION CHUNK FOR guard_ai_right
ROM:720C
ROM:720C             ; =============== S U B R O U T I N E =======================================
ROM:720C
ROM:720C
ROM:720C             guard_ai_right:
ROM:720C
ROM:720C             ; FUNCTION CHUNK AT ROM:720B SIZE 00000001 BYTES
ROM:720C
ROM:720C A4 5B                               LDY     farthest_right
ROM:720E C4 55                               CPY     guard_ai_col            ; left-most column?
ROM:7210 F0 F9                               BEQ     locret_720B             ; yes, exit
ROM:7212 A4 56                               LDY     guard_ai_row
ROM:7214 C0 0F                               CPY     #15                     ; bottom row?
ROM:7216 F0 2C                               BEQ     loc_7244                ; yes, go
ROM:7218 B9 06 1C                            LDA     (lsb_row_a_tbl+1),Y
ROM:721B 85 08                               STA     lsb_row_lda_static
ROM:721D B9 26 1C                            LDA     (msb_row_a_static_tbl+1),Y
ROM:7220 85 09                               STA     msb_row_lda_static      ; setup tilemap address (row below)
ROM:7222 A4 5B                               LDY     farthest_right
ROM:7224 B1 08                               LDA     (lsb_row_lda_static),Y  ; get object from tilemap (below)
ROM:7226 C9 01                               CMP     #1                      ; brick?
ROM:7228 F0 1A                               BEQ     loc_7244                ; yes, go
ROM:722A C9 02                               CMP     #2                      ; solid?
ROM:722C F0 16                               BEQ     loc_7244                ; yes, go
ROM:722E A6 5B                               LDX     farthest_right
ROM:7230 A4 56                               LDY     guard_ai_row
ROM:7232 20 9D 73                            JSR     find_farthest_down
ROM:7235 A6 5B                               LDX     farthest_right
ROM:7237 20 D4 72                            JSR     calc_row_col_delta
ROM:723A C5 59                               CMP     guard_ai_best_delta
ROM:723C B0 06                               BCS     loc_7244
ROM:723E 85 59                               STA     guard_ai_best_delta
ROM:7240 A9 02                               LDA     #2                      ; RIGHT
ROM:7242 85 58                               STA     guard_ai_dir
ROM:7244
ROM:7244             loc_7244:                                               ; top row?
ROM:7244 A4 56                               LDY     guard_ai_row
ROM:7246 F0 28                               BEQ     loc_7270                ; yes, go
ROM:7248 B9 05 1C                            LDA     lsb_row_a_tbl,Y
ROM:724B 85 08                               STA     lsb_row_lda_static
ROM:724D B9 25 1C                            LDA     msb_row_a_static_tbl,Y
ROM:7250 85 09                               STA     msb_row_lda_static      ; setup tilemap address
ROM:7252 A4 5B                               LDY     farthest_right
ROM:7254 B1 08                               LDA     (lsb_row_lda_static),Y  ; get object from tilemap address
ROM:7256 C9 03                               CMP     #3                      ; ladder?
ROM:7258 D0 16                               BNE     loc_7270                ; no, go
ROM:725A A4 56                               LDY     guard_ai_row
ROM:725C A6 5B                               LDX     farthest_right
ROM:725E 20 00 73                            JSR     find_farthest_up
ROM:7261 A6 5B                               LDX     farthest_right
ROM:7263 20 D4 72                            JSR     calc_row_col_delta
ROM:7266 C5 59                               CMP     guard_ai_best_delta
ROM:7268 B0 06                               BCS     loc_7270
ROM:726A 85 59                               STA     guard_ai_best_delta
ROM:726C A9 02                               LDA     #2                      ; RIGHT
ROM:726E 85 58                               STA     guard_ai_dir
ROM:7270
ROM:7270             loc_7270:
ROM:7270 C6 5B                               DEC     farthest_right
ROM:7272 4C 0C 72                            JMP     guard_ai_right
ROM:7272             ; End of function guard_ai_right
ROM:7272
ROM:7275
ROM:7275             ; =============== S U B R O U T I N E =======================================
ROM:7275
ROM:7275
ROM:7275             guard_ai_up_down:
ROM:7275 A4 56                               LDY     guard_ai_row
ROM:7277 C0 0F                               CPY     #15                     ; bottom row?
ROM:7279 F0 2C                               BEQ     guard_ai_cant_go_down   ; yes, go
ROM:727B B9 06 1C                            LDA     (lsb_row_a_tbl+1),Y
ROM:727E 85 08                               STA     lsb_row_lda_static
ROM:7280 B9 26 1C                            LDA     (msb_row_a_static_tbl+1),Y
ROM:7283 85 09                               STA     msb_row_lda_static      ; setup tilemap address (row below)
ROM:7285 A4 55                               LDY     guard_ai_col
ROM:7287 B1 08                               LDA     (lsb_row_lda_static),Y  ; get object from tilemap (below)
ROM:7289 C9 01                               CMP     #1                      ; brick?
ROM:728B F0 1A                               BEQ     guard_ai_cant_go_down   ; yes, go
ROM:728D C9 02                               CMP     #2                      ; solid?
ROM:728F F0 16                               BEQ     guard_ai_cant_go_down   ; yes, go
ROM:7291 A6 55                               LDX     guard_ai_col
ROM:7293 A4 56                               LDY     guard_ai_row
ROM:7295 20 9D 73                            JSR     find_farthest_down      ; A=farthest row (down)
ROM:7298 A6 55                               LDX     guard_ai_col
ROM:729A 20 D4 72                            JSR     calc_row_col_delta
ROM:729D C5 59                               CMP     guard_ai_best_delta
ROM:729F B0 06                               BCS     guard_ai_cant_go_down
ROM:72A1 85 59                               STA     guard_ai_best_delta
ROM:72A3 A9 04                               LDA     #4                      ; DOWN
ROM:72A5 85 58                               STA     guard_ai_dir
ROM:72A7
ROM:72A7             guard_ai_cant_go_down:                                  ; top row?
ROM:72A7 A4 56                               LDY     guard_ai_row
ROM:72A9 F0 28                               BEQ     locret_72D3             ; yes, exit
ROM:72AB B9 05 1C                            LDA     lsb_row_a_tbl,Y
ROM:72AE 85 08                               STA     lsb_row_lda_static
ROM:72B0 B9 25 1C                            LDA     msb_row_a_static_tbl,Y
ROM:72B3 85 09                               STA     msb_row_lda_static      ; setup tilemap address
ROM:72B5 A4 55                               LDY     guard_ai_col
ROM:72B7 B1 08                               LDA     (lsb_row_lda_static),Y  ; get object from tilemap
ROM:72B9 C9 03                               CMP     #3                      ; ladder?
ROM:72BB D0 16                               BNE     locret_72D3             ; no, exit
ROM:72BD A6 55                               LDX     guard_ai_col
ROM:72BF A4 56                               LDY     guard_ai_row
ROM:72C1 20 00 73                            JSR     find_farthest_up        ; A=farthest row (up)
ROM:72C4 A6 55                               LDX     guard_ai_col
ROM:72C6 20 D4 72                            JSR     calc_row_col_delta
ROM:72C9 C5 59                               CMP     guard_ai_best_delta
ROM:72CB B0 06                               BCS     locret_72D3
ROM:72CD 85 59                               STA     guard_ai_best_delta
ROM:72CF A9 03                               LDA     #3                      ; UP
ROM:72D1 85 58                               STA     guard_ai_dir
ROM:72D3
ROM:72D3             locret_72D3:
ROM:72D3 60                                  RTS
ROM:72D3             ; End of function guard_ai_up_down
ROM:72D3
ROM:72D4
ROM:72D4             ; =============== S U B R O U T I N E =======================================
ROM:72D4
ROM:72D4
ROM:72D4             calc_row_col_delta:
ROM:72D4 85 1A                               STA     nibble_cnt              ; A=farthest down, X=col
ROM:72D6 C5 01                               CMP     current_row             ; same as player?
ROM:72D8 D0 11                               BNE     calc_row_delta          ; no, skip
ROM:72DA E4 12                               CPX     curr_guard_col          ; compare column
ROM:72DC 90 05                               BCC     loc_72E3                ; to the left
ROM:72DE 8A                                  TXA                             ; X=col
ROM:72DF 38                                  SEC
ROM:72E0 E5 12                               SBC     curr_guard_col          ; delta col
ROM:72E2 60                                  RTS
ROM:72E3             ; ---------------------------------------------------------------------------
ROM:72E3
ROM:72E3             loc_72E3:                                               ; guard_ai_col
ROM:72E3 86 1A                               STX     nibble_cnt
ROM:72E5 A5 12                               LDA     curr_guard_col
ROM:72E7 38                                  SEC
ROM:72E8 E5 1A                               SBC     nibble_cnt              ; delta col
ROM:72EA 60                                  RTS
ROM:72EB             ; ---------------------------------------------------------------------------
ROM:72EB
ROM:72EB             calc_row_delta:
ROM:72EB 90 07                               BCC     loc_72F4
ROM:72ED 38                                  SEC
ROM:72EE E5 01                               SBC     current_row             ; delta row
ROM:72F0 18                                  CLC
ROM:72F1 69 C8                               ADC     #200                    ; weighting
ROM:72F3 60                                  RTS
ROM:72F4             ; ---------------------------------------------------------------------------
ROM:72F4
ROM:72F4             loc_72F4:
ROM:72F4 A5 01                               LDA     current_row
ROM:72F6 38                                  SEC
ROM:72F7 E5 1A                               SBC     nibble_cnt              ; delta row
ROM:72F9 18                                  CLC
ROM:72FA 69 64                               ADC     #100                    ; weighting
ROM:72FC 60                                  RTS
ROM:72FC             ; End of function calc_row_col_delta
ROM:72FC
ROM:72FD             ; ---------------------------------------------------------------------------
ROM:72FD             ; START OF FUNCTION CHUNK FOR find_farthest_up
ROM:72FD
ROM:72FD             loc_72FD:
ROM:72FD A5 5E                               LDA     byte_5E
ROM:72FF 60                                  RTS
ROM:72FF             ; END OF FUNCTION CHUNK FOR find_farthest_up
ROM:7300
ROM:7300             ; =============== S U B R O U T I N E =======================================
ROM:7300
ROM:7300
ROM:7300             find_farthest_up:
ROM:7300
ROM:7300             ; FUNCTION CHUNK AT ROM:72FD SIZE 00000003 BYTES
ROM:7300
ROM:7300 84 5E                               STY     byte_5E                 ; row
ROM:7302 86 5D                               STX     byte_5D                 ; col
ROM:7304
ROM:7304             loc_7304:
ROM:7304 B9 05 1C                            LDA     lsb_row_a_tbl,Y
ROM:7307 85 08                               STA     lsb_row_lda_static
ROM:7309 B9 25 1C                            LDA     msb_row_a_static_tbl,Y
ROM:730C 85 09                               STA     msb_row_lda_static      ; setup tilemap address
ROM:730E A4 5D                               LDY     byte_5D                 ; col
ROM:7310 B1 08                               LDA     (lsb_row_lda_static),Y  ; get object from tilemap
ROM:7312 C9 03                               CMP     #3                      ; ladder?
ROM:7314 D0 E7                               BNE     loc_72FD                ; no, exit
ROM:7316 C6 5E                               DEC     byte_5E                 ; can get to row above
ROM:7318 A4 5D                               LDY     byte_5D                 ; col
ROM:731A F0 2E                               BEQ     up_try_right            ; left-most column? yes, go
ROM:731C 88                                  DEY                             ; column to left
ROM:731D B1 08                               LDA     (lsb_row_lda_static),Y  ; get object from tilemap (left)
ROM:731F C9 01                               CMP     #1                      ; brick?
ROM:7321 F0 1D                               BEQ     loc_7340                ; yes, go
ROM:7323 C9 02                               CMP     #2                      ; solid?
ROM:7325 F0 19                               BEQ     loc_7340                ; yes, go
ROM:7327 C9 03                               CMP     #3                      ; ladder?
ROM:7329 F0 15                               BEQ     loc_7340                ; yes, go
ROM:732B A4 5E                               LDY     byte_5E                 ; row (above)
ROM:732D B9 05 1C                            LDA     lsb_row_a_tbl,Y
ROM:7330 85 08                               STA     lsb_row_lda_static
ROM:7332 B9 25 1C                            LDA     msb_row_a_static_tbl,Y
ROM:7335 85 09                               STA     msb_row_lda_static      ; setup tilemap address (above)
ROM:7337 A4 5D                               LDY     byte_5D                 ; col
ROM:7339 88                                  DEY                             ; column to left
ROM:733A B1 08                               LDA     (lsb_row_lda_static),Y  ; get object from tilemap (above, left)
ROM:733C C9 04                               CMP     #4                      ; rope?
ROM:733E D0 0A                               BNE     up_try_right            ; no, go
ROM:7340
ROM:7340             loc_7340:                                               ; row
ROM:7340 A4 5E                               LDY     byte_5E
ROM:7342 84 5C                               STY     farthest_updown_plyr_row
ROM:7344 C4 01                               CPY     current_row             ; compare with player
ROM:7346 90 4F                               BCC     farthest_up_is_player_row ; above player - exit
ROM:7348 F0 4D                               BEQ     farthest_up_is_player_row ; same row as player - exit
ROM:734A
ROM:734A             up_try_right:                                           ; col
ROM:734A A4 5D                               LDY     byte_5D
ROM:734C C0 1B                               CPY     #27                     ; right-most?
ROM:734E F0 3C                               BEQ     try_next_row_up         ; yes, go
ROM:7350 A4 5E                               LDY     byte_5E                 ; row (above)
ROM:7352 B9 06 1C                            LDA     (lsb_row_a_tbl+1),Y
ROM:7355 85 08                               STA     lsb_row_lda_static
ROM:7357 B9 26 1C                            LDA     (msb_row_a_static_tbl+1),Y
ROM:735A 85 09                               STA     msb_row_lda_static      ; setup tilemap address
ROM:735C A4 5D                               LDY     byte_5D                 ; col
ROM:735E C8                                  INY                             ; column to right
ROM:735F B1 08                               LDA     (lsb_row_lda_static),Y  ; get object from tilemap (right)
ROM:7361 C9 01                               CMP     #1                      ; brick?
ROM:7363 F0 1D                               BEQ     loc_7382                ; yes, go
ROM:7365 C9 02                               CMP     #2                      ; solid?
ROM:7367 F0 19                               BEQ     loc_7382                ; yes, go
ROM:7369 C9 03                               CMP     #3                      ; ladder?
ROM:736B F0 15                               BEQ     loc_7382                ; yes, go
ROM:736D A4 5E                               LDY     byte_5E                 ; row
ROM:736F B9 05 1C                            LDA     lsb_row_a_tbl,Y
ROM:7372 85 08                               STA     lsb_row_lda_static
ROM:7374 B9 25 1C                            LDA     msb_row_a_static_tbl,Y
ROM:7377 85 09                               STA     msb_row_lda_static      ; setup tilemap address (row above)
ROM:7379 A4 5D                               LDY     byte_5D                 ; col
ROM:737B C8                                  INY                             ; column to right
ROM:737C B1 08                               LDA     (lsb_row_lda_static),Y  ; get object from tilemap (right, above)
ROM:737E C9 04                               CMP     #4                      ; rope?
ROM:7380 D0 0A                               BNE     try_next_row_up         ; no, go
ROM:7382
ROM:7382             loc_7382:                                               ; row
ROM:7382 A4 5E                               LDY     byte_5E
ROM:7384 84 5C                               STY     farthest_updown_plyr_row
ROM:7386 C4 01                               CPY     current_row             ; compare with player
ROM:7388 90 0D                               BCC     farthest_up_is_player_row ; above player - exit
ROM:738A F0 0B                               BEQ     farthest_up_is_player_row ; same row as player - exit
ROM:738C
ROM:738C             try_next_row_up:                                        ; row
ROM:738C A4 5E                               LDY     byte_5E
ROM:738E C0 01                               CPY     #1                      ; top row?
ROM:7390 90 03                               BCC     loc_7395                ; yes, exit
ROM:7392 4C 04 73                            JMP     loc_7304                ; loop
ROM:7395             ; ---------------------------------------------------------------------------
ROM:7395
ROM:7395             loc_7395:                                               ; row
ROM:7395 98                                  TYA
ROM:7396 60                                  RTS
ROM:7397             ; ---------------------------------------------------------------------------
ROM:7397
ROM:7397             farthest_up_is_player_row:
ROM:7397 A5 5C                               LDA     farthest_updown_plyr_row
ROM:7399 60                                  RTS
ROM:7399             ; End of function find_farthest_up
ROM:7399
ROM:739A             ; ---------------------------------------------------------------------------
ROM:739A             ; START OF FUNCTION CHUNK FOR find_farthest_down
ROM:739A
ROM:739A             loc_739A:
ROM:739A A5 5E                               LDA     byte_5E
ROM:739C 60                                  RTS
ROM:739C             ; END OF FUNCTION CHUNK FOR find_farthest_down
ROM:739D
ROM:739D             ; =============== S U B R O U T I N E =======================================
ROM:739D
ROM:739D
ROM:739D             find_farthest_down:
ROM:739D
ROM:739D             ; FUNCTION CHUNK AT ROM:739A SIZE 00000003 BYTES
ROM:739D
ROM:739D 84 5E                               STY     byte_5E                 ; store row
ROM:739F 86 5D                               STX     byte_5D                 ; store col
ROM:73A1
ROM:73A1             loc_73A1:
ROM:73A1 B9 06 1C                            LDA     (lsb_row_a_tbl+1),Y
ROM:73A4 85 08                               STA     lsb_row_lda_static
ROM:73A6 B9 26 1C                            LDA     (msb_row_a_static_tbl+1),Y
ROM:73A9 85 09                               STA     msb_row_lda_static      ; setup tilemap address (row below)
ROM:73AB A4 5D                               LDY     byte_5D                 ; col
ROM:73AD B1 08                               LDA     (lsb_row_lda_static),Y  ; get object from tilemap
ROM:73AF C9 01                               CMP     #1                      ; brick?
ROM:73B1 F0 E7                               BEQ     loc_739A                ; yes, exit
ROM:73B3 C9 02                               CMP     #2                      ; solid?
ROM:73B5 F0 E3                               BEQ     loc_739A                ; yes, exit
ROM:73B7 A4 5E                               LDY     byte_5E                 ; row
ROM:73B9 B9 05 1C                            LDA     lsb_row_a_tbl,Y
ROM:73BC 85 08                               STA     lsb_row_lda_static
ROM:73BE B9 25 1C                            LDA     msb_row_a_static_tbl,Y
ROM:73C1 85 09                               STA     msb_row_lda_static      ; setup tilemap address
ROM:73C3 A4 5D                               LDY     byte_5D                 ; col
ROM:73C5 B1 08                               LDA     (lsb_row_lda_static),Y  ; get object from tilemap
ROM:73C7 C9 00                               CMP     #0                      ; space (falling)?
ROM:73C9 F0 62                               BEQ     try_next_row_down       ; yes, go
ROM:73CB C0 00                               CPY     #0                      ; (ladder or rope - can move left/right)
ROM:73CB                                                                     ; left-most col?
ROM:73CD F0 2C                               BEQ     down_try_right          ; yes, go
ROM:73CF 88                                  DEY                             ; column to left
ROM:73D0 B1 08                               LDA     (lsb_row_lda_static),Y  ; get object from tilemap (left)
ROM:73D2 C9 04                               CMP     #4                      ; rope?
ROM:73D4 F0 1D                               BEQ     loc_73F3                ; yes, go
ROM:73D6 A4 5E                               LDY     byte_5E                 ; row
ROM:73D8 B9 06 1C                            LDA     (lsb_row_a_tbl+1),Y
ROM:73DB 85 08                               STA     lsb_row_lda_static
ROM:73DD B9 26 1C                            LDA     (msb_row_a_static_tbl+1),Y
ROM:73E0 85 09                               STA     msb_row_lda_static      ; setup tilemap address (row below)
ROM:73E2 A4 5D                               LDY     byte_5D                 ; col
ROM:73E4 88                                  DEY                             ; column to left
ROM:73E5 B1 08                               LDA     (lsb_row_lda_static),Y  ; get object from tilemap (below, left)
ROM:73E7 C9 01                               CMP     #1                      ; brick?
ROM:73E9 F0 08                               BEQ     loc_73F3                ; yes, go
ROM:73EB C9 02                               CMP     #2                      ; solid?
ROM:73ED F0 04                               BEQ     loc_73F3                ; yes, go
ROM:73EF C9 03                               CMP     #3                      ; ladder?
ROM:73F1 D0 08                               BNE     down_try_right          ; no, go
ROM:73F3
ROM:73F3             loc_73F3:                                               ; row
ROM:73F3 A4 5E                               LDY     byte_5E
ROM:73F5 84 5C                               STY     farthest_updown_plyr_row
ROM:73F7 C4 01                               CPY     current_row             ; compare with player
ROM:73F9 B0 40                               BCS     farthest_down_is_player_row ; guard same row or below player, exit
ROM:73FB
ROM:73FB             down_try_right:                                         ; col
ROM:73FB A4 5D                               LDY     byte_5D
ROM:73FD C0 1B                               CPY     #27                     ; right-most column?
ROM:73FF B0 2C                               BCS     try_next_row_down       ; yes, go
ROM:7401 C8                                  INY                             ; column to right
ROM:7402 B1 08                               LDA     (lsb_row_lda_static),Y  ; get object from tilemap (row/below, right)
ROM:7404 C9 04                               CMP     #4                      ; rope?
ROM:7406 F0 1D                               BEQ     loc_7425                ; yes, go
ROM:7408 A4 5E                               LDY     byte_5E                 ; row
ROM:740A B9 06 1C                            LDA     (lsb_row_a_tbl+1),Y
ROM:740D 85 08                               STA     lsb_row_lda_static
ROM:740F B9 26 1C                            LDA     (msb_row_a_static_tbl+1),Y
ROM:7412 85 09                               STA     msb_row_lda_static      ; setup tilemap address (row below)
ROM:7414 A4 5D                               LDY     byte_5D                 ; col
ROM:7416 C8                                  INY                             ; column to right
ROM:7417 B1 08                               LDA     (lsb_row_lda_static),Y  ; get object from tilemap (below, right)
ROM:7419 C9 01                               CMP     #1                      ; brick?
ROM:741B F0 08                               BEQ     loc_7425                ; yes, go
ROM:741D C9 03                               CMP     #3                      ; ladder?
ROM:741F F0 04                               BEQ     loc_7425                ; yes, go
ROM:7421 C9 02                               CMP     #2                      ; solid?
ROM:7423 D0 08                               BNE     try_next_row_down       ; no, go
ROM:7425
ROM:7425             loc_7425:                                               ; row
ROM:7425 A4 5E                               LDY     byte_5E
ROM:7427 84 5C                               STY     farthest_updown_plyr_row
ROM:7429 C4 01                               CPY     current_row             ; compare with player
ROM:742B B0 0E                               BCS     farthest_down_is_player_row ; guard same row or below player, exit
ROM:742D
ROM:742D             try_next_row_down:                                      ; next row down
ROM:742D E6 5E                               INC     byte_5E
ROM:742F A4 5E                               LDY     byte_5E                 ; row
ROM:7431 C0 10                               CPY     #16                     ; past bottom of screen?
ROM:7433 B0 03                               BCS     loc_7438                ; yes, exit
ROM:7435 4C A1 73                            JMP     loc_73A1                ; loop
ROM:7438             ; ---------------------------------------------------------------------------
ROM:7438
ROM:7438             loc_7438:
ROM:7438 A9 0F                               LDA     #15
ROM:743A 60                                  RTS
ROM:743B             ; ---------------------------------------------------------------------------
ROM:743B
ROM:743B             farthest_down_is_player_row:
ROM:743B A5 5C                               LDA     farthest_updown_plyr_row
ROM:743D 60                                  RTS
ROM:743D             ; End of function find_farthest_down
ROM:743D
ROM:743E
ROM:743E             ; =============== S U B R O U T I N E =======================================
ROM:743E
ROM:743E
ROM:743E             find_farthest_left_right:
ROM:743E 86 5A                               STX     farthest_left           ; X=col, y=row
ROM:743E                                                                     ; save col
ROM:7440 86 5B                               STX     farthest_right          ; save col (again)
ROM:7442 84 1B                               STY     scanline                ; save row
ROM:7444
ROM:7444             find_farthest_left:                                     ; guard col
ROM:7444 A5 5A                               LDA     farthest_left
ROM:7446 F0 48                               BEQ     find_farthest_right     ; left-most col? yes, go
ROM:7448 A4 1B                               LDY     scanline                ; guard row
ROM:744A B9 05 1C                            LDA     lsb_row_a_tbl,Y
ROM:744D 85 06                               STA     lsb_row_lda_dyn
ROM:744F B9 15 1C                            LDA     msb_row_a_dyn_tbl,Y
ROM:7452 85 07                               STA     msb_row_lda_dyn         ; setup tilemap address
ROM:7454 A4 5A                               LDY     farthest_left           ; guard col
ROM:7456 88                                  DEY                             ; column to left
ROM:7457 B1 06                               LDA     (lsb_row_lda_dyn),Y     ; get object from tilemap
ROM:7459 C9 01                               CMP     #1                      ; brick?
ROM:745B F0 33                               BEQ     find_farthest_right     ; yes, go
ROM:745D C9 02                               CMP     #2                      ; solid?
ROM:745F F0 2F                               BEQ     find_farthest_right     ; yes, go
ROM:7461 C9 03                               CMP     #3                      ; ladder?
ROM:7463 F0 25                               BEQ     loc_748A                ; yes, go
ROM:7465 C9 04                               CMP     #4                      ; rope?
ROM:7467 F0 21                               BEQ     loc_748A                ; yes, go
ROM:7469 A4 1B                               LDY     scanline                ; guard row
ROM:746B C0 0F                               CPY     #15                     ; bottom row?
ROM:746D F0 1B                               BEQ     loc_748A                ; yes, go
ROM:746F B9 06 1C                            LDA     (lsb_row_a_tbl+1),Y
ROM:7472 85 08                               STA     lsb_row_lda_static
ROM:7474 B9 26 1C                            LDA     (msb_row_a_static_tbl+1),Y
ROM:7477 85 09                               STA     msb_row_lda_static      ; setup tilemap (row below)
ROM:7479 A4 5A                               LDY     farthest_left           ; guard col
ROM:747B 88                                  DEY                             ; below left
ROM:747C B1 08                               LDA     (lsb_row_lda_static),Y  ; get object from tilemap (below, left)
ROM:747E C9 01                               CMP     #1                      ; brick?
ROM:7480 F0 08                               BEQ     loc_748A                ; yes, we can walk on it, go
ROM:7482 C9 02                               CMP     #2                      ; solid?
ROM:7484 F0 04                               BEQ     loc_748A                ; yes, we can walk on it, go
ROM:7486 C9 03                               CMP     #3                      ; ladder?
ROM:7488 D0 04                               BNE     loc_748E                ; no, we can't walk on it, go
ROM:748A
ROM:748A             loc_748A:                                               ; dec guard col
ROM:748A C6 5A                               DEC     farthest_left
ROM:748C 10 B6                               BPL     find_farthest_left      ; try again
ROM:748E
ROM:748E             loc_748E:
ROM:748E C6 5A                               DEC     farthest_left
ROM:7490
ROM:7490             find_farthest_right:
ROM:7490 A5 5B                               LDA     farthest_right
ROM:7492 C9 1B                               CMP     #27                     ; right-most column?
ROM:7494 F0 48                               BEQ     locret_74DE             ; yes, go
ROM:7496 A4 1B                               LDY     scanline                ; guard row
ROM:7498 B9 05 1C                            LDA     lsb_row_a_tbl,Y
ROM:749B 85 06                               STA     lsb_row_lda_dyn
ROM:749D B9 15 1C                            LDA     msb_row_a_dyn_tbl,Y
ROM:74A0 85 07                               STA     msb_row_lda_dyn         ; setup tilemap address
ROM:74A2 A4 5B                               LDY     farthest_right          ; col?
ROM:74A4 C8                                  INY                             ; column to right
ROM:74A5 B1 06                               LDA     (lsb_row_lda_dyn),Y     ; get object from tilemap (right)
ROM:74A7 C9 01                               CMP     #1                      ; brick?
ROM:74A9 F0 33                               BEQ     locret_74DE             ; yes, go
ROM:74AB C9 02                               CMP     #2                      ; solid?
ROM:74AD F0 2F                               BEQ     locret_74DE             ; yes, go
ROM:74AF C9 03                               CMP     #3                      ; ladder?
ROM:74B1 F0 25                               BEQ     loc_74D8                ; yes, go
ROM:74B3 C9 04                               CMP     #4                      ; rope?
ROM:74B5 F0 21                               BEQ     loc_74D8                ; yes, go
ROM:74B7 A4 1B                               LDY     scanline                ; guard row
ROM:74B9 C0 0F                               CPY     #15                     ; bottom row?
ROM:74BB F0 1B                               BEQ     loc_74D8                ; yes, go
ROM:74BD B9 06 1C                            LDA     (lsb_row_a_tbl+1),Y
ROM:74C0 85 08                               STA     lsb_row_lda_static
ROM:74C2 B9 26 1C                            LDA     (msb_row_a_static_tbl+1),Y
ROM:74C5 85 09                               STA     msb_row_lda_static      ; setup tilemap address (row below)
ROM:74C7 A4 5B                               LDY     farthest_right          ; col?
ROM:74C9 C8                                  INY                             ; column to right
ROM:74CA B1 08                               LDA     (lsb_row_lda_static),Y  ; get object from tilemap (below, right)
ROM:74CC C9 01                               CMP     #1                      ; brick?
ROM:74CE F0 08                               BEQ     loc_74D8                ; yes, go
ROM:74D0 C9 02                               CMP     #2                      ; solid?
ROM:74D2 F0 04                               BEQ     loc_74D8                ; yes, go
ROM:74D4 C9 03                               CMP     #3                      ; ladder?
ROM:74D6 D0 04                               BNE     loc_74DC                ; no, go
ROM:74D8
ROM:74D8             loc_74D8:                                               ; next col?
ROM:74D8 E6 5B                               INC     farthest_right
ROM:74DA 10 B4                               BPL     find_farthest_right     ; try again
ROM:74DC
ROM:74DC             loc_74DC:                                               ; next col?
ROM:74DC E6 5B                               INC     farthest_right
ROM:74DE
ROM:74DE             locret_74DE:
ROM:74DE 60                                  RTS
ROM:74DE             ; End of function find_farthest_left_right
ROM:74DE
ROM:74DF
ROM:74DF             ; =============== S U B R O U T I N E =======================================
ROM:74DF
ROM:74DF
ROM:74DF             calc_guard_xychar:
ROM:74DF A6 12                               LDX     curr_guard_col
ROM:74E1 A4 17                               LDY     curr_guard_x_offset
ROM:74E3 20 8F 88                            JSR     calc_x_div_2            ; =X
ROM:74E6 86 1E                               STX     msg_char                ; save
ROM:74E8 A4 13                               LDY     curr_guard_row
ROM:74EA A6 18                               LDX     curr_guard_y_offset
ROM:74EC 20 7C 88                            JSR     calc_scanline           ; =Y
ROM:74EF A6 14                               LDX     curr_guard_sprite
ROM:74F1 BD CB 6C                            LDA     guard_sprite_to_char_tbl,X ; get char
ROM:74F4 A6 1E                               LDX     msg_char                ; restore X
ROM:74F6 60                                  RTS
ROM:74F6             ; End of function calc_guard_xychar
ROM:74F6
ROM:74F7
ROM:74F7             ; =============== S U B R O U T I N E =======================================
ROM:74F7
ROM:74F7
ROM:74F7             check_guard_pickup_gold:
ROM:74F7 A5 17                               LDA     curr_guard_x_offset
ROM:74F9 C9 02                               CMP     #2
ROM:74FB D0 40                               BNE     locret_753D
ROM:74FD A5 18                               LDA     curr_guard_y_offset
ROM:74FF C9 02                               CMP     #2
ROM:7501 D0 3A                               BNE     locret_753D
ROM:7503 A4 13                               LDY     curr_guard_row
ROM:7505 B9 05 1C                            LDA     lsb_row_a_tbl,Y
ROM:7508 85 08                               STA     lsb_row_lda_static
ROM:750A B9 25 1C                            LDA     msb_row_a_static_tbl,Y
ROM:750D 85 09                               STA     msb_row_lda_static      ; setup tilemap address
ROM:750F A4 12                               LDY     curr_guard_col
ROM:7511 B1 08                               LDA     (lsb_row_lda_static),Y  ; get object from tilemap
ROM:7513 C9 07                               CMP     #7                      ; gold?
ROM:7515 D0 26                               BNE     locret_753D             ; no, exit
ROM:7517 A5 16                               LDA     curr_guard_state
ROM:7519 30 22                               BMI     locret_753D
ROM:751B A9 FF                               LDA     #0FFh
ROM:751D 38                                  SEC
ROM:751E E5 53                               SBC     guard_respawn_col
ROM:7520 85 16                               STA     curr_guard_state
ROM:7522 A9 00                               LDA     #0
ROM:7524 91 08                               STA     (lsb_row_lda_static),Y  ; update tilemap
ROM:7526 A4 13                               LDY     curr_guard_row
ROM:7528 84 86                               STY     row
ROM:752A A4 12                               LDY     curr_guard_col
ROM:752C 84 85                               STY     col
ROM:752E 20 B0 82                            JSR     display_char_pg2        ; render space on bg
ROM:7531 A4 86                               LDY     row
ROM:7533 A6 85                               LDX     col
ROM:7535 20 5D 88                            JSR     calc_colx5_scanline
ROM:7538 A9 07                               LDA     #7                      ; gold
ROM:753A 4C 36 83                            JMP     wipe_char
ROM:753D             ; ---------------------------------------------------------------------------
ROM:753D
ROM:753D             locret_753D:
ROM:753D 60                                  RTS
ROM:753D             ; End of function check_guard_pickup_gold
ROM:753D
ROM:753E
ROM:753E             ; =============== S U B R O U T I N E =======================================
ROM:753E
ROM:753E
ROM:753E             check_guard_drop_gold:
ROM:753E A5 16                               LDA     curr_guard_state
ROM:7540 10 31                               BPL     locret_7573
ROM:7542 E6 16                               INC     curr_guard_state
ROM:7544 D0 2D                               BNE     locret_7573
ROM:7546 A4 13                               LDY     curr_guard_row
ROM:7548 84 86                               STY     row
ROM:754A B9 05 1C                            LDA     lsb_row_a_tbl,Y
ROM:754D 85 08                               STA     lsb_row_lda_static
ROM:754F B9 25 1C                            LDA     msb_row_a_static_tbl,Y
ROM:7552 85 09                               STA     msb_row_lda_static
ROM:7554 A4 12                               LDY     curr_guard_col
ROM:7556 84 85                               STY     col                     ; col
ROM:7558 B1 08                               LDA     (lsb_row_lda_static),Y  ; get object from tilemap
ROM:755A C9 00                               CMP     #0                      ; space?
ROM:755C D0 13                               BNE     loc_7571                ; no, skip
ROM:755E A9 07                               LDA     #7                      ; gold
ROM:7560 91 08                               STA     (lsb_row_lda_static),Y  ; update tilemap
ROM:7562 20 B0 82                            JSR     display_char_pg2        ; render onto background
ROM:7565 A4 86                               LDY     row
ROM:7567 A6 85                               LDX     col
ROM:7569 20 5D 88                            JSR     calc_colx5_scanline
ROM:756C A9 07                               LDA     #7                      ; gold
ROM:756E 4C A7 83                            JMP     display_transparent_char ; render onto fg
ROM:7571             ; ---------------------------------------------------------------------------
ROM:7571
ROM:7571             loc_7571:
ROM:7571 C6 16                               DEC     curr_guard_state
ROM:7573
ROM:7573             locret_7573:
ROM:7573 60                                  RTS
ROM:7573             ; End of function check_guard_drop_gold
ROM:7573
ROM:7574
ROM:7574             ; =============== S U B R O U T I N E =======================================
ROM:7574
ROM:7574
ROM:7574             update_guard_sprite_index:
ROM:7574 E6 14                               INC     curr_guard_sprite
ROM:7576 C5 14                               CMP     curr_guard_sprite
ROM:7578 90 03                               BCC     loc_757D
ROM:757A
ROM:757A             loc_757A:
ROM:757A 85 14                               STA     curr_guard_sprite
ROM:757C 60                                  RTS
ROM:757D             ; ---------------------------------------------------------------------------
ROM:757D
ROM:757D             loc_757D:
ROM:757D E4 14                               CPX     curr_guard_sprite
ROM:757F 90 F9                               BCC     loc_757A
ROM:7581 60                                  RTS
ROM:7581             ; End of function update_guard_sprite_index
ROM:7581
ROM:7582
ROM:7582             ; =============== S U B R O U T I N E =======================================
ROM:7582
ROM:7582
ROM:7582             adjust_guard_x_offset:
ROM:7582 A5 17                               LDA     curr_guard_x_offset
ROM:7584 C9 02                               CMP     #2
ROM:7586 90 07                               BCC     loc_758F
ROM:7588 F0 0A                               BEQ     locret_7594
ROM:758A C6 17                               DEC     curr_guard_x_offset
ROM:758C 4C F7 74                            JMP     check_guard_pickup_gold
ROM:758F             ; ---------------------------------------------------------------------------
ROM:758F
ROM:758F             loc_758F:
ROM:758F E6 17                               INC     curr_guard_x_offset
ROM:7591 4C F7 74                            JMP     check_guard_pickup_gold
ROM:7594             ; ---------------------------------------------------------------------------
ROM:7594
ROM:7594             locret_7594:
ROM:7594 60                                  RTS
ROM:7594             ; End of function adjust_guard_x_offset
ROM:7594
ROM:7595
ROM:7595             ; =============== S U B R O U T I N E =======================================
ROM:7595
ROM:7595
ROM:7595             adjust_guard_y_offset:
ROM:7595 A5 18                               LDA     curr_guard_y_offset
ROM:7597 C9 02                               CMP     #2
ROM:7599 90 07                               BCC     loc_75A2
ROM:759B F0 0A                               BEQ     locret_75A7
ROM:759D C6 18                               DEC     curr_guard_y_offset
ROM:759F 4C F7 74                            JMP     check_guard_pickup_gold
ROM:75A2             ; ---------------------------------------------------------------------------
ROM:75A2
ROM:75A2             loc_75A2:
ROM:75A2 E6 18                               INC     curr_guard_y_offset
ROM:75A4 4C F7 74                            JMP     check_guard_pickup_gold
ROM:75A7             ; ---------------------------------------------------------------------------
ROM:75A7
ROM:75A7             locret_75A7:
ROM:75A7 60                                  RTS
ROM:75A7             ; End of function adjust_guard_y_offset
ROM:75A7
ROM:75A8             ; ---------------------------------------------------------------------------
ROM:75A8
ROM:75A8             copy_curr_to_guard:
ROM:75A8 A6 19                               LDX     curr_guard
ROM:75AA A5 12                               LDA     curr_guard_col
ROM:75AC 9D 60 0C                            STA     guard_col,X
ROM:75AF A5 13                               LDA     curr_guard_row
ROM:75B1 9D 68 0C                            STA     guard_row,X
ROM:75B4 A5 17                               LDA     curr_guard_x_offset
ROM:75B6 9D 78 0C                            STA     guard_x_offset,X
ROM:75B9 A5 18                               LDA     curr_guard_y_offset
ROM:75BB 9D 80 0C                            STA     guard_y_offset,X
ROM:75BE A5 16                               LDA     curr_guard_state
ROM:75C0 9D 70 0C                            STA     guard_state,X
ROM:75C3 A5 15                               LDA     curr_guard_dir
ROM:75C5 9D 90 0C                            STA     guard_dir,X
ROM:75C8 A5 14                               LDA     curr_guard_sprite
ROM:75CA 9D 88 0C                            STA     guard_sprite,X
ROM:75CD 60                                  RTS
ROM:75CE
ROM:75CE             ; =============== S U B R O U T I N E =======================================
ROM:75CE
ROM:75CE
ROM:75CE             copy_guard_to_curr:
ROM:75CE A6 19                               LDX     curr_guard
ROM:75D0 BD 60 0C                            LDA     guard_col,X
ROM:75D3 85 12                               STA     curr_guard_col
ROM:75D5 BD 68 0C                            LDA     guard_row,X
ROM:75D8 85 13                               STA     curr_guard_row
ROM:75DA BD 78 0C                            LDA     guard_x_offset,X
ROM:75DD 85 17                               STA     curr_guard_x_offset
ROM:75DF BD 80 0C                            LDA     guard_y_offset,X
ROM:75E2 85 18                               STA     curr_guard_y_offset
ROM:75E4 BD 88 0C                            LDA     guard_sprite,X
ROM:75E7 85 14                               STA     curr_guard_sprite
ROM:75E9 BD 90 0C                            LDA     guard_dir,X
ROM:75EC 85 15                               STA     curr_guard_dir
ROM:75EE BD 70 0C                            LDA     guard_state,X
ROM:75F1 85 16                               STA     curr_guard_state
ROM:75F3 60                                  RTS
ROM:75F3             ; End of function copy_guard_to_curr
ROM:75F3
ROM:75F4
ROM:75F4             ; =============== S U B R O U T I N E =======================================
ROM:75F4
ROM:75F4
ROM:75F4             respawn_guards_and_update_holes:
ROM:75F4 20 16 77                            JSR     check_and_handle_respawn
ROM:75F7 E6 53                               INC     guard_respawn_col
ROM:75F9 A5 53                               LDA     guard_respawn_col
ROM:75FB C9 1C                               CMP     #28
ROM:75FD 90 04                               BCC     loc_7603
ROM:75FF A9 00                               LDA     #0
ROM:7601 85 53                               STA     guard_respawn_col
ROM:7603
ROM:7603             loc_7603:                                               ; max number of holes
ROM:7603 A2 1E                               LDX     #1Eh
ROM:7605
ROM:7605             check_hole:
ROM:7605 BD E0 0C                            LDA     hole_cnt,X
ROM:7608 86 88                               STX     hole_no                 ; hole#
ROM:760A D0 03                               BNE     update_hole             ; hole refilling
ROM:760C 4C 0D 77                            JMP     next_hole
ROM:760F             ; ---------------------------------------------------------------------------
ROM:760F
ROM:760F             update_hole:
ROM:760F DE E0 0C                            DEC     hole_cnt,X
ROM:7612 F0 2D                               BEQ     restore_brick
ROM:7614 BD A0 0C                            LDA     hole_col,X
ROM:7617 85 85                               STA     col
ROM:7619 BD C0 0C                            LDA     hole_row,X
ROM:761C 85 86                               STA     row
ROM:761E BD E0 0C                            LDA     hole_cnt,X
ROM:7621 C9 14                               CMP     #20
ROM:7623 D0 14                               BNE     chk_hole_cnt_10
ROM:7625 A9 37                               LDA     #37h ; '7'              ; brick refill 0
ROM:7627
ROM:7627             update_hole_tile:                                       ; render onto background
ROM:7627 20 B0 82                            JSR     display_char_pg2
ROM:762A A6 85                               LDX     col
ROM:762C A4 86                               LDY     row
ROM:762E 20 5D 88                            JSR     calc_colx5_scanline
ROM:7631 A9 00                               LDA     #0                      ; space
ROM:7633 20 36 83                            JSR     wipe_char
ROM:7636
ROM:7636             goto_next_hole:
ROM:7636 4C 0D 77                            JMP     next_hole
ROM:7639             ; ---------------------------------------------------------------------------
ROM:7639
ROM:7639             chk_hole_cnt_10:
ROM:7639 C9 0A                               CMP     #10
ROM:763B D0 F9                               BNE     goto_next_hole
ROM:763D A9 38                               LDA     #38h ; '8'              ; brick refill 1
ROM:763F D0 E6                               BNE     update_hole_tile
ROM:7641
ROM:7641             restore_brick:                                          ; hole#
ROM:7641 A6 88                               LDX     hole_no
ROM:7643 BC C0 0C                            LDY     hole_row,X
ROM:7646 84 86                               STY     row
ROM:7648 B9 05 1C                            LDA     lsb_row_a_tbl,Y
ROM:764B 85 06                               STA     lsb_row_lda_dyn
ROM:764D 85 08                               STA     lsb_row_lda_static
ROM:764F B9 15 1C                            LDA     msb_row_a_dyn_tbl,Y
ROM:7652 85 07                               STA     msb_row_lda_dyn
ROM:7654 B9 25 1C                            LDA     msb_row_a_static_tbl,Y
ROM:7657 85 09                               STA     msb_row_lda_static      ; setup tilemap address
ROM:7659 BC A0 0C                            LDY     hole_col,X
ROM:765C 84 85                               STY     col
ROM:765E B1 06                               LDA     (lsb_row_lda_dyn),Y     ; get object from tilemap
ROM:7660 C9 00                               CMP     #0
ROM:7662 D0 03                               BNE     loc_7667
ROM:7664 4C 01 77                            JMP     redisplay_brick
ROM:7667             ; ---------------------------------------------------------------------------
ROM:7667
ROM:7667             loc_7667:                                               ; player?
ROM:7667 C9 09                               CMP     #9
ROM:7669 D0 02                               BNE     loc_766D                ; no, skip
ROM:766B 46 9A                               LSR     level_active            ; kill player
ROM:766D
ROM:766D             loc_766D:                                               ; guard?
ROM:766D C9 08                               CMP     #8
ROM:766F F0 09                               BEQ     loc_767A                ; yes, go
ROM:7671 C9 07                               CMP     #7                      ; gold?
ROM:7673 D0 02                               BNE     loc_7677                ; no, skip
ROM:7675 C6 93                               DEC     no_gold                 ; gold gone - adjust gold count
ROM:7677
ROM:7677             loc_7677:
ROM:7677 4C 01 77                            JMP     redisplay_brick
ROM:767A             ; ---------------------------------------------------------------------------
ROM:767A
ROM:767A             loc_767A:                                               ; diggable brick
ROM:767A A9 01                               LDA     #1
ROM:767C 91 06                               STA     (lsb_row_lda_dyn),Y     ; update tilemap
ROM:767E 91 08                               STA     (lsb_row_lda_static),Y  ; update tilemap
ROM:7680 20 AA 82                            JSR     display_char_pg1        ; render onto display
ROM:7683 A9 01                               LDA     #1                      ; diggable brick
ROM:7685 20 B0 82                            JSR     display_char_pg2        ; render onto background
ROM:7688 A6 8D                               LDX     no_guards
ROM:768A
ROM:768A             check_trapped_guards:
ROM:768A BD 60 0C                            LDA     guard_col,X
ROM:768D C5 85                               CMP     col                     ; column match?
ROM:768F D0 6D                               BNE     check_next_trapped      ; no, skip
ROM:7691 BD 68 0C                            LDA     guard_row,X
ROM:7694 C5 86                               CMP     row                     ; row match?
ROM:7696 D0 66                               BNE     check_next_trapped      ; no, skip
ROM:7698 BD 70 0C                            LDA     guard_state,X
ROM:769B 10 02                               BPL     loc_769F
ROM:769D C6 93                               DEC     no_gold
ROM:769F
ROM:769F             loc_769F:
ROM:769F A9 7F                               LDA     #7Fh ; ''
ROM:76A1 9D 70 0C                            STA     guard_state,X
ROM:76A4 86 19                               STX     curr_guard
ROM:76A6 20 CE 75                            JSR     copy_guard_to_curr
ROM:76A9 20 DF 74                            JSR     calc_guard_xychar
ROM:76AC 20 36 83                            JSR     wipe_char               ; wipe guard from screen
ROM:76AF A6 19                               LDX     curr_guard
ROM:76B1 A0 01                               LDY     #1
ROM:76B3 84 86                               STY     row                     ; reset guard row to 1
ROM:76B5
ROM:76B5             loc_76B5:
ROM:76B5 A4 86                               LDY     row
ROM:76B7 B9 05 1C                            LDA     lsb_row_a_tbl,Y
ROM:76BA 85 08                               STA     lsb_row_lda_static
ROM:76BC B9 25 1C                            LDA     msb_row_a_static_tbl,Y
ROM:76BF 85 09                               STA     msb_row_lda_static      ; setup tilemap address
ROM:76C1 A4 53                               LDY     guard_respawn_col
ROM:76C3
ROM:76C3             loc_76C3:
ROM:76C3 B1 08                               LDA     (lsb_row_lda_static),Y
ROM:76C5 C9 00                               CMP     #0
ROM:76C7 F0 10                               BEQ     loc_76D9
ROM:76C9 E6 53                               INC     guard_respawn_col
ROM:76CB A4 53                               LDY     guard_respawn_col
ROM:76CD C0 1C                               CPY     #28                     ; past last column?
ROM:76CF 90 F2                               BCC     loc_76C3                ; no, loop
ROM:76D1 E6 86                               INC     row
ROM:76D3 A9 00                               LDA     #0                      ; reset column
ROM:76D5 85 53                               STA     guard_respawn_col
ROM:76D7 F0 DC                               BEQ     loc_76B5
ROM:76D9
ROM:76D9             loc_76D9:
ROM:76D9 98                                  TYA
ROM:76DA 9D 60 0C                            STA     guard_col,X
ROM:76DD A5 86                               LDA     row
ROM:76DF 9D 68 0C                            STA     guard_row,X
ROM:76E2 A9 14                               LDA     #20                     ; init count=20
ROM:76E4 9D 98 0C                            STA     guard_cnt,X
ROM:76E7 A9 02                               LDA     #2
ROM:76E9 9D 80 0C                            STA     guard_y_offset,X
ROM:76EC 9D 78 0C                            STA     guard_x_offset,X
ROM:76EF A9 00                               LDA     #0
ROM:76F1 9D 88 0C                            STA     guard_sprite,X
ROM:76F4 A0 00                               LDY     #0
ROM:76F6 A9 75                               LDA     #75h ; 'u'              ; add 75
ROM:76F8 20 92 7A                            JSR     update_and_display_score
ROM:76FB 4C 0D 77                            JMP     next_hole
ROM:76FE             ; ---------------------------------------------------------------------------
ROM:76FE
ROM:76FE             check_next_trapped:
ROM:76FE CA                                  DEX
ROM:76FF D0 89                               BNE     check_trapped_guards
ROM:7701
ROM:7701             redisplay_brick:                                        ; diggable brick
ROM:7701 A9 01                               LDA     #1
ROM:7703 91 06                               STA     (lsb_row_lda_dyn),Y
ROM:7705 20 AA 82                            JSR     display_char_pg1
ROM:7708 A9 01                               LDA     #1                      ; diggable brick
ROM:770A 20 B0 82                            JSR     display_char_pg2        ; render onto background
ROM:770D
ROM:770D             next_hole:                                              ; hole#
ROM:770D A6 88                               LDX     hole_no
ROM:770F CA                                  DEX                             ; next hole
ROM:7710 30 03                               BMI     locret_7715             ; done? yes, exit
ROM:7712 4C 05 76                            JMP     check_hole              ; loop
ROM:7715             ; ---------------------------------------------------------------------------
ROM:7715
ROM:7715             locret_7715:
ROM:7715 60                                  RTS
ROM:7715             ; End of function respawn_guards_and_update_holes
ROM:7715
ROM:7716             ; ---------------------------------------------------------------------------
ROM:7716
ROM:7716             check_and_handle_respawn:                               ; any guards active?
ROM:7716 A6 8D                               LDX     no_guards
ROM:7718 F0 FB                               BEQ     locret_7715             ; no, exit
ROM:771A A5 19                               LDA     curr_guard
ROM:771C 48                                  PHA
ROM:771D
ROM:771D             loc_771D:
ROM:771D BD 98 0C                            LDA     guard_cnt,X
ROM:7720 F0 43                               BEQ     next_guard              ; 0? yes, skip
ROM:7722 86 19                               STX     curr_guard
ROM:7724 20 CE 75                            JSR     copy_guard_to_curr
ROM:7727 A9 7F                               LDA     #7Fh ; ''
ROM:7729 9D 70 0C                            STA     guard_state,X
ROM:772C BD 60 0C                            LDA     guard_col,X
ROM:772F 85 85                               STA     col
ROM:7731 BD 68 0C                            LDA     guard_row,X
ROM:7734 85 86                               STA     row
ROM:7736 DE 98 0C                            DEC     guard_cnt,X             ; dec counter
ROM:7739 F0 31                               BEQ     finish_respawn          ; 0? yes, go
ROM:773B BD 98 0C                            LDA     guard_cnt,X
ROM:773E C9 13                               CMP     #19
ROM:7740 D0 10                               BNE     loc_7752
ROM:7742 A9 39                               LDA     #39h ; '9'              ; enemy respawn 0
ROM:7744 20 B0 82                            JSR     display_char_pg2        ; render onto background
ROM:7747 20 DF 74                            JSR     calc_guard_xychar
ROM:774A A9 39                               LDA     #39h ; '9'              ; enemy respawn 0
ROM:774C 20 A7 83                            JSR     display_transparent_char
ROM:774F 4C 63 77                            JMP     loc_7763
ROM:7752             ; ---------------------------------------------------------------------------
ROM:7752
ROM:7752             loc_7752:                                               ; guard_cnt=10?
ROM:7752 C9 0A                               CMP     #10
ROM:7754 D0 0F                               BNE     next_guard              ; no, skip
ROM:7756 A9 3A                               LDA     #3Ah ; ':'              ; enemy respawn 1
ROM:7758 20 B0 82                            JSR     display_char_pg2        ; render onto background
ROM:775B 20 DF 74                            JSR     calc_guard_xychar
ROM:775E A9 3A                               LDA     #3Ah ; ':'              ; enemy respawn 1
ROM:7760 20 A7 83                            JSR     display_transparent_char
ROM:7763
ROM:7763             loc_7763:
ROM:7763 A6 19                               LDX     curr_guard
ROM:7765
ROM:7765             next_guard:                                             ; next guard
ROM:7765 CA                                  DEX
ROM:7766 D0 B5                               BNE     loc_771D                ; continue
ROM:7768 68                                  PLA
ROM:7769 85 19                               STA     curr_guard
ROM:776B 60                                  RTS
ROM:776C             ; ---------------------------------------------------------------------------
ROM:776C
ROM:776C             finish_respawn:
ROM:776C A4 86                               LDY     row
ROM:776E B9 05 1C                            LDA     lsb_row_a_tbl,Y
ROM:7771 85 06                               STA     lsb_row_lda_dyn
ROM:7773 B9 15 1C                            LDA     msb_row_a_dyn_tbl,Y
ROM:7776 85 07                               STA     msb_row_lda_dyn         ; setup tilemap address
ROM:7778 A6 19                               LDX     curr_guard
ROM:777A FE 98 0C                            INC     guard_cnt,X             ; count=1?
ROM:777D A4 85                               LDY     col
ROM:777F B1 06                               LDA     (lsb_row_lda_dyn),Y     ; get object from tilemap
ROM:7781 D0 E2                               BNE     next_guard              ; not free, skip
ROM:7783 A9 08                               LDA     #8                      ; guard
ROM:7785 91 06                               STA     (lsb_row_lda_dyn),Y     ; update tilemap
ROM:7787 A9 00                               LDA     #0                      ; space
ROM:7789 20 B0 82                            JSR     display_char_pg2        ; render onto background
ROM:778C A9 00                               LDA     #0
ROM:778E A6 19                               LDX     curr_guard
ROM:7790 9D 70 0C                            STA     guard_state,X
ROM:7793 9D 98 0C                            STA     guard_cnt,X             ; reset counter
ROM:7796 A9 08                               LDA     #8                      ; enemy left 0
ROM:7798 20 AA 82                            JSR     display_char_pg1
ROM:779B 20 E1 87                            JSR     queue_sound
ROM:779B             ; ---------------------------------------------------------------------------
ROM:779E 02 7C 03 78+                        .dw 7C02h, 7803h, 7404h, 7005h
ROM:77A6             ; ---------------------------------------------------------------------------
ROM:77A6 00                                  BRK
ROM:77A7             ; ---------------------------------------------------------------------------
ROM:77A7 A6 19                               LDX     curr_guard
ROM:77A9
ROM:77A9             loc_77A9:
ROM:77A9 4C 65 77                            JMP     next_guard
ROM:77AC             ; ---------------------------------------------------------------------------
ROM:77AC
ROM:77AC             ctrl_m:
ROM:77AC 20 6B 78                            JSR     cls_and_display_high_scores
ROM:77AF A2 FF                               LDX     #0FFh
ROM:77B1 A0 FF                               LDY     #0FFh
ROM:77B3 A9 04                               LDA     #4
ROM:77B5 85 A1                               STA     timer                   ; timeout=256*256*4 loops
ROM:77B7
ROM:77B7             loc_77B7:
ROM:77B7 A5 95                               LDA     paddles_detected
ROM:77B9 C9 CB                               CMP     #0CBh ; 'Ë'
ROM:77BB F0 0A                               BEQ     loc_77C7
ROM:77BD AD 62 C0                            LDA     0C062h                  ; closed apple key read
ROM:77C0 30 14                               BMI     loc_77D6                ; pressed? yes, go
ROM:77C2 AD 61 C0                            LDA     0C061h                  ; open apple key read
ROM:77C5 30 0F                               BMI     loc_77D6                ; pressed? yes, go
ROM:77C7
ROM:77C7             loc_77C7:                                               ; read keyboard
ROM:77C7 AD 00 C0                            LDA     0C000h
ROM:77CA 30 0A                               BMI     loc_77D6                ; key pressed? yes, go
ROM:77CC CA                                  DEX
ROM:77CD D0 E8                               BNE     loc_77B7
ROM:77CF 88                                  DEY
ROM:77D0 D0 E5                               BNE     loc_77B7
ROM:77D2 C6 A1                               DEC     timer                   ; timed out?
ROM:77D4 D0 E1                               BNE     loc_77B7                ; no, loop
ROM:77D6
ROM:77D6             loc_77D6:                                               ; keyboard strobe
ROM:77D6 8D 10 C0                            STA     0C010h
ROM:77D9 8D 54 C0                            STA     0C054h                  ; select text/graphics page 1
ROM:77DC 20 57 7A                            JSR     gcls2
ROM:77DF A0 0F                               LDY     #15                     ; 15 rows to draw
ROM:77E1 84 86                               STY     row
ROM:77E3
ROM:77E3             loc_77E3:
ROM:77E3 B9 05 1C                            LDA     lsb_row_a_tbl,Y
ROM:77E6 85 08                               STA     lsb_row_lda_static
ROM:77E8 B9 25 1C                            LDA     msb_row_a_static_tbl,Y
ROM:77EB 85 09                               STA     msb_row_lda_static      ; setup tilemap address
ROM:77ED A0 1B                               LDY     #27                     ; 28 columns to draw
ROM:77EF 84 85                               STY     col
ROM:77F1
ROM:77F1             loc_77F1:
ROM:77F1 B1 08                               LDA     (lsb_row_lda_static),Y
ROM:77F3 C9 05                               CMP     #5                      ; fall-thru?
ROM:77F5 D0 02                               BNE     loc_77F9                ; no, skip
ROM:77F7 A9 01                               LDA     #1                      ; display brick
ROM:77F9
ROM:77F9             loc_77F9:
ROM:77F9 20 B0 82                            JSR     display_char_pg2
ROM:77FC C6 85                               DEC     col
ROM:77FE A4 85                               LDY     col
ROM:7800 10 EF                               BPL     loc_77F1                ; draw row
ROM:7802 C6 86                               DEC     row
ROM:7804 A4 86                               LDY     row
ROM:7806 10 DB                               BPL     loc_77E3                ; draw all rows
ROM:7808 A2 1E                               LDX     #1Eh                    ; max holes
ROM:780A
ROM:780A             loc_780A:                                               ; hole #
ROM:780A 86 88                               STX     hole_no
ROM:780C BD E0 0C                            LDA     hole_cnt,X
ROM:780F F0 27                               BEQ     loc_7838
ROM:7811 BC C0 0C                            LDY     hole_row,X
ROM:7814 84 86                               STY     row
ROM:7816 BC A0 0C                            LDY     hole_col,X
ROM:7819 84 85                               STY     col
ROM:781B C9 15                               CMP     #15h
ROM:781D 90 08                               BCC     loc_7827
ROM:781F A9 00                               LDA     #0                      ; space
ROM:7821 20 B0 82                            JSR     display_char_pg2        ; render onto background
ROM:7824 4C 38 78                            JMP     loc_7838
ROM:7827             ; ---------------------------------------------------------------------------
ROM:7827
ROM:7827             loc_7827:
ROM:7827 C9 0B                               CMP     #0Bh
ROM:7829 90 08                               BCC     loc_7833
ROM:782B A9 37                               LDA     #37h ; '7'              ; brick refill 0
ROM:782D 20 B0 82                            JSR     display_char_pg2        ; render onto background
ROM:7830 4C 38 78                            JMP     loc_7838
ROM:7833             ; ---------------------------------------------------------------------------
ROM:7833
ROM:7833             loc_7833:                                               ; brick refill 1
ROM:7833 A9 38                               LDA     #38h ; '8'
ROM:7835 20 B0 82                            JSR     display_char_pg2        ; render onto background
ROM:7838
ROM:7838             loc_7838:                                               ; hole#
ROM:7838 A6 88                               LDX     hole_no
ROM:783A CA                                  DEX                             ; next hole
ROM:783B 10 CD                               BPL     loc_780A                ; loop all holes
ROM:783D A6 8D                               LDX     no_guards               ; any guards?
ROM:783F F0 27                               BEQ     loc_7868                ; no, skip
ROM:7841
ROM:7841             loc_7841:
ROM:7841 BD 98 0C                            LDA     guard_cnt,X
ROM:7844 86 88                               STX     hole_no                 ; (guard #)
ROM:7846 F0 1B                               BEQ     loc_7863                ; cnt=0, skip
ROM:7848 BC 60 0C                            LDY     guard_col,X
ROM:784B 84 85                               STY     col
ROM:784D BC 68 0C                            LDY     guard_row,X
ROM:7850 84 86                               STY     row
ROM:7852 C9 14                               CMP     #20
ROM:7854 B0 0D                               BCS     loc_7863
ROM:7856 C9 0B                               CMP     #11
ROM:7858 90 04                               BCC     loc_785E
ROM:785A A9 39                               LDA     #39h ; '9'              ; guard respawn 0
ROM:785C D0 02                               BNE     loc_7860
ROM:785E
ROM:785E             loc_785E:                                               ; enemy respawn 1
ROM:785E A9 3A                               LDA     #3Ah ; ':'
ROM:7860
ROM:7860             loc_7860:                                               ; render onto background
ROM:7860 20 B0 82                            JSR     display_char_pg2
ROM:7863
ROM:7863             loc_7863:                                               ; (guard #)
ROM:7863 A6 88                               LDX     hole_no
ROM:7865 CA                                  DEX                             ; next guard
ROM:7866 D0 D9                               BNE     loc_7841                ; loop all guards
ROM:7868
ROM:7868             loc_7868:
ROM:7868 4C 12 6A                            JMP     read_controls
ROM:786B             ; ---------------------------------------------------------------------------
ROM:786B
ROM:786B             cls_and_display_high_scores:
ROM:786B 20 57 7A                            JSR     gcls2
ROM:786E A9 40                               LDA     #40h ; '@'              ; page2
ROM:7870 85 87                               STA     display_char_page
ROM:7872 A9 00                               LDA     #0
ROM:7874 85 85                               STA     col                     ; =0
ROM:7876 85 86                               STA     row                     ; =0
ROM:7878 20 E0 86                            JSR     display_message
ROM:7878             ; ---------------------------------------------------------------------------
ROM:787B A0 A0 A0 A0+aLodeRunnerHighScores:  .db 0A0h, 0A0h, 0A0h, 0A0h, 0CCh, 0CFh, 0C4h, 0C5h, 0A0h ; "    LODE RUNNER HIGH SCORES\n\n\n"
ROM:787B CC CF C4 C5+                        .db 0D2h, 0D5h, 0CEh, 0CEh, 0C5h, 0D2h, 0A0h, 0C8h, 0C9h
ROM:787B A0 D2 D5 CE+                        .db 0C7h, 0C8h, 0A0h, 0D3h, 0C3h, 0CFh, 0D2h, 0C5h, 0D3h
ROM:787B CE C5 D2 A0+                        .db 8Dh, 8Dh, 8Dh
ROM:7899 A0 A0 A0 A0+aInitialsLevelScore:    .db 0A0h, 0A0h, 0A0h, 0A0h, 0C9h, 0CEh, 0C9h, 0D4h, 0C9h ; "    INITIALS LEVEL  SCORE\n"
ROM:7899 C9 CE C9 D4+                        .db 0C1h, 0CCh, 0D3h, 0A0h, 0CCh, 0C5h, 0D6h, 0C5h, 0CCh
ROM:7899 C9 C1 CC D3+                        .db 0A0h, 0A0h, 0D3h, 0C3h, 0CFh, 0D2h, 0C5h, 8Dh
ROM:78B3 A0 A0 A0 A0+aDashes:                .db 0A0h, 0A0h, 0A0h, 0A0h, 0ADh, 0ADh, 0ADh, 0ADh, 0ADh
ROM:78B3 AD AD AD AD+                        .db 0ADh, 0ADh, 0ADh, 0A0h, 0ADh, 0ADh, 0ADh, 0ADh, 0ADh
ROM:78B3 AD AD AD AD+                        .db 0A0h, 0ADh, 0ADh, 0ADh, 0ADh, 0ADh, 0ADh, 0ADh, 0ADh
ROM:78B3 A0 AD AD AD+                        .db 8Dh
ROM:78CF             ; ---------------------------------------------------------------------------
ROM:78CF 00                                  BRK
ROM:78D0             ; ---------------------------------------------------------------------------
ROM:78D0 A9 01                               LDA     #1                      ; score counter
ROM:78D2 85 55                               STA     guard_ai_col
ROM:78D4
ROM:78D4             loc_78D4:                                               ; tenth score?
ROM:78D4 C9 0A                               CMP     #10
ROM:78D6 D0 0D                               BNE     loc_78E5                ; no, skip
ROM:78D8 A9 01                               LDA     #1
ROM:78DA 20 15 7B                            JSR     display_digit
ROM:78DD A9 00                               LDA     #0
ROM:78DF 20 15 7B                            JSR     display_digit           ; display "10"
ROM:78E2 4C EF 78                            JMP     loc_78EF                ; continue
ROM:78E5             ; ---------------------------------------------------------------------------
ROM:78E5
ROM:78E5             loc_78E5:                                               ; space
ROM:78E5 A9 A0                               LDA     #0A0h ; ' '
ROM:78E7 20 64 7B                            JSR     display_character
ROM:78EA A5 55                               LDA     guard_ai_col            ; display " <n>" (score counter)
ROM:78EC 20 15 7B                            JSR     display_digit
ROM:78EF
ROM:78EF             loc_78EF:
ROM:78EF 20 E0 86                            JSR     display_message
ROM:78EF             ; ---------------------------------------------------------------------------
ROM:78F2 AE A0 A0 A0+                        .db 0AEh, 0A0h, 0A0h, 0A0h, 0A0h ; ".    "
ROM:78F7             ; ---------------------------------------------------------------------------
ROM:78F7 00                                  BRK
ROM:78F8             ; ---------------------------------------------------------------------------
ROM:78F8 A6 55                               LDX     guard_ai_col            ; score counter
ROM:78FA BC A2 79                            LDY     high_score_offset_tbl,X
ROM:78FD 84 56                               STY     guard_ai_row
ROM:78FF B9 03 1F                            LDA     1F03h,Y
ROM:7902 D0 03                               BNE     loc_7907
ROM:7904 4C 8C 79                            JMP     next_hs
ROM:7907             ; ---------------------------------------------------------------------------
ROM:7907
ROM:7907             loc_7907:
ROM:7907 A4 56                               LDY     guard_ai_row
ROM:7909 B9 00 1F                            LDA     1F00h,Y                 ; initial 1
ROM:790C 20 64 7B                            JSR     display_character
ROM:790F A4 56                               LDY     guard_ai_row
ROM:7911 B9 01 1F                            LDA     1F01h,Y                 ; initial 2
ROM:7914 20 64 7B                            JSR     display_character
ROM:7917 A4 56                               LDY     guard_ai_row
ROM:7919 B9 02 1F                            LDA     1F02h,Y                 ; initial 3
ROM:791C 20 64 7B                            JSR     display_character
ROM:791F 20 E0 86                            JSR     display_message
ROM:791F             ; ---------------------------------------------------------------------------
ROM:7922 A0 A0 A0 A0                         .db 0A0h, 0A0h, 0A0h, 0A0h      ; "    "
ROM:7926             ; ---------------------------------------------------------------------------
ROM:7926 00                                  BRK
ROM:7927             ; ---------------------------------------------------------------------------
ROM:7927 A4 56                               LDY     guard_ai_row
ROM:7929 B9 03 1F                            LDA     1F03h,Y                 ; level
ROM:792C 20 F8 7A                            JSR     cnv_byte_to_3_digits
ROM:792F A5 89                               LDA     hundreds
ROM:7931 20 15 7B                            JSR     display_digit
ROM:7934 A5 8A                               LDA     tens
ROM:7936 20 15 7B                            JSR     display_digit
ROM:7939 A5 8B                               LDA     units
ROM:793B 20 15 7B                            JSR     display_digit
ROM:793E 20 E0 86                            JSR     display_message
ROM:793E             ; ---------------------------------------------------------------------------
ROM:7941 A0 A0                               .db 0A0h, 0A0h                  ; "  "
ROM:7943             ; ---------------------------------------------------------------------------
ROM:7943 00                                  BRK
ROM:7944             ; ---------------------------------------------------------------------------
ROM:7944 A4 56                               LDY     guard_ai_row
ROM:7946 B9 04 1F                            LDA     1F04h,Y                 ; millions
ROM:7949 20 E9 7A                            JSR     cnv_bcd_to_2_digits
ROM:794C A5 8A                               LDA     tens
ROM:794E 20 15 7B                            JSR     display_digit
ROM:7951 A5 8B                               LDA     units
ROM:7953 20 15 7B                            JSR     display_digit
ROM:7956 A4 56                               LDY     guard_ai_row
ROM:7958 B9 05 1F                            LDA     1F05h,Y                 ; hundreds, tens of thousands
ROM:795B 20 E9 7A                            JSR     cnv_bcd_to_2_digits
ROM:795E A5 8A                               LDA     tens
ROM:7960 20 15 7B                            JSR     display_digit
ROM:7963 A5 8B                               LDA     units
ROM:7965 20 15 7B                            JSR     display_digit
ROM:7968 A4 56                               LDY     guard_ai_row
ROM:796A B9 06 1F                            LDA     1F06h,Y                 ; thousands, hundreds
ROM:796D 20 E9 7A                            JSR     cnv_bcd_to_2_digits
ROM:7970 A5 8A                               LDA     tens
ROM:7972 20 15 7B                            JSR     display_digit
ROM:7975 A5 8B                               LDA     units
ROM:7977 20 15 7B                            JSR     display_digit
ROM:797A A4 56                               LDY     guard_ai_row
ROM:797C B9 07 1F                            LDA     1F07h,Y                 ; tens, units
ROM:797F 20 E9 7A                            JSR     cnv_bcd_to_2_digits
ROM:7982 A5 8A                               LDA     tens
ROM:7984 20 15 7B                            JSR     display_digit
ROM:7987 A5 8B                               LDA     units
ROM:7989 20 15 7B                            JSR     display_digit
ROM:798C
ROM:798C             next_hs:
ROM:798C 20 7D 7B                            JSR     cr
ROM:798F E6 55                               INC     guard_ai_col            ; next score
ROM:7991 A5 55                               LDA     guard_ai_col
ROM:7993 C9 0B                               CMP     #11                     ; done all scores?
ROM:7995 B0 03                               BCS     done_hs                 ; yes, skip
ROM:7997 4C D4 78                            JMP     loc_78D4                ; loop
ROM:799A             ; ---------------------------------------------------------------------------
ROM:799A
ROM:799A             done_hs:                                                ; select text/graphics page 2
ROM:799A 8D 55 C0                            STA     0C055h
ROM:799D A9 20                               LDA     #20h ; ' '              ; hires page 1
ROM:799F 85 87                               STA     display_char_page
ROM:79A1 60                                  RTS
ROM:79A1             ; ---------------------------------------------------------------------------
ROM:79A2 00 00 08 10+high_score_offset_tbl:  .db 0, 0, 8, 10h, 18h, 20h, 28h, 30h, 38h, 40h, 48h
ROM:79AD             ; ---------------------------------------------------------------------------
ROM:79AD
ROM:79AD             cls_and_display_game_status:
ROM:79AD 20 51 7A                            JSR     gcls1
ROM:79B0 20 57 7A                            JSR     gcls2
ROM:79B3
ROM:79B3             loc_79B3:                                               ; last column on screen
ROM:79B3 A0 27                               LDY     #39
ROM:79B5 A5 87                               LDA     display_char_page       ; hires_page_msb_2
ROM:79B7 C9 40                               CMP     #40h ; '@'              ; page 2?
ROM:79B9 F0 22                               BEQ     loc_79DD                ; yes, skip
ROM:79BB
ROM:79BB             loc_79BB:                                               ; pattern #1
ROM:79BB A9 AA                               LDA     #0AAh ; 'ª'
ROM:79BD 99 50 23                            STA     2350h,Y
ROM:79C0 99 50 27                            STA     2750h,Y
ROM:79C3 99 50 2B                            STA     2B50h,Y
ROM:79C6 99 50 2F                            STA     2F50h,Y                 ; 4 pixels high
ROM:79C9 88                                  DEY
ROM:79CA A9 D5                               LDA     #0D5h ; 'Õ'             ; pattern #2
ROM:79CC 99 50 23                            STA     2350h,Y
ROM:79CF 99 50 27                            STA     2750h,Y
ROM:79D2 99 50 2B                            STA     2B50h,Y
ROM:79D5 99 50 2F                            STA     2F50h,Y                 ; 4 pixels high
ROM:79D8 88                                  DEY                             ; done across screen?
ROM:79D9 10 E0                               BPL     loc_79BB                ; no, loop
ROM:79DB 30 20                               BMI     loc_79FD                ; continue
ROM:79DD
ROM:79DD             loc_79DD:
ROM:79DD A9 AA                               LDA     #0AAh ; 'ª'
ROM:79DF 99 50 43                            STA     4350h,Y
ROM:79E2 99 50 47                            STA     4750h,Y
ROM:79E5 99 50 4B                            STA     4B50h,Y
ROM:79E8 99 50 4F                            STA     4F50h,Y
ROM:79EB 88                                  DEY
ROM:79EC A9 D5                               LDA     #0D5h ; 'Õ'
ROM:79EE 99 50 43                            STA     4350h,Y
ROM:79F1 99 50 47                            STA     4750h,Y
ROM:79F4 99 50 4B                            STA     4B50h,Y
ROM:79F7 99 50 4F                            STA     4F50h,Y
ROM:79FA 88                                  DEY
ROM:79FB 10 E0                               BPL     loc_79DD                ; draw line across screen
ROM:79FD
ROM:79FD             loc_79FD:
ROM:79FD A9 10                               LDA     #16
ROM:79FF 85 86                               STA     row
ROM:7A01 A9 00                               LDA     #0
ROM:7A03 85 85                               STA     col
ROM:7A05 20 E0 86                            JSR     display_message
ROM:7A05             ; ---------------------------------------------------------------------------
ROM:7A08 D3 C3 CF D2+aScoreMenLevel:         .db 0D3h, 0C3h, 0CFh, 0D2h, 0C5h, 0A0h, 0A0h, 0A0h, 0A0h ; "SCORE        MEN    LEVEL   "
ROM:7A08 C5 A0 A0 A0+                        .db 0A0h, 0A0h, 0A0h, 0A0h, 0CDh, 0C5h, 0CEh, 0A0h, 0A0h
ROM:7A08 A0 A0 A0 A0+                        .db 0A0h, 0A0h, 0CCh, 0C5h, 0D6h, 0C5h, 0CCh, 0A0h, 0A0h
ROM:7A08 A0 CD C5 CE+                        .db 0A0h
ROM:7A24             ; ---------------------------------------------------------------------------
ROM:7A24 00                                  BRK
ROM:7A25             ; ---------------------------------------------------------------------------
ROM:7A25 20 70 7A                            JSR     display_no_lives
ROM:7A28 20 8C 7A                            JSR     display_level
ROM:7A2B A9 00                               LDA     #0
ROM:7A2D A8                                  TAY                             ; add 0
ROM:7A2E 4C 92 7A                            JMP     update_and_display_score
ROM:7A31
ROM:7A31             ; =============== S U B R O U T I N E =======================================
ROM:7A31
ROM:7A31
ROM:7A31             calc_line_addr_for_scanline:
ROM:7A31 B9 85 1A                            LDA     lsb_line_addr,Y         ; lsb of line start address
ROM:7A34 85 0C                               STA     lsb_line_addr_pg1
ROM:7A36 B9 45 1B                            LDA     msb_line_addr,Y         ; msb of line start address
ROM:7A39 05 1F                               ORA     hires_page_msb_1        ; or-in page address
ROM:7A3B 85 0D                               STA     msb_line_addr_pg1
ROM:7A3D 60                                  RTS
ROM:7A3D             ; End of function calc_line_addr_for_scanline
ROM:7A3D
ROM:7A3E
ROM:7A3E             ; =============== S U B R O U T I N E =======================================
ROM:7A3E
ROM:7A3E
ROM:7A3E             get_line_addr_pgs_1_2:
ROM:7A3E B9 85 1A                            LDA     lsb_line_addr,Y         ; lsb of line start address
ROM:7A41 85 0C                               STA     lsb_line_addr_pg1
ROM:7A43 85 0E                               STA     lsb_line_addr_pg2
ROM:7A45 B9 45 1B                            LDA     msb_line_addr,Y         ; msb of line start address
ROM:7A48 09 20                               ORA     #20h ; ' '              ; or-in page 1 address
ROM:7A4A 85 0D                               STA     msb_line_addr_pg1
ROM:7A4C 49 60                               EOR     #60h ; '`'              ; or-in page 2 address
ROM:7A4E 85 0F                               STA     msb_line_addr_pg2
ROM:7A50 60                                  RTS
ROM:7A50             ; End of function get_line_addr_pgs_1_2
ROM:7A50
ROM:7A51
ROM:7A51             ; =============== S U B R O U T I N E =======================================
ROM:7A51
ROM:7A51
ROM:7A51             gcls1:
ROM:7A51 A9 20                               LDA     #20h ; ' '              ; starting MSB
ROM:7A53 A2 40                               LDX     #40h ; '@'              ; ending MSB
ROM:7A55 D0 04                               BNE     loc_7A5B                ; (always)
ROM:7A57
ROM:7A57             gcls2:                                                  ; starting MSB
ROM:7A57 A9 40                               LDA     #40h ; '@'
ROM:7A59 A2 60                               LDX     #60h ; '`'              ; ending MSB
ROM:7A5B
ROM:7A5B             loc_7A5B:                                               ; msb of hires address
ROM:7A5B 85 0B                               STA     0Bh
ROM:7A5D A9 00                               LDA     #0
ROM:7A5F 85 0A                               STA     0Ah                     ; lsb of address
ROM:7A61 A8                                  TAY
ROM:7A62 A9 80                               LDA     #80h ; ''              ; byte to write
ROM:7A64
ROM:7A64             loc_7A64:                                               ; write byte to video
ROM:7A64 91 0A                               STA     (0Ah),Y
ROM:7A66 C8                                  INY                             ; next address
ROM:7A67 D0 FB                               BNE     loc_7A64                ; loop 256 times
ROM:7A69 E6 0B                               INC     0Bh                     ; inc MSB
ROM:7A6B E4 0B                               CPX     0Bh                     ; done?
ROM:7A6D D0 F5                               BNE     loc_7A64                ; no, loop
ROM:7A6F 60                                  RTS
ROM:7A6F             ; End of function gcls1
ROM:7A6F
ROM:7A70
ROM:7A70             ; =============== S U B R O U T I N E =======================================
ROM:7A70
ROM:7A70
ROM:7A70             display_no_lives:
ROM:7A70 A5 98                               LDA     no_lives
ROM:7A72 A2 10                               LDX     #16                     ; col=16
ROM:7A74
ROM:7A74             display_byte:
ROM:7A74 86 85                               STX     col
ROM:7A76 20 F8 7A                            JSR     cnv_byte_to_3_digits
ROM:7A79 A9 10                               LDA     #16                     ; row=16
ROM:7A7B 85 86                               STA     row
ROM:7A7D A5 89                               LDA     hundreds
ROM:7A7F 20 15 7B                            JSR     display_digit
ROM:7A82 A5 8A                               LDA     tens
ROM:7A84 20 15 7B                            JSR     display_digit
ROM:7A87 A5 8B                               LDA     units
ROM:7A89 4C 15 7B                            JMP     display_digit
ROM:7A89             ; End of function display_no_lives
ROM:7A89
ROM:7A8C
ROM:7A8C             ; =============== S U B R O U T I N E =======================================
ROM:7A8C
ROM:7A8C
ROM:7A8C             display_level:
ROM:7A8C A5 A6                               LDA     level
ROM:7A8E A2 19                               LDX     #25                     ; col=25
ROM:7A90 D0 E2                               BNE     display_byte            ; always
ROM:7A90             ; End of function display_level
ROM:7A90
ROM:7A92
ROM:7A92             ; =============== S U B R O U T I N E =======================================
ROM:7A92
ROM:7A92
ROM:7A92             update_and_display_score:
ROM:7A92 18                                  CLC                             ; clear carry
ROM:7A93 F8                                  SED                             ; set decimal mode (BCD)
ROM:7A94 65 8E                               ADC     score_1e1_1
ROM:7A96 85 8E                               STA     score_1e1_1
ROM:7A98 98                                  TYA
ROM:7A99 65 8F                               ADC     score_1e3_1e2
ROM:7A9B 85 8F                               STA     score_1e3_1e2
ROM:7A9D A9 00                               LDA     #0
ROM:7A9F 65 90                               ADC     score_1e5_1e4
ROM:7AA1 85 90                               STA     score_1e5_1e4
ROM:7AA3 A9 00                               LDA     #0
ROM:7AA5 65 91                               ADC     score_1e6               ; millions
ROM:7AA7 85 91                               STA     score_1e6
ROM:7AA9 D8                                  CLD                             ; clear decimal flag
ROM:7AAA A9 05                               LDA     #5                      ; col=5
ROM:7AAC 85 85                               STA     col
ROM:7AAE A9 10                               LDA     #16                     ; row=16
ROM:7AB0 85 86                               STA     row
ROM:7AB2 A5 91                               LDA     score_1e6
ROM:7AB4 20 E9 7A                            JSR     cnv_bcd_to_2_digits
ROM:7AB7 A5 8B                               LDA     units
ROM:7AB9 20 15 7B                            JSR     display_digit           ; millions
ROM:7ABC A5 90                               LDA     score_1e5_1e4
ROM:7ABE 20 E9 7A                            JSR     cnv_bcd_to_2_digits
ROM:7AC1 A5 8A                               LDA     tens
ROM:7AC3 20 15 7B                            JSR     display_digit           ; hundreds of thousands
ROM:7AC6 A5 8B                               LDA     units
ROM:7AC8 20 15 7B                            JSR     display_digit           ; tens of thousands
ROM:7ACB A5 8F                               LDA     score_1e3_1e2
ROM:7ACD 20 E9 7A                            JSR     cnv_bcd_to_2_digits
ROM:7AD0 A5 8A                               LDA     tens
ROM:7AD2 20 15 7B                            JSR     display_digit           ; thousands
ROM:7AD5 A5 8B                               LDA     units
ROM:7AD7 20 15 7B                            JSR     display_digit           ; hundreds
ROM:7ADA A5 8E                               LDA     score_1e1_1
ROM:7ADC 20 E9 7A                            JSR     cnv_bcd_to_2_digits
ROM:7ADF A5 8A                               LDA     tens
ROM:7AE1 20 15 7B                            JSR     display_digit           ; tens
ROM:7AE4 A5 8B                               LDA     units
ROM:7AE6 4C 15 7B                            JMP     display_digit           ; units
ROM:7AE6             ; End of function update_and_display_score
ROM:7AE6
ROM:7AE9
ROM:7AE9             ; =============== S U B R O U T I N E =======================================
ROM:7AE9
ROM:7AE9
ROM:7AE9             cnv_bcd_to_2_digits:
ROM:7AE9 85 8A                               STA     tens                    ; tens
ROM:7AEB 29 0F                               AND     #0Fh
ROM:7AED 85 8B                               STA     units                   ; units
ROM:7AEF A5 8A                               LDA     tens
ROM:7AF1 4A                                  LSR     A
ROM:7AF2 4A                                  LSR     A
ROM:7AF3 4A                                  LSR     A
ROM:7AF4 4A                                  LSR     A                       ; high to low nibble
ROM:7AF5 85 8A                               STA     tens                    ; tens
ROM:7AF7 60                                  RTS
ROM:7AF7             ; End of function cnv_bcd_to_2_digits
ROM:7AF7
ROM:7AF8
ROM:7AF8             ; =============== S U B R O U T I N E =======================================
ROM:7AF8
ROM:7AF8
ROM:7AF8             cnv_byte_to_3_digits:
ROM:7AF8 A2 00                               LDX     #0
ROM:7AFA 86 8A                               STX     tens
ROM:7AFC 86 89                               STX     hundreds
ROM:7AFE
ROM:7AFE             loc_7AFE:                                               ; >=100?
ROM:7AFE C9 64                               CMP     #100
ROM:7B00 90 06                               BCC     loc_7B08                ; no, skip
ROM:7B02 E6 89                               INC     hundreds
ROM:7B04 E9 64                               SBC     #100
ROM:7B06 D0 F6                               BNE     loc_7AFE                ; loop counting 100's
ROM:7B08
ROM:7B08             loc_7B08:                                               ; >=10?
ROM:7B08 C9 0A                               CMP     #10
ROM:7B0A 90 06                               BCC     loc_7B12                ; no, skip
ROM:7B0C E6 8A                               INC     tens
ROM:7B0E E9 0A                               SBC     #10
ROM:7B10 D0 F6                               BNE     loc_7B08                ; loop counting tens
ROM:7B12
ROM:7B12             loc_7B12:
ROM:7B12 85 8B                               STA     units
ROM:7B14 60                                  RTS
ROM:7B14             ; End of function cnv_byte_to_3_digits
ROM:7B14
ROM:7B15
ROM:7B15             ; =============== S U B R O U T I N E =======================================
ROM:7B15
ROM:7B15
ROM:7B15             display_digit:
ROM:7B15 18                                  CLC
ROM:7B16 69 3B                               ADC     #3Bh ; ';'              ; convert to 'ascii'
ROM:7B18 A6 87                               LDX     display_char_page
ROM:7B1A E0 40                               CPX     #40h ; '@'              ; page 2?
ROM:7B1C F0 06                               BEQ     loc_7B24                ; yes, go
ROM:7B1E 20 AA 82                            JSR     display_char_pg1
ROM:7B21 E6 85                               INC     col
ROM:7B23 60                                  RTS
ROM:7B24             ; ---------------------------------------------------------------------------
ROM:7B24
ROM:7B24             loc_7B24:
ROM:7B24 20 B0 82                            JSR     display_char_pg2
ROM:7B27 E6 85                               INC     col                     ; next column
ROM:7B29 60                                  RTS
ROM:7B29             ; End of function display_digit
ROM:7B29
ROM:7B2A
ROM:7B2A             ; =============== S U B R O U T I N E =======================================
ROM:7B2A
ROM:7B2A
ROM:7B2A             remap_character:
ROM:7B2A C9 C1                               CMP     #0C1h ; 'Á'             ; <'A' - control character?
ROM:7B2C 90 04                               BCC     loc_7B32                ; yes, skip
ROM:7B2E C9 DB                               CMP     #0DBh ; 'Û'             ; <'Z'+1 - alphabetical?
ROM:7B30 90 2E                               BCC     loc_7B60                ; yes, go
ROM:7B32
ROM:7B32             loc_7B32:
ROM:7B32 A2 7C                               LDX     #7Ch ; '|'
ROM:7B34 C9 A0                               CMP     #0A0h ; ' '             ; space?
ROM:7B36 F0 27                               BEQ     loc_7B5F                ; yes, go
ROM:7B38 A2 DB                               LDX     #0DBh ; 'Û'
ROM:7B3A C9 BE                               CMP     #0BEh ; '¾'             ; '>'
ROM:7B3C F0 21                               BEQ     loc_7B5F
ROM:7B3E E8                                  INX
ROM:7B3F C9 AE                               CMP     #0AEh ; '®'             ; '.'
ROM:7B41 F0 1C                               BEQ     loc_7B5F
ROM:7B43 E8                                  INX
ROM:7B44 C9 A8                               CMP     #0A8h ; '¨'             ; '('
ROM:7B46 F0 17                               BEQ     loc_7B5F
ROM:7B48 E8                                  INX
ROM:7B49 C9 A9                               CMP     #0A9h ; '©'             ; ')'
ROM:7B4B F0 12                               BEQ     loc_7B5F
ROM:7B4D E8                                  INX
ROM:7B4E C9 AF                               CMP     #0AFh ; '¯'             ; '/'
ROM:7B50 F0 0D                               BEQ     loc_7B5F
ROM:7B52 E8                                  INX
ROM:7B53 C9 AD                               CMP     #0ADh ; '­'             ; '-'
ROM:7B55 F0 08                               BEQ     loc_7B5F
ROM:7B57 E8                                  INX
ROM:7B58 C9 BC                               CMP     #0BCh ; '¼'             ; '<'
ROM:7B5A F0 03                               BEQ     loc_7B5F
ROM:7B5C A9 10                               LDA     #10h
ROM:7B5E 60                                  RTS
ROM:7B5F             ; ---------------------------------------------------------------------------
ROM:7B5F
ROM:7B5F             loc_7B5F:                                               ; re-mapped character
ROM:7B5F 8A                                  TXA
ROM:7B60
ROM:7B60             loc_7B60:
ROM:7B60 38                                  SEC
ROM:7B61 E9 7C                               SBC     #7Ch ; '|'              ; 0-base characters
ROM:7B63 60                                  RTS
ROM:7B63             ; End of function remap_character
ROM:7B63
ROM:7B64
ROM:7B64             ; =============== S U B R O U T I N E =======================================
ROM:7B64
ROM:7B64
ROM:7B64             display_character:
ROM:7B64 C9 8D                               CMP     #8Dh ; ''              ; carriage-return?
ROM:7B66 F0 15                               BEQ     cr                      ; yes, go
ROM:7B68 20 2A 7B                            JSR     remap_character
ROM:7B6B A6 87                               LDX     display_char_page
ROM:7B6D E0 40                               CPX     #40h ; '@'              ; page 2?
ROM:7B6F F0 06                               BEQ     loc_7B77                ; yes, skip
ROM:7B71 20 AA 82                            JSR     display_char_pg1        ; switch to page 1
ROM:7B74 E6 85                               INC     col
ROM:7B76 60                                  RTS
ROM:7B77             ; ---------------------------------------------------------------------------
ROM:7B77
ROM:7B77             loc_7B77:
ROM:7B77 20 B0 82                            JSR     display_char_pg2
ROM:7B7A E6 85                               INC     col
ROM:7B7C 60                                  RTS
ROM:7B7D             ; ---------------------------------------------------------------------------
ROM:7B7D
ROM:7B7D             cr:                                                     ; next line
ROM:7B7D E6 86                               INC     row
ROM:7B7F A9 00                               LDA     #0
ROM:7B81 85 85                               STA     col                     ; column=0
ROM:7B83 60                                  RTS
ROM:7B83             ; End of function display_character
ROM:7B83
ROM:7B84             ; ---------------------------------------------------------------------------
ROM:7B84
ROM:7B84             enter_board_editor:
ROM:7B84 A9 00                               LDA     #0
ROM:7B86 85 8E                               STA     score_1e1_1
ROM:7B88 85 8F                               STA     score_1e3_1e2
ROM:7B8A 85 90                               STA     score_1e5_1e4
ROM:7B8C 85 91                               STA     score_1e6
ROM:7B8E A5 36                               LDA     36h
ROM:7B90 85 24                               STA     24h
ROM:7B92 A5 37                               LDA     37h
ROM:7B94 85 25                               STA     25h
ROM:7B96 A9 05                               LDA     #5
ROM:7B98 85 98                               STA     no_lives
ROM:7B9A 85 A7                               STA     attract_mode
ROM:7B9C A5 95                               LDA     paddles_detected
ROM:7B9E 8D 77 7C                            STA     7C77h
ROM:7BA1 A9 CB                               LDA     #0CBh ; 'Ë'
ROM:7BA3 85 95                               STA     paddles_detected
ROM:7BA5 8D 54 C0                            STA     0C054h                  ; select text/graphics page 1
ROM:7BA8 A5 96                               LDA     level_0_based
ROM:7BAA C9 96                               CMP     #150
ROM:7BAC 90 04                               BCC     loc_7BB2
ROM:7BAE A9 00                               LDA     #0
ROM:7BB0 85 96                               STA     level_0_based
ROM:7BB2             ; START OF FUNCTION CHUNK FOR sub_823D
ROM:7BB2
ROM:7BB2             loc_7BB2:
ROM:7BB2 20 51 7A                            JSR     gcls1
ROM:7BB5 A9 20                               LDA     #20h ; ' '              ; hires page 1
ROM:7BB7 85 87                               STA     display_char_page
ROM:7BB9 A9 00                               LDA     #0
ROM:7BBB 85 85                               STA     col                     ; =0
ROM:7BBD 85 86                               STA     row                     ; =0
ROM:7BBF 20 E0 86                            JSR     display_message
ROM:7BBF             ; END OF FUNCTION CHUNK FOR sub_823D
ROM:7BBF             ; ---------------------------------------------------------------------------
ROM:7BC2 A0 A0 CC CF+aLodeRunnerBoardEditor: .db 0A0h, 0A0h, 0CCh, 0CFh, 0C4h, 0C5h, 0A0h, 0D2h, 0D5h ; "  LODE RUNNER BOARD EDITOR\n"
ROM:7BC2 C4 C5 A0 D2+                        .db 0CEh, 0CEh, 0C5h, 0D2h, 0A0h, 0C2h, 0CFh, 0C1h, 0D2h
ROM:7BC2 D5 CE CE C5+                        .db 0C4h, 0A0h, 0C5h, 0C4h, 0C9h, 0D4h, 0CFh, 0D2h, 8Dh
ROM:7BDD AD AD AD AD+aDashes2:               .db 0ADh, 0ADh, 0ADh, 0ADh, 0ADh, 0ADh, 0ADh, 0ADh, 0ADh
ROM:7BDD AD AD AD AD+                        .db 0ADh, 0ADh, 0ADh, 0ADh, 0ADh, 0ADh, 0ADh, 0ADh, 0ADh
ROM:7BDD AD AD AD AD+                        .db 0ADh, 0ADh, 0ADh, 0ADh, 0ADh, 0ADh, 0ADh, 0ADh, 0ADh
ROM:7BDD AD AD AD AD+                        .db 0ADh, 8Dh
ROM:7BFA A0 A0 BC C5+aESCAbortsAnyCommand:   .db 0A0h, 0A0h, 0BCh, 0C5h, 0D3h, 0C3h, 0BEh, 0A0h, 0C1h ; "  <ESC> ABORTS ANY COMMAND\n"
ROM:7BFA D3 C3 BE A0+                        .db 0C2h, 0CFh, 0D2h, 0D4h, 0D3h, 0A0h, 0C1h, 0CEh, 0D9h
ROM:7BFA C1 C2 CF D2+                        .db 0A0h, 0C3h, 0CFh, 0CDh, 0CDh, 0C1h, 0CEh, 0C4h, 8Dh
ROM:7C15             ; ---------------------------------------------------------------------------
ROM:7C15 00                                  BRK
ROM:7C16             ; ---------------------------------------------------------------------------
ROM:7C16             ; START OF FUNCTION CHUNK FOR sub_823D
ROM:7C16
ROM:7C16             loc_7C16:
ROM:7C16 A5 86                               LDA     row
ROM:7C18 C9 09                               CMP     #9
ROM:7C1A B0 96                               BCS     loc_7BB2
ROM:7C1C 20 E0 86                            JSR     display_message
ROM:7C1C             ; ---------------------------------------------------------------------------
ROM:7C1F 8D C3 CF CD+aCommand:               .db 8Dh, 0C3h, 0CFh, 0CDh, 0CDh, 0C1h, 0CEh, 0C4h, 0BEh ; "\nCOMMAND>"
ROM:7C28             ; ---------------------------------------------------------------------------
ROM:7C28 00                                  BRK
ROM:7C28             ; END OF FUNCTION CHUNK FOR sub_823D
ROM:7C29             ; ---------------------------------------------------------------------------
ROM:7C29 20 3D 82                            JSR     sub_823D
ROM:7C2C A2 00                               LDX     #0
ROM:7C2E
ROM:7C2E             loc_7C2E:
ROM:7C2E BC 4D 7C                            LDY     7C4Dh,X
ROM:7C31 F0 08                               BEQ     loc_7C3B
ROM:7C33 DD 4D 7C                            CMP     7C4Dh,X
ROM:7C36 F0 09                               BEQ     loc_7C41
ROM:7C38 E8                                  INX
ROM:7C39 D0 F3                               BNE     loc_7C2E
ROM:7C3B
ROM:7C3B             loc_7C3B:
ROM:7C3B 20 CE 86                            JSR     beep
ROM:7C3E 4C 16 7C                            JMP     loc_7C16
ROM:7C41             ; ---------------------------------------------------------------------------
ROM:7C41
ROM:7C41             loc_7C41:                                               ; entry
ROM:7C41 8A                                  TXA
ROM:7C42 0A                                  ASL     A                       ; word offset
ROM:7C43 AA                                  TAX
ROM:7C44 BD 55 7C                            LDA     (off_7C54+1),X
ROM:7C47 48                                  PHA
ROM:7C48 BD 54 7C                            LDA     off_7C54,X
ROM:7C4B 48                                  PHA
ROM:7C4C 60                                  RTS
ROM:7C4C             ; ---------------------------------------------------------------------------
ROM:7C4D D0                                  .db 0D0h ; Ð
ROM:7C4E C3 C5 CD C9+                        .db 0C3h, 0C5h, 0CDh, 0C9h, 0D3h, 0
ROM:7C54 5F 7C       off_7C54:               .dw off_7C5E+1
ROM:7C56 8D 7C                               .dw loc_7C8B+2                  ; clear level
ROM:7C58 BB 7C                               .dw loc_7CB9+2                  ; edit level
ROM:7C5A D7 7C                               .dw loc_7CD5+2                  ; move level
ROM:7C5C 5C 7D                               .dw loc_7D5A+2                  ; initialize
ROM:7C5E 74 7E       off_7C5E:               .dw loc_7E72+2                  ; clear score file
ROM:7C60             ; ---------------------------------------------------------------------------
ROM:7C60 20 E0 86                            JSR     display_message
ROM:7C60             ; ---------------------------------------------------------------------------
ROM:7C63 8D BE BE D0+aPlayLevel:             .db 8Dh, 0BEh, 0BEh, 0D0h, 0CCh, 0C1h, 0D9h, 0A0h, 0CCh ; "\n>>PLAY LEVEL"
ROM:7C63 CC C1 D9 A0+                        .db 0C5h, 0D6h, 0C5h, 0CCh
ROM:7C70             ; ---------------------------------------------------------------------------
ROM:7C70 00                                  BRK
ROM:7C71             ; ---------------------------------------------------------------------------
ROM:7C71 20 7B 81                            JSR     sub_817B
ROM:7C74 B0 15                               BCS     loc_7C8B
ROM:7C76
ROM:7C76             loc_7C76:
ROM:7C76 A9 00                               LDA     #0
ROM:7C78 85 95                               STA     paddles_detected
ROM:7C7A A9 03                               LDA     #3
ROM:7C7C 85 A7                               STA     attract_mode
ROM:7C7E A9 01                               LDA     #1
ROM:7C80 85 9D                               STA     no_cheat
ROM:7C82 A5 96                               LDA     level_0_based
ROM:7C84 F0 02                               BEQ     loc_7C88
ROM:7C86 46 9D                               LSR     no_cheat
ROM:7C88
ROM:7C88             loc_7C88:
ROM:7C88 4C 56 60                            JMP     zero_score_and_init_game
ROM:7C8B             ; ---------------------------------------------------------------------------
ROM:7C8B
ROM:7C8B             loc_7C8B:
ROM:7C8B 4C 3B 7C                            JMP     loc_7C3B
ROM:7C8E             ; ---------------------------------------------------------------------------
ROM:7C8E 20 E0 86                            JSR     display_message
ROM:7C8E             ; ---------------------------------------------------------------------------
ROM:7C91 8D BE BE C3+aClearLevel:            .db 8Dh, 0BEh, 0BEh, 0C3h, 0CCh, 0C5h, 0C1h, 0D2h, 0A0h ; "\n>>CLEAR LEVEL"
ROM:7C91 CC C5 C1 D2+                        .db 0CCh, 0C5h, 0D6h, 0C5h, 0CCh
ROM:7C9F             ; ---------------------------------------------------------------------------
ROM:7C9F 00                                  BRK
ROM:7CA0             ; ---------------------------------------------------------------------------
ROM:7CA0 20 7B 81                            JSR     sub_817B
ROM:7CA3 B0 14                               BCS     loc_7CB9
ROM:7CA5 20 7F 80                            JSR     sub_807F
ROM:7CA8 A0 00                               LDY     #0
ROM:7CAA 98                                  TYA
ROM:7CAB
ROM:7CAB             loc_7CAB:
ROM:7CAB 99 00 0D                            STA     0D00h,Y
ROM:7CAE C8                                  INY
ROM:7CAF D0 FA                               BNE     loc_7CAB
ROM:7CB1 A9 02                               LDA     #2
ROM:7CB3 20 0E 63                            JSR     read_level_data
ROM:7CB6 4C 16 7C                            JMP     loc_7C16
ROM:7CB9             ; ---------------------------------------------------------------------------
ROM:7CB9
ROM:7CB9             loc_7CB9:
ROM:7CB9 4C 3B 7C                            JMP     loc_7C3B
ROM:7CBC             ; ---------------------------------------------------------------------------
ROM:7CBC 20 E0 86                            JSR     display_message
ROM:7CBC             ; ---------------------------------------------------------------------------
ROM:7CBF 8D BE BE C5+aEditLevel:             .db 8Dh, 0BEh, 0BEh, 0C5h, 0C4h, 0C9h, 0D4h, 0A0h, 0CCh ; "\n>>EDIT LEVEL"
ROM:7CBF C4 C9 D4 A0+                        .db 0C5h, 0D6h, 0C5h, 0CCh
ROM:7CCC             ; ---------------------------------------------------------------------------
ROM:7CCC 00                                  BRK
ROM:7CCD             ; ---------------------------------------------------------------------------
ROM:7CCD 20 7B 81                            JSR     sub_817B
ROM:7CD0 B0 03                               BCS     loc_7CD5
ROM:7CD2 4C 01 7F                            JMP     loc_7F01
ROM:7CD5             ; ---------------------------------------------------------------------------
ROM:7CD5
ROM:7CD5             loc_7CD5:
ROM:7CD5 4C 3B 7C                            JMP     loc_7C3B
ROM:7CD8             ; ---------------------------------------------------------------------------
ROM:7CD8 20 E0 86                            JSR     display_message
ROM:7CD8             ; ---------------------------------------------------------------------------
ROM:7CDB 8D                                  .db 8Dh
ROM:7CDC BE BE CD CF+aMoveLevel:             .db 0BEh, 0BEh, 0CDh, 0CFh, 0D6h, 0C5h, 0A0h, 0CCh, 0C5h ; ">>MOVE LEVEL"
ROM:7CDC D6 C5 A0 CC+                        .db 0D6h, 0C5h, 0CCh
ROM:7CE8             ; ---------------------------------------------------------------------------
ROM:7CE8 00                                  BRK
ROM:7CE9             ; ---------------------------------------------------------------------------
ROM:7CE9 20 7B 81                            JSR     sub_817B
ROM:7CEC B0 6C                               BCS     loc_7D5A
ROM:7CEE 8C 4F 82                            STY     824Fh
ROM:7CF1 20 E0 86                            JSR     display_message
ROM:7CF1             ; ---------------------------------------------------------------------------
ROM:7CF4 A0 D4 CF A0+aToLevel:               .db 0A0h, 0D4h, 0CFh, 0A0h, 0CCh, 0C5h, 0D6h, 0C5h, 0CCh ; " TO LEVEL"
ROM:7CFD             ; ---------------------------------------------------------------------------
ROM:7CFD 00                                  BRK
ROM:7CFE             ; ---------------------------------------------------------------------------
ROM:7CFE 20 7B 81                            JSR     sub_817B
ROM:7D01 B0 57                               BCS     loc_7D5A
ROM:7D03 8C 50 82                            STY     8250h
ROM:7D06 20 E0 86                            JSR     display_message
ROM:7D06             ; ---------------------------------------------------------------------------
ROM:7D09 8D A0 A0 D3+aSourceDiskette:        .db 8Dh, 0A0h, 0A0h, 0D3h, 0CFh, 0D5h, 0D2h, 0C3h, 0C5h ; "\n  Source Diskette"
ROM:7D09 CF D5 D2 C3+                        .db 0A0h, 0C4h, 0C9h, 0D3h, 0CBh, 0C5h, 0D4h, 0D4h, 0C5h
ROM:7D1B             ; ---------------------------------------------------------------------------
ROM:7D1B 00                                  BRK
ROM:7D1C             ; ---------------------------------------------------------------------------
ROM:7D1C 20 3D 82                            JSR     sub_823D
ROM:7D1F 20 7F 80                            JSR     sub_807F
ROM:7D22 AD 4F 82                            LDA     824Fh
ROM:7D25 85 96                               STA     96h
ROM:7D27 A9 01                               LDA     #1
ROM:7D29 20 0E 63                            JSR     read_level_data
ROM:7D2C 20 E0 86                            JSR     display_message
ROM:7D2C             ; ---------------------------------------------------------------------------
ROM:7D2F 8D A0 A0 C4+aDestinationDiskette:   .db 8Dh, 0A0h, 0A0h, 0C4h, 0C5h, 0D3h, 0D4h, 0C9h, 0CEh ; "\n  Destination Diskette"
ROM:7D2F C5 D3 D4 C9+                        .db 0C1h, 0D4h, 0C9h, 0CFh, 0CEh, 0A0h, 0C4h, 0C9h, 0D3h
ROM:7D2F CE C1 D4 C9+                        .db 0CBh, 0C5h, 0D4h, 0D4h, 0C5h
ROM:7D46             ; ---------------------------------------------------------------------------
ROM:7D46 00                                  BRK
ROM:7D47             ; ---------------------------------------------------------------------------
ROM:7D47 20 3D 82                            JSR     sub_823D
ROM:7D4A 20 7F 80                            JSR     sub_807F
ROM:7D4D AD 50 82                            LDA     8250h
ROM:7D50 85 96                               STA     96h
ROM:7D52 A9 02                               LDA     #2
ROM:7D54 20 0E 63                            JSR     read_level_data
ROM:7D57 4C 16 7C                            JMP     loc_7C16
ROM:7D5A             ; ---------------------------------------------------------------------------
ROM:7D5A
ROM:7D5A             loc_7D5A:
ROM:7D5A 4C 3B 7C                            JMP     loc_7C3B
ROM:7D5D             ; ---------------------------------------------------------------------------
ROM:7D5D 20 E0 86                            JSR     display_message
ROM:7D5D             ; ---------------------------------------------------------------------------
ROM:7D60 8D BE BE C9+aInitialize:            .db 8Dh, 0BEh, 0BEh, 0C9h, 0CEh, 0C9h, 0D4h, 0C9h, 0C1h ; "\n>>INITIALIZE\n"
ROM:7D60 CE C9 D4 C9+                        .db 0CCh, 0C9h, 0DAh, 0C5h, 8Dh
ROM:7D6E A0 A0 D4 C8+                        .db 0A0h, 0A0h, 0D4h, 0C8h, 0C9h, 0D3h, 0A0h, 0C6h, 0CFh ; "  THIS FORMATS THE DISKETTE\n"
ROM:7D6E C9 D3 A0 C6+                        .db 0D2h, 0CDh, 0C1h, 0D4h, 0D3h, 0A0h, 0D4h, 0C8h, 0C5h
ROM:7D6E CF D2 CD C1+                        .db 0A0h, 0C4h, 0C9h, 0D3h, 0CBh, 0C5h, 0D4h, 0D4h, 0C5h
ROM:7D6E D4 D3 A0 D4+                        .db 8Dh
ROM:7D8A A0 A0 C6 CF+                        .db 0A0h, 0A0h, 0C6h, 0CFh, 0D2h, 0A0h, 0D5h, 0D3h, 0C5h ; "  FOR USER CREATED LEVELS\n"
ROM:7D8A D2 A0 D5 D3+                        .db 0D2h, 0A0h, 0C3h, 0D2h, 0C5h, 0C1h, 0D4h, 0C5h, 0C4h
ROM:7D8A C5 D2 A0 C3+                        .db 0A0h, 0CCh, 0C5h, 0D6h, 0C5h, 0CCh, 0D3h, 0AEh, 8Dh
ROM:7DA5 A0 A0 A8 C3+                        .db 0A0h, 0A0h, 0A8h, 0C3h, 0C1h, 0D5h, 0D4h, 0C9h, 0CFh ; "   (CAUTION. IT ERASES THE\n"
ROM:7DA5 C1 D5 D4 C9+                        .db 0CEh, 0AEh, 0A0h, 0C9h, 0D4h, 0A0h, 0C5h, 0D2h, 0C1h
ROM:7DA5 CF CE AE A0+                        .db 0D3h, 0C5h, 0D3h, 0A0h, 0D4h, 0C8h, 0C5h, 8Dh
ROM:7DBF A0 A0 A0 C5+                        .db 0A0h, 0A0h, 0A0h, 0C5h, 0CEh, 0D4h, 0C9h, 0D2h, 0C5h ; "  ENTIRE DISKETTE FIRST)\n\n"
ROM:7DBF CE D4 C9 D2+                        .db 0A0h, 0C4h, 0C9h, 0D3h, 0CBh, 0C5h, 0D4h, 0D4h, 0C5h
ROM:7DBF C5 A0 C4 C9+                        .db 0A0h, 0C6h, 0C9h, 0D2h, 0D3h, 0D4h, 0A9h, 8Dh, 8Dh
ROM:7DDA A0 A0 C1 D2+                        .db 0A0h, 0A0h, 0C1h, 0D2h, 0C5h, 0A0h, 0D9h, 0CFh, 0D5h ; " ARE YOU SURE (Y/N) "
ROM:7DDA C5 A0 D9 CF+                        .db 0A0h, 0D3h, 0D5h, 0D2h, 0C5h, 0A0h, 0A8h, 0D9h, 0AFh
ROM:7DDA D5 A0 D3 D5+                        .db 0CEh, 0A9h, 0A0h
ROM:7DEF             ; ---------------------------------------------------------------------------
ROM:7DEF 00                                  BRK
ROM:7DF0             ; ---------------------------------------------------------------------------
ROM:7DF0 20 3D 82                            JSR     sub_823D
ROM:7DF3 C9 D9                               CMP     #0D9h ; 'Ù'
ROM:7DF5 D0 7B                               BNE     loc_7E72
ROM:7DF7 EA                                  NOP
ROM:7DF8 EA                                  NOP
ROM:7DF9 EA                                  NOP
ROM:7DFA EA                                  NOP
ROM:7DFB EA                                  NOP
ROM:7DFC EA                                  NOP
ROM:7DFD EA                                  NOP
ROM:7DFE EA                                  NOP
ROM:7DFF EA                                  NOP
ROM:7E00 EA                                  NOP
ROM:7E01 EA                                  NOP
ROM:7E02 EA                                  NOP
ROM:7E03 EA                                  NOP
ROM:7E04 EA                                  NOP
ROM:7E05 EA                                  NOP
ROM:7E06 A5 96                               LDA     96h
ROM:7E08 48                                  PHA
ROM:7E09 A9 04                               LDA     #4
ROM:7E0B 20 0E 63                            JSR     read_level_data
ROM:7E0E A9 B2                               LDA     #0B2h ; '²'
ROM:7E10 8D F0 B7                            STA     0B7F0h
ROM:7E13 A9 1D                               LDA     #1Dh
ROM:7E15 8D F1 B7                            STA     0B7F1h
ROM:7E18 A9 00                               LDA     #0
ROM:7E1A 8D ED B7                            STA     0B7EDh
ROM:7E1D 8D EC B7                            STA     0B7ECh
ROM:7E20 A9 02                               LDA     #2
ROM:7E22 8D F4 B7                            STA     0B7F4h
ROM:7E25 20 38 63                            JSR     loc_6338
ROM:7E28 A9 E0                               LDA     #0E0h ; 'à'
ROM:7E2A 85 96                               STA     96h
ROM:7E2C A9 01                               LDA     #1
ROM:7E2E 20 0E 63                            JSR     read_level_data
ROM:7E31 A0 37                               LDY     #37h ; '7'
ROM:7E33
ROM:7E33             loc_7E33:
ROM:7E33 B9 51 82                            LDA     8251h,Y
ROM:7E36 99 00 0D                            STA     0D00h,Y
ROM:7E39 88                                  DEY
ROM:7E3A 10 F7                               BPL     loc_7E33
ROM:7E3C A9 02                               LDA     #2
ROM:7E3E 20 0E 63                            JSR     read_level_data
ROM:7E41 A9 EF                               LDA     #0EFh ; 'ï'
ROM:7E43 85 96                               STA     level_0_based
ROM:7E45 A9 01                               LDA     #1
ROM:7E47 20 0E 63                            JSR     read_level_data
ROM:7E4A A0 20                               LDY     #20h ; ' '
ROM:7E4C
ROM:7E4C             loc_7E4C:
ROM:7E4C B9 89 82                            LDA     8289h,Y
ROM:7E4F 99 0B 0D                            STA     0D0Bh,Y
ROM:7E52 88                                  DEY
ROM:7E53 10 F7                               BPL     loc_7E4C
ROM:7E55 A9 02                               LDA     #2
ROM:7E57 20 0E 63                            JSR     read_level_data
ROM:7E5A A9 01                               LDA     #1
ROM:7E5C 20 59 63                            JSR     read_disk_and_chk_sig
ROM:7E5F A0 0A                               LDY     #0Ah
ROM:7E61
ROM:7E61             loc_7E61:
ROM:7E61 B9 A8 63                            LDA     63A8h,Y
ROM:7E64 99 F4 1F                            STA     1FF4h,Y
ROM:7E67 88                                  DEY
ROM:7E68 10 F7                               BPL     loc_7E61
ROM:7E6A A9 02                               LDA     #2
ROM:7E6C 20 59 63                            JSR     read_disk_and_chk_sig
ROM:7E6F 68                                  PLA
ROM:7E70 85 96                               STA     level_0_based
ROM:7E72
ROM:7E72             loc_7E72:
ROM:7E72 4C 16 7C                            JMP     loc_7C16
ROM:7E75             ; ---------------------------------------------------------------------------
ROM:7E75 20 E0 86                            JSR     display_message
ROM:7E75             ; ---------------------------------------------------------------------------
ROM:7E78 8D BE BE C3+aClearScoreFile:        .db 8Dh, 0BEh, 0BEh, 0C3h, 0CCh, 0C5h, 0C1h, 0D2h, 0A0h ; "\n>>CLEAR SCORE FILE\n"
ROM:7E78 CC C5 C1 D2+                        .db 0D3h, 0C3h, 0CFh, 0D2h, 0C5h, 0A0h, 0C6h, 0C9h, 0CCh
ROM:7E78 A0 D3 C3 CF+                        .db 0C5h, 8Dh
ROM:7E8C A0 A0 D4 C8+                        .db 0A0h, 0A0h, 0D4h, 0C8h, 0C9h, 0D3h, 0A0h, 0C3h, 0CCh ; "  THIS CLEARS THE HIGH\n"
ROM:7E8C C9 D3 A0 C3+                        .db 0C5h, 0C1h, 0D2h, 0D3h, 0A0h, 0D4h, 0C8h, 0C5h, 0A0h
ROM:7E8C CC C5 C1 D2+                        .db 0C8h, 0C9h, 0C7h, 0C8h, 8Dh
ROM:7EA3 A0 A0 D3 C3+                        .db 0A0h, 0A0h, 0D3h, 0C3h, 0CFh, 0D2h, 0C5h, 0A0h, 0C6h ; "  SCORE FILE OF ALL\n"
ROM:7EA3 CF D2 C5 A0+                        .db 0C9h, 0CCh, 0C5h, 0A0h, 0CFh, 0C6h, 0A0h, 0C1h, 0CCh
ROM:7EA3 C6 C9 CC C5+                        .db 0CCh, 8Dh
ROM:7EB7 A0 A0 C5 CE+                        .db 0A0h, 0A0h, 0C5h, 0CEh, 0D4h, 0D2h, 0C9h, 0C5h, 0D3h ; "  ENTRIES.\n\n"
ROM:7EB7 D4 D2 C9 C5+                        .db 0AEh, 8Dh, 8Dh
ROM:7EC3 A0 A0 C1 D2+                        .db 0A0h, 0A0h, 0C1h, 0D2h, 0C5h, 0A0h, 0D9h, 0CFh, 0D5h ; "  ARE YOU SURE (Y/N) "
ROM:7EC3 C5 A0 D9 CF+                        .db 0A0h, 0D3h, 0D5h, 0D2h, 0C5h, 0A0h, 0A8h, 0D9h, 0AFh
ROM:7EC3 D5 A0 D3 D5+                        .db 0CEh, 0A9h, 0A0h
ROM:7ED8             ; ---------------------------------------------------------------------------
ROM:7ED8 00                                  BRK
ROM:7ED9             ; ---------------------------------------------------------------------------
ROM:7ED9 20 3D 82                            JSR     sub_823D
ROM:7EDC C9 D9                               CMP     #0D9h ; 'Ù'
ROM:7EDE D0 1E                               BNE     loc_7EFE
ROM:7EE0 A9 01                               LDA     #1
ROM:7EE2 20 59 63                            JSR     read_disk_and_chk_sig
ROM:7EE5 C9 00                               CMP     #0
ROM:7EE7 D0 06                               BNE     loc_7EEF
ROM:7EE9 20 06 81                            JSR     disk_not_lode_runner
ROM:7EEC 4C B2 7B                            JMP     loc_7BB2
ROM:7EEF             ; ---------------------------------------------------------------------------
ROM:7EEF
ROM:7EEF             loc_7EEF:                                               ; number of bytes in high score table
ROM:7EEF A0 4F                               LDY     #79
ROM:7EF1 A9 00                               LDA     #0
ROM:7EF3
ROM:7EF3             loc_7EF3:                                               ; clear table byte
ROM:7EF3 99 00 1F                            STA     1F00h,Y
ROM:7EF6 88                                  DEY                             ; next
ROM:7EF7 10 FA                               BPL     loc_7EF3                ; loop for 80 bytes
ROM:7EF9 A9 02                               LDA     #2
ROM:7EFB 20 59 63                            JSR     read_disk_and_chk_sig
ROM:7EFE
ROM:7EFE             loc_7EFE:
ROM:7EFE 4C 16 7C                            JMP     loc_7C16
ROM:7F01             ; ---------------------------------------------------------------------------
ROM:7F01
ROM:7F01             loc_7F01:
ROM:7F01 20 57 7A                            JSR     gcls2
ROM:7F04 A9 40                               LDA     #40h ; '@'
ROM:7F06 85 87                               STA     display_char_page
ROM:7F08 20 B3 79                            JSR     loc_79B3
ROM:7F0B A9 20                               LDA     #20h ; ' '
ROM:7F0D 85 87                               STA     display_char_page
ROM:7F0F 20 7F 80                            JSR     sub_807F
ROM:7F12 A2 01                               LDX     #1
ROM:7F14 86 AD                               STX     0ADh
ROM:7F16 CA                                  DEX
ROM:7F17 20 38 62                            JSR     init_read_unpack_display_level
ROM:7F1A 90 03                               BCC     loc_7F1F
ROM:7F1C 4C 3B 7C                            JMP     loc_7C3B
ROM:7F1F             ; ---------------------------------------------------------------------------
ROM:7F1F
ROM:7F1F             loc_7F1F:
ROM:7F1F A9 00                               LDA     #0
ROM:7F21 85 85                               STA     col                     ; =0
ROM:7F23 85 86                               STA     row                     ; =0
ROM:7F25             ; START OF FUNCTION CHUNK FOR sub_7F98
ROM:7F25
ROM:7F25             loc_7F25:
ROM:7F25 20 4B 81                            JSR     sub_814B
ROM:7F28 C9 BA                               CMP     #0BAh ; 'º'
ROM:7F2A B0 28                               BCS     loc_7F54
ROM:7F2C C9 B0                               CMP     #0B0h ; '°'
ROM:7F2E 90 24                               BCC     loc_7F54
ROM:7F30 29 0F                               AND     #0Fh
ROM:7F32 85 1E                               STA     msg_char
ROM:7F34 A4 86                               LDY     row
ROM:7F36 B9 05 1C                            LDA     lsb_row_a_tbl,Y
ROM:7F39 85 06                               STA     lsb_row_lda_dyn
ROM:7F3B B9 15 1C                            LDA     msb_row_a_dyn_tbl,Y
ROM:7F3E 85 07                               STA     msb_row_lda_dyn
ROM:7F40 A4 85                               LDY     col
ROM:7F42 A5 1E                               LDA     msg_char
ROM:7F44 51 06                               EOR     (lsb_row_lda_dyn),Y
ROM:7F46 F0 02                               BEQ     loc_7F4A
ROM:7F48 46 AD                               LSR     0ADh
ROM:7F4A
ROM:7F4A             loc_7F4A:
ROM:7F4A A5 1E                               LDA     msg_char
ROM:7F4C 91 06                               STA     (lsb_row_lda_dyn),Y
ROM:7F4E 20 AA 82                            JSR     display_char_pg1
ROM:7F51 4C 25 7F                            JMP     loc_7F25
ROM:7F54             ; ---------------------------------------------------------------------------
ROM:7F54
ROM:7F54             loc_7F54:
ROM:7F54 85 1E                               STA     msg_char
ROM:7F56 A0 FF                               LDY     #0FFh
ROM:7F58
ROM:7F58             loc_7F58:                                               ; next entry
ROM:7F58 C8                                  INY
ROM:7F59 B9 62 81                            LDA     mystery_tbl,Y           ; get entry
ROM:7F5C F0 10                               BEQ     loc_7F6E                ; end of table? yes, exit
ROM:7F5E C5 1E                               CMP     msg_char                ; match?
ROM:7F60 D0 F6                               BNE     loc_7F58                ; no, loop
ROM:7F62 98                                  TYA
ROM:7F63 0A                                  ASL     A                       ; byte to word offset
ROM:7F64 A8                                  TAY
ROM:7F65 B9 6C 81                            LDA     (word_816B+1),Y
ROM:7F68 48                                  PHA
ROM:7F69 B9 6B 81                            LDA     word_816B,Y
ROM:7F6C 48                                  PHA
ROM:7F6D 60                                  RTS                             ; jump to vector fn
ROM:7F6E             ; ---------------------------------------------------------------------------
ROM:7F6E
ROM:7F6E             loc_7F6E:
ROM:7F6E 20 CE 86                            JSR     beep
ROM:7F71 4C 25 7F                            JMP     loc_7F25
ROM:7F71             ; END OF FUNCTION CHUNK FOR sub_7F98
ROM:7F74             ; ---------------------------------------------------------------------------
ROM:7F74
ROM:7F74             vec1_c9:                                                ; top row?
ROM:7F74 A5 86                               LDA     row
ROM:7F76 F0 F6                               BEQ     loc_7F6E                ; yes, exit
ROM:7F78 C6 86                               DEC     row                     ; row above
ROM:7F7A 10 A9                               BPL     loc_7F25                ; always
ROM:7F7C
ROM:7F7C             vec0_ca:                                                ; left-most col?
ROM:7F7C A5 85                               LDA     col
ROM:7F7E F0 EE                               BEQ     loc_7F6E                ; yes, exit
ROM:7F80 C6 85                               DEC     col                     ; column to left
ROM:7F82 10 A1                               BPL     loc_7F25                ; always
ROM:7F84
ROM:7F84             vec2_cb:
ROM:7F84 A5 85                               LDA     col
ROM:7F86 C9 1B                               CMP     #27                     ; right-most col?
ROM:7F88 B0 E4                               BCS     loc_7F6E                ; yes, exit
ROM:7F8A E6 85                               INC     col                     ; column to right
ROM:7F8C D0 97                               BNE     loc_7F25
ROM:7F8E
ROM:7F8E             vec3_cd:
ROM:7F8E A5 86                               LDA     row
ROM:7F90 C9 0F                               CMP     #15                     ; bottom row?
ROM:7F92 B0 DA                               BCS     loc_7F6E                ; yes, exit
ROM:7F94 E6 86                               INC     row                     ; row below
ROM:7F96 D0 8D                               BNE     loc_7F25
ROM:7F98
ROM:7F98             ; =============== S U B R O U T I N E =======================================
ROM:7F98
ROM:7F98
ROM:7F98             sub_7F98:
ROM:7F98
ROM:7F98             ; FUNCTION CHUNK AT ROM:7F25 SIZE 0000004F BYTES
ROM:7F98
ROM:7F98 A5 86                               LDA     row
ROM:7F9A 48                                  PHA
ROM:7F9B A5 85                               LDA     col
ROM:7F9D 48                                  PHA
ROM:7F9E A9 01                               LDA     #1
ROM:7FA0 20 59 63                            JSR     read_disk_and_chk_sig
ROM:7FA3 C9 00                               CMP     #0
ROM:7FA5 D0 06                               BNE     loc_7FAD
ROM:7FA7 20 06 81                            JSR     disk_not_lode_runner
ROM:7FAA 4C C5 7F                            JMP     loc_7FC5
ROM:7FAD             ; ---------------------------------------------------------------------------
ROM:7FAD
ROM:7FAD             loc_7FAD:
ROM:7FAD C9 01                               CMP     #1
ROM:7FAF D0 06                               BNE     loc_7FB7
ROM:7FB1 20 98 80                            JSR     loc_8098
ROM:7FB4 4C C5 7F                            JMP     loc_7FC5
ROM:7FB7             ; ---------------------------------------------------------------------------
ROM:7FB7
ROM:7FB7             loc_7FB7:
ROM:7FB7 20 C7 62                            JSR     sub_62C7
ROM:7FBA 68                                  PLA
ROM:7FBB 85 85                               STA     col
ROM:7FBD 68                                  PLA
ROM:7FBE 85 86                               STA     row
ROM:7FC0 A9 01                               LDA     #1
ROM:7FC2 85 AD                               STA     0ADh
ROM:7FC4 60                                  RTS
ROM:7FC5             ; ---------------------------------------------------------------------------
ROM:7FC5
ROM:7FC5             loc_7FC5:
ROM:7FC5 A9 00                               LDA     #0
ROM:7FC7 85 85                               STA     col
ROM:7FC9 85 86                               STA     row
ROM:7FCB 4C 25 7F                            JMP     loc_7F25
ROM:7FCB             ; End of function sub_7F98
ROM:7FCB
ROM:7FCE             ; ---------------------------------------------------------------------------
ROM:7FCE
ROM:7FCE             vec4_93:
ROM:7FCE 20 98 7F                            JSR     sub_7F98
ROM:7FD1 4C 25 7F                            JMP     loc_7F25
ROM:7FD4             ; ---------------------------------------------------------------------------
ROM:7FD4
ROM:7FD4             vec5_95:
ROM:7FD4 A5 96                               LDA     level_0_based
ROM:7FD6 C9 95                               CMP     #149                    ; last level?
ROM:7FD8
ROM:7FD8             loc_7FD8:                                               ; yes, exit
ROM:7FD8 F0 94                               BEQ     loc_7F6E
ROM:7FDA 20 F8 7F                            JSR     loc_7FF8
ROM:7FDD E6 96                               INC     level_0_based
ROM:7FDF E6 A6                               INC     level                   ; next level
ROM:7FE1 4C 01 7F                            JMP     loc_7F01
ROM:7FE4             ; ---------------------------------------------------------------------------
ROM:7FE4
ROM:7FE4             vec6_88:
ROM:7FE4 A5 96                               LDA     level_0_based
ROM:7FE6 F0 F0                               BEQ     loc_7FD8
ROM:7FE8 20 F8 7F                            JSR     loc_7FF8
ROM:7FEB C6 A6                               DEC     level
ROM:7FED C6 96                               DEC     level_0_based
ROM:7FEF 4C 01 7F                            JMP     loc_7F01
ROM:7FF2             ; ---------------------------------------------------------------------------
ROM:7FF2
ROM:7FF2             vec7_91:
ROM:7FF2 20 F8 7F                            JSR     loc_7FF8
ROM:7FF5 4C B2 7B                            JMP     loc_7BB2
ROM:7FF8             ; ---------------------------------------------------------------------------
ROM:7FF8
ROM:7FF8             loc_7FF8:
ROM:7FF8 A5 AD                               LDA     0ADh
ROM:7FFA D0 79                               BNE     loc_8075
ROM:7FFC 20 57 7A                            JSR     gcls2
ROM:7FFF A9 40                               LDA     #40h ; '@'
ROM:8001 85 87                               STA     display_char_page
ROM:8003 A9 00                               LDA     #0
ROM:8005 85 85                               STA     col
ROM:8007 85 86                               STA     row
ROM:8009 20 E0 86                            JSR     display_message
ROM:8009             ; ---------------------------------------------------------------------------
ROM:800C CC C5 D6 C5+aLevelHasBeenChanged:   .db 0CCh, 0C5h, 0D6h, 0C5h, 0CCh, 0A0h, 0C8h, 0C1h, 0D3h ; "LEVEL HAS BEEN CHANGED BUT\n"
ROM:800C CC A0 C8 C1+                        .db 0A0h, 0C2h, 0C5h, 0C5h, 0CEh, 0A0h, 0C3h, 0C8h, 0C1h
ROM:800C D3 A0 C2 C5+                        .db 0CEh, 0C7h, 0C5h, 0C4h, 0A0h, 0C2h, 0D5h, 0D4h, 8Dh
ROM:8027 CE CF D4 A0+                        .db 0CEh, 0CFh, 0D4h, 0A0h, 0D3h, 0C1h, 0D6h, 0C5h, 0C4h ; "NOT SAVED. DO YOU WISH TO\n"
ROM:8027 D3 C1 D6 C5+                        .db 0AEh, 0A0h, 0C4h, 0CFh, 0A0h, 0D9h, 0CFh, 0D5h, 0A0h
ROM:8027 C4 AE A0 C4+                        .db 0D7h, 0C9h, 0D3h, 0C8h, 0A0h, 0D4h, 0CFh, 8Dh
ROM:8041 D3 C1 D6 C5+                        .db 0D3h, 0C1h, 0D6h, 0C5h, 0A0h, 0CDh, 0CFh, 0C4h, 0C9h ; "SAVE MODIFIED LEVEL (Y/N) "
ROM:8041 A0 CD CF C4+                        .db 0C6h, 0C9h, 0C5h, 0C4h, 0A0h, 0CCh, 0C5h, 0D6h, 0C5h
ROM:8041 C9 C6 C9 C5+                        .db 0CCh, 0A0h, 0A8h, 0D9h, 0AFh, 0CEh, 0A9h, 0A0h
ROM:805B             ; ---------------------------------------------------------------------------
ROM:805B 00                                  BRK
ROM:805C             ; ---------------------------------------------------------------------------
ROM:805C 20 CE 86                            JSR     beep
ROM:805F 8D 55 C0                            STA     0C055h                  ; select text/graphics page 2
ROM:8062
ROM:8062             loc_8062:
ROM:8062 A9 00                               LDA     #0
ROM:8064 20 F3 85                            JSR     blink_char_cursor_wait_key
ROM:8067 8D 10 C0                            STA     0C010h                  ; keyboard strobe
ROM:806A C9 CE                               CMP     #0CEh ; 'Î'
ROM:806C F0 07                               BEQ     loc_8075
ROM:806E C9 D9                               CMP     #0D9h ; 'Ù'
ROM:8070 D0 F0                               BNE     loc_8062
ROM:8072 20 98 7F                            JSR     sub_7F98
ROM:8075
ROM:8075             loc_8075:
ROM:8075 8D 54 C0                            STA     0C054h
ROM:8078 A9 00                               LDA     #0
ROM:807A 85 85                               STA     col
ROM:807C 85 86                               STA     row
ROM:807E 60                                  RTS
ROM:807F
ROM:807F             ; =============== S U B R O U T I N E =======================================
ROM:807F
ROM:807F
ROM:807F             sub_807F:
ROM:807F
ROM:807F             ; FUNCTION CHUNK AT ROM:8105 SIZE 00000001 BYTES
ROM:807F
ROM:807F A9 01                               LDA     #1
ROM:8081 20 59 63                            JSR     read_disk_and_chk_sig
ROM:8084 C9 00                               CMP     #0
ROM:8086 D0 06                               BNE     loc_808E
ROM:8088 20 06 81                            JSR     disk_not_lode_runner
ROM:808B 4C B2 7B                            JMP     loc_7BB2
ROM:808E             ; ---------------------------------------------------------------------------
ROM:808E
ROM:808E             loc_808E:
ROM:808E C9 01                               CMP     #1
ROM:8090 D0 73                               BNE     locret_8105
ROM:8092 20 98 80                            JSR     loc_8098
ROM:8095 4C B2 7B                            JMP     loc_7BB2
ROM:8095             ; End of function sub_807F
ROM:8095
ROM:8098             ; ---------------------------------------------------------------------------
ROM:8098
ROM:8098             loc_8098:
ROM:8098 20 57 7A                            JSR     gcls2
ROM:809B A9 40                               LDA     #40h ; '@'
ROM:809D 85 87                               STA     display_char_page
ROM:809F A9 00                               LDA     #0
ROM:80A1 85 85                               STA     col
ROM:80A3 85 86                               STA     row
ROM:80A5 20 E0 86                            JSR     display_message
ROM:80A5             ; ---------------------------------------------------------------------------
ROM:80A8 D5 D3 C5 D2+aUserNotAllowedTo:      .db 0D5h, 0D3h, 0C5h, 0D2h, 0A0h, 0CEh, 0CFh, 0D4h, 0A0h ; "USER NOT ALLOWED TO\n"
ROM:80A8 A0 CE CF D4+                        .db 0C1h, 0CCh, 0CCh, 0CFh, 0D7h, 0C5h, 0C4h, 0A0h, 0D4h
ROM:80A8 A0 C1 CC CC+                        .db 0CFh, 8Dh
ROM:80BC CD C1 CE C9+                        .db 0CDh, 0C1h, 0CEh, 0C9h, 0D0h, 0D5h, 0CCh, 0C1h, 0D4h ; "MANIPULATE MASTER DISKETTE."
ROM:80BC D0 D5 CC C1+                        .db 0C5h, 0A0h, 0CDh, 0C1h, 0D3h, 0D4h, 0C5h, 0D2h, 0A0h
ROM:80BC D4 C5 A0 CD+                        .db 0C4h, 0C9h, 0D3h, 0CBh, 0C5h, 0D4h, 0D4h, 0C5h, 0AEh
ROM:80D7             ; ---------------------------------------------------------------------------
ROM:80D7 00                                  BRK
ROM:80D8             ; ---------------------------------------------------------------------------
ROM:80D8
ROM:80D8             hit_a_key_to_continue:
ROM:80D8 20 E0 86                            JSR     display_message
ROM:80D8             ; ---------------------------------------------------------------------------
ROM:80DB 8D 8D C8 C9+aHitAKeyToContinue:     .db 8Dh, 8Dh, 0C8h, 0C9h, 0D4h, 0A0h, 0C1h, 0A0h, 0CBh, 0C5h ; "\n\nHIT A KEY TO CONTINUE "
ROM:80DB D4 A0 C1 A0+                        .db 0D9h, 0A0h, 0D4h, 0CFh, 0A0h, 0C3h, 0CFh, 0CEh, 0D4h
ROM:80DB CB C5 D9 A0+                        .db 0C9h, 0CEh, 0D5h, 0C5h, 0A0h
ROM:80F3             ; ---------------------------------------------------------------------------
ROM:80F3 00                                  BRK
ROM:80F4             ; ---------------------------------------------------------------------------
ROM:80F4 20 CE 86                            JSR     beep
ROM:80F7 8D 55 C0                            STA     0C055h                  ; select text/graphics page 2
ROM:80FA A9 00                               LDA     #0
ROM:80FC 20 F3 85                            JSR     blink_char_cursor_wait_key
ROM:80FF 8D 10 C0                            STA     0C010h                  ; keyboard strobe
ROM:8102 8D 54 C0                            STA     0C054h                  ; select text/graphics page 1
ROM:8105             ; START OF FUNCTION CHUNK FOR sub_807F
ROM:8105
ROM:8105             locret_8105:
ROM:8105 60                                  RTS
ROM:8105             ; END OF FUNCTION CHUNK FOR sub_807F
ROM:8106             ; ---------------------------------------------------------------------------
ROM:8106
ROM:8106             disk_not_lode_runner:
ROM:8106 20 57 7A                            JSR     gcls2
ROM:8109 A9 40                               LDA     #40h ; '@'              ; hires page 2
ROM:810B 85 87                               STA     display_char_page
ROM:810D A9 00                               LDA     #0
ROM:810F 85 85                               STA     col
ROM:8111 85 86                               STA     row
ROM:8113 20 E0 86                            JSR     display_message
ROM:8113             ; ---------------------------------------------------------------------------
ROM:8116 C4 C9 D3 CB+aDisketteInDriveIsNotA: .db 0C4h, 0C9h, 0D3h, 0CBh, 0C5h, 0D4h, 0D4h, 0C5h, 0A0h ; "DISKETTE IN DRIVE IS NOT A\n"
ROM:8116 C5 D4 D4 C5+                        .db 0C9h, 0CEh, 0A0h, 0C4h, 0D2h, 0C9h, 0D6h, 0C5h, 0A0h
ROM:8116 A0 C9 CE A0+                        .db 0C9h, 0D3h, 0A0h, 0CEh, 0CFh, 0D4h, 0A0h, 0C1h, 8Dh
ROM:8131 CC CF C4 C5+                        .db 0CCh, 0CFh, 0C4h, 0C5h, 0A0h, 0D2h, 0D5h, 0CEh, 0CEh ; "LODE RUNNER DATA DISK."
ROM:8131 A0 D2 D5 CE+                        .db 0C5h, 0D2h, 0A0h, 0C4h, 0C1h, 0D4h, 0C1h, 0A0h, 0C4h
ROM:8131 CE C5 D2 A0+                        .db 0C9h, 0D3h, 0CBh, 0AEh
ROM:8147             ; ---------------------------------------------------------------------------
ROM:8147 00                                  BRK
ROM:8148             ; ---------------------------------------------------------------------------
ROM:8148 4C D8 80                            JMP     hit_a_key_to_continue
ROM:814B
ROM:814B             ; =============== S U B R O U T I N E =======================================
ROM:814B
ROM:814B
ROM:814B             sub_814B:
ROM:814B A4 86                               LDY     row
ROM:814D B9 05 1C                            LDA     lsb_row_a_tbl,Y
ROM:8150 85 06                               STA     lsb_row_lda_dyn
ROM:8152 B9 15 1C                            LDA     msb_row_a_dyn_tbl,Y
ROM:8155 85 07                               STA     msb_row_lda_dyn
ROM:8157 A4 85                               LDY     col
ROM:8159 B1 06                               LDA     (lsb_row_lda_dyn),Y
ROM:815B 20 00 87                            JSR     blink_char_and_wait_for_key
ROM:815E 8D 10 C0                            STA     0C010h                  ; keyboard strobe
ROM:8161 60                                  RTS
ROM:8161             ; End of function sub_814B
ROM:8161
ROM:8161             ; ---------------------------------------------------------------------------
ROM:8162 CA C9 CB CD+mystery_tbl:            .db 0CAh, 0C9h, 0CBh, 0CDh, 93h, 95h, 88h, 91h
ROM:816A             ; ---------------------------------------------------------------------------
ROM:816A 00                                  BRK                             ; J,I,K,M,?,?,?,?
ROM:816A             ; ---------------------------------------------------------------------------
ROM:816B 7B 7F       word_816B:              .dw 7F7Bh
ROM:816D 73 7F                               .dw 7F73h
ROM:816F 83 7F                               .dw 7F83h
ROM:8171 8D 7F                               .dw 7F8Dh
ROM:8173 CD 7F                               .dw 7FCDh
ROM:8175 D3 7F                               .dw 7FD3h
ROM:8177 E3 7F                               .dw 7FE3h
ROM:8179 F1 7F                               .dw 7FF1h
ROM:817B
ROM:817B             ; =============== S U B R O U T I N E =======================================
ROM:817B
ROM:817B
ROM:817B             sub_817B:
ROM:817B A4 96                               LDY     level_0_based           ; keyboard entry?
ROM:817D C8                                  INY
ROM:817E 98                                  TYA
ROM:817F 20 F8 7A                            JSR     cnv_byte_to_3_digits
ROM:8182 A5 85                               LDA     col
ROM:8184 8D 4E 82                            STA     824Eh
ROM:8187 A0 00                               LDY     #0
ROM:8189
ROM:8189             loc_8189:
ROM:8189 B9 89 00                            LDA     89h,Y
ROM:818C 8C 4D 82                            STY     824Dh
ROM:818F 20 15 7B                            JSR     display_digit
ROM:8192 AC 4D 82                            LDY     824Dh
ROM:8195 C8                                  INY
ROM:8196 C0 03                               CPY     #3
ROM:8198 90 EF                               BCC     loc_8189
ROM:819A AD 4E 82                            LDA     824Eh
ROM:819D 85 85                               STA     col
ROM:819F A0 00                               LDY     #0
ROM:81A1 8C 4D 82                            STY     824Dh
ROM:81A4
ROM:81A4             loc_81A4:
ROM:81A4 AE 4D 82                            LDX     824Dh
ROM:81A7 B5 89                               LDA     89h,X
ROM:81A9 18                                  CLC
ROM:81AA 69 3B                               ADC     #3Bh ; ';'
ROM:81AC 20 00 87                            JSR     blink_char_and_wait_for_key
ROM:81AF 8D 10 C0                            STA     0C010h
ROM:81B2 C9 8D                               CMP     #8Dh ; ''
ROM:81B4 F0 57                               BEQ     loc_820D
ROM:81B6 C9 88                               CMP     #88h ; ''
ROM:81B8 D0 0D                               BNE     loc_81C7
ROM:81BA AE 4D 82                            LDX     824Dh
ROM:81BD F0 48                               BEQ     loc_8207
ROM:81BF CE 4D 82                            DEC     824Dh
ROM:81C2 C6 85                               DEC     col
ROM:81C4 4C A4 81                            JMP     loc_81A4
ROM:81C7             ; ---------------------------------------------------------------------------
ROM:81C7
ROM:81C7             loc_81C7:
ROM:81C7 C9 95                               CMP     #95h ; ''
ROM:81C9 D0 0F                               BNE     loc_81DA
ROM:81CB AE 4D 82                            LDX     824Dh
ROM:81CE E0 02                               CPX     #2
ROM:81D0 F0 35                               BEQ     loc_8207
ROM:81D2 E6 85                               INC     col
ROM:81D4 EE 4D 82                            INC     824Dh
ROM:81D7 4C A4 81                            JMP     loc_81A4
ROM:81DA             ; ---------------------------------------------------------------------------
ROM:81DA
ROM:81DA             loc_81DA:
ROM:81DA C9 9B                               CMP     #9Bh ; ''
ROM:81DC D0 03                               BNE     loc_81E1
ROM:81DE 4C 16 7C                            JMP     loc_7C16
ROM:81E1             ; ---------------------------------------------------------------------------
ROM:81E1
ROM:81E1             loc_81E1:
ROM:81E1 C9 B0                               CMP     #0B0h ; '°'
ROM:81E3 90 22                               BCC     loc_8207
ROM:81E5 C9 BA                               CMP     #0BAh ; 'º'
ROM:81E7 B0 1E                               BCS     loc_8207
ROM:81E9 38                                  SEC
ROM:81EA E9 B0                               SBC     #0B0h ; '°'
ROM:81EC AC 4D 82                            LDY     824Dh
ROM:81EF 99 89 00                            STA     89h,Y
ROM:81F2 20 15 7B                            JSR     display_digit
ROM:81F5 EE 4D 82                            INC     824Dh
ROM:81F8 AD 4D 82                            LDA     824Dh
ROM:81FB C9 03                               CMP     #3
ROM:81FD 90 A5                               BCC     loc_81A4
ROM:81FF CE 4D 82                            DEC     824Dh
ROM:8202 C6 85                               DEC     col
ROM:8204 4C A4 81                            JMP     loc_81A4
ROM:8207             ; ---------------------------------------------------------------------------
ROM:8207
ROM:8207             loc_8207:
ROM:8207 20 CE 86                            JSR     beep
ROM:820A 4C A4 81                            JMP     loc_81A4
ROM:820D             ; ---------------------------------------------------------------------------
ROM:820D
ROM:820D             loc_820D:                                               ; translates level to ascii??
ROM:820D AD 4E 82                            LDA     824Eh
ROM:8210 18                                  CLC
ROM:8211 69 03                               ADC     #3
ROM:8213 85 85                               STA     col
ROM:8215 A9 00                               LDA     #0
ROM:8217 A6 89                               LDX     89h
ROM:8219 F0 08                               BEQ     loc_8223
ROM:821B 18                                  CLC
ROM:821C
ROM:821C             loc_821C:
ROM:821C 69 64                               ADC     #100
ROM:821E B0 1C                               BCS     locret_823C
ROM:8220 CA                                  DEX
ROM:8221 D0 F9                               BNE     loc_821C
ROM:8223
ROM:8223             loc_8223:
ROM:8223 A6 8A                               LDX     8Ah
ROM:8225 F0 08                               BEQ     loc_822F
ROM:8227 18                                  CLC
ROM:8228
ROM:8228             loc_8228:
ROM:8228 69 0A                               ADC     #10
ROM:822A B0 10                               BCS     locret_823C
ROM:822C CA                                  DEX
ROM:822D D0 F9                               BNE     loc_8228
ROM:822F
ROM:822F             loc_822F:
ROM:822F 18                                  CLC
ROM:8230 65 8B                               ADC     units
ROM:8232 B0 08                               BCS     locret_823C
ROM:8234 85 A6                               STA     level
ROM:8236 A8                                  TAY
ROM:8237 88                                  DEY
ROM:8238 84 96                               STY     level_0_based
ROM:823A C0 96                               CPY     #150                    ; last level?
ROM:823C
ROM:823C             locret_823C:
ROM:823C 60                                  RTS
ROM:823C             ; End of function sub_817B
ROM:823C
ROM:823D
ROM:823D             ; =============== S U B R O U T I N E =======================================
ROM:823D
ROM:823D
ROM:823D             sub_823D:
ROM:823D
ROM:823D             ; FUNCTION CHUNK AT ROM:7BB2 SIZE 00000010 BYTES
ROM:823D             ; FUNCTION CHUNK AT ROM:7C16 SIZE 00000013 BYTES
ROM:823D
ROM:823D A9 00                               LDA     #0
ROM:823F 20 00 87                            JSR     blink_char_and_wait_for_key
ROM:8242 8D 10 C0                            STA     0C010h                  ; keyboard strobe
ROM:8245 C9 9B                               CMP     #9Bh ; ''
ROM:8247 D0 03                               BNE     locret_824C
ROM:8249 4C 16 7C                            JMP     loc_7C16
ROM:824C             ; ---------------------------------------------------------------------------
ROM:824C
ROM:824C             locret_824C:
ROM:824C 60                                  RTS
ROM:824C             ; End of function sub_823D
ROM:824C
ROM:824C             ; ---------------------------------------------------------------------------
ROM:824D 60          initial_cnt:            .db 60h
ROM:824E 85                                  .db 85h
ROM:824F 0F                                  .db 0Fh
ROM:8250 60                                  .db 60h
ROM:8251 02 11 0F 04+                        .db 2, 11h, 0Fh, 4, 0, 0, 0FEh, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8251 00 00 FE 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8251 00 00 00 00+                        .db 0, 0, 0, 0, 0, 7Ah, 0, 0, 0, 0, 0, 0, 0, 0, 0FFh, 0FFh
ROM:8251 00 00 00 00+                        .db 0, 0, 23h, 0Fh, 0, 1, 22h, 0Fh, 88h, 88h, 88h, 88h, 88h
ROM:8251 00 00 00 00+                        .db 88h, 88h, 88h
ROM:8293 CC CF C4 C5+aLodeRunnerDataDisk:    .db 0CCh, 0CFh, 0C4h, 0C5h, 0A0h, 0D2h, 0D5h, 0CEh, 0CEh ; "LODE RUNNER DATA DISK  "
ROM:8293 A0 D2 D5 CE+                        .db 0C5h, 0D2h, 0A0h, 0C4h, 0C1h, 0D4h, 0C1h, 0A0h, 0C4h
ROM:8293 CE C5 D2 A0+                        .db 0C9h, 0D3h, 0CBh, 0A0h, 0A0h
ROM:82AA
ROM:82AA             ; =============== S U B R O U T I N E =======================================
ROM:82AA
ROM:82AA
ROM:82AA             display_char_pg1:
ROM:82AA 85 1E                               STA     msg_char                ; store character
ROM:82AC A9 20                               LDA     #20h ; ' '              ; hires page 1
ROM:82AE D0 04                               BNE     loc_82B4                ; always
ROM:82AE             ; End of function display_char_pg1
ROM:82AE
ROM:82B0
ROM:82B0             ; =============== S U B R O U T I N E =======================================
ROM:82B0
ROM:82B0
ROM:82B0             display_char_pg2:
ROM:82B0 85 1E                               STA     msg_char
ROM:82B2 A9 40                               LDA     #40h ; '@'              ; hires page 2
ROM:82B4
ROM:82B4             loc_82B4:
ROM:82B4 85 1F                               STA     hires_page_msb_1
ROM:82B6 A4 86                               LDY     row
ROM:82B8 20 5D 88                            JSR     calc_colx5_scanline
ROM:82BB 84 1B                               STY     scanline
ROM:82BD A6 85                               LDX     col
ROM:82BF 20 68 88                            JSR     calc_col_addr_shift
ROM:82C2 85 1C                               STA     col_addr_offset
ROM:82C4 86 71                               STX     col_pixel_shift
ROM:82C6 BD 28 83                            LDA     left_char_masks,X
ROM:82C9 85 50                               STA     lchar_mask
ROM:82CB BD 2F 83                            LDA     right_char_masks,X
ROM:82CE 85 51                               STA     rchar_mask
ROM:82D0 20 38 84                            JSR     render_char_in_buffer
ROM:82D3 A9 0B                               LDA     #11                     ; 11 scanlines/character
ROM:82D5 85 1D                               STA     scanline_cnt
ROM:82D7 A2 00                               LDX     #0
ROM:82D9 A5 71                               LDA     col_pixel_shift
ROM:82DB C9 05                               CMP     #5                      ; pixel offset > 5?
ROM:82DD B0 22                               BCS     render_3_byte_char_to_video ; yes, go
ROM:82DF
ROM:82DF             render_2_byte_char_to_video:
ROM:82DF A4 1B                               LDY     scanline
ROM:82E1 20 31 7A                            JSR     calc_line_addr_for_scanline
ROM:82E4 A4 1C                               LDY     col_addr_offset
ROM:82E6 B1 0C                               LDA     (lsb_line_addr_pg1),Y   ; get video byte
ROM:82E8 25 50                               AND     lchar_mask
ROM:82EA 15 DF                               ORA     char_render_buf,X
ROM:82EC 91 0C                               STA     (lsb_line_addr_pg1),Y   ; update video byte
ROM:82EE E8                                  INX                             ; next render buffer addr
ROM:82EF C8                                  INY                             ; next video addr
ROM:82F0 B1 0C                               LDA     (lsb_line_addr_pg1),Y   ; get video byte
ROM:82F2 25 51                               AND     rchar_mask
ROM:82F4 15 DF                               ORA     char_render_buf,X
ROM:82F6 91 0C                               STA     (lsb_line_addr_pg1),Y   ; update video byte
ROM:82F8 E8                                  INX                             ; skip unused 3rd byte
ROM:82F9 E8                                  INX                             ; next render buffer addr
ROM:82FA E6 1B                               INC     scanline
ROM:82FC C6 1D                               DEC     scanline_cnt            ; done character?
ROM:82FE D0 DF                               BNE     render_2_byte_char_to_video ; no, loop
ROM:8300 60                                  RTS
ROM:8301             ; ---------------------------------------------------------------------------
ROM:8301
ROM:8301             render_3_byte_char_to_video:
ROM:8301 A4 1B                               LDY     scanline
ROM:8303 20 31 7A                            JSR     calc_line_addr_for_scanline
ROM:8306 A4 1C                               LDY     col_addr_offset
ROM:8308 B1 0C                               LDA     (lsb_line_addr_pg1),Y   ; get video byte
ROM:830A 25 50                               AND     lchar_mask
ROM:830C 15 DF                               ORA     char_render_buf,X
ROM:830E 91 0C                               STA     (lsb_line_addr_pg1),Y   ; update video byte
ROM:8310 E8                                  INX                             ; next render buffer addr
ROM:8311 C8                                  INY                             ; next video addr
ROM:8312 B5 DF                               LDA     char_render_buf,X
ROM:8314 91 0C                               STA     (lsb_line_addr_pg1),Y   ; update video byte
ROM:8316 E8                                  INX                             ; next render buffer addr
ROM:8317 C8                                  INY                             ; next video addr
ROM:8318 B1 0C                               LDA     (lsb_line_addr_pg1),Y   ; get video byte
ROM:831A 25 51                               AND     rchar_mask
ROM:831C 15 DF                               ORA     char_render_buf,X
ROM:831E 91 0C                               STA     (lsb_line_addr_pg1),Y   ; update video byte
ROM:8320 E8                                  INX                             ; next render buffer addr
ROM:8321 E6 1B                               INC     scanline
ROM:8323 C6 1D                               DEC     scanline_cnt            ; done character?
ROM:8325 D0 DA                               BNE     render_3_byte_char_to_video ; no, loop
ROM:8327 60                                  RTS
ROM:8327             ; End of function display_char_pg2
ROM:8327
ROM:8327             ; ---------------------------------------------------------------------------
ROM:8328 00 01 03 07+left_char_masks:        .db 0, 1, 3, 7, 0Fh, 1Fh, 3Fh
ROM:832F F8 F0 E0 C0+right_char_masks:       .db 0F8h, 0F0h, 0E0h, 0C0h, 80h, 0FEh, 0FCh
ROM:8336
ROM:8336             ; =============== S U B R O U T I N E =======================================
ROM:8336
ROM:8336
ROM:8336             wipe_char:
ROM:8336 84 1B                               STY     scanline
ROM:8338 85 1E                               STA     msg_char
ROM:833A 20 72 88                            JSR     calc_addr_shift_for_x   ; address offset and shift
ROM:833D 85 1C                               STA     col_addr_offset
ROM:833F 86 71                               STX     col_pixel_shift
ROM:8341 20 38 84                            JSR     render_char_in_buffer
ROM:8344 A2 0B                               LDX     #11                     ; 11 scanlines/character
ROM:8346 86 1D                               STX     scanline_cnt
ROM:8348 A2 00                               LDX     #0
ROM:834A A5 71                               LDA     col_pixel_shift
ROM:834C C9 05                               CMP     #5                      ; >5?
ROM:834E B0 26                               BCS     wipe_3_byte_char_from_video ; yes, go
ROM:8350
ROM:8350             wipe_2_byte_char_from_video:
ROM:8350 A4 1B                               LDY     scanline
ROM:8352 20 3E 7A                            JSR     get_line_addr_pgs_1_2
ROM:8355 A4 1C                               LDY     col_addr_offset
ROM:8357 B5 DF                               LDA     char_render_buf,X
ROM:8359 49 7F                               EOR     #7Fh ; ''              ; invert character data
ROM:835B 31 0C                               AND     (lsb_line_addr_pg1),Y   ; wipe character pixels
ROM:835D 11 0E                               ORA     (lsb_line_addr_pg2),Y   ; restore background
ROM:835F 91 0C                               STA     (lsb_line_addr_pg1),Y   ; update video
ROM:8361 E8                                  INX                             ; next render buffer addr
ROM:8362 C8                                  INY                             ; next video addr
ROM:8363 B5 DF                               LDA     char_render_buf,X
ROM:8365 49 7F                               EOR     #7Fh ; ''              ; invert character data
ROM:8367 31 0C                               AND     (lsb_line_addr_pg1),Y   ; wipe character pixels
ROM:8369 11 0E                               ORA     (lsb_line_addr_pg2),Y   ; restore background
ROM:836B 91 0C                               STA     (lsb_line_addr_pg1),Y   ; update video
ROM:836D E8                                  INX
ROM:836E E8                                  INX                             ; next render buffer addr
ROM:836F E6 1B                               INC     scanline
ROM:8371 C6 1D                               DEC     scanline_cnt            ; done character?
ROM:8373 D0 DB                               BNE     wipe_2_byte_char_from_video ; no, loop
ROM:8375 60                                  RTS
ROM:8376             ; ---------------------------------------------------------------------------
ROM:8376
ROM:8376             wipe_3_byte_char_from_video:
ROM:8376 A4 1B                               LDY     scanline
ROM:8378 20 3E 7A                            JSR     get_line_addr_pgs_1_2
ROM:837B A4 1C                               LDY     col_addr_offset
ROM:837D B5 DF                               LDA     char_render_buf,X
ROM:837F 49 7F                               EOR     #7Fh ; ''              ; invert character data
ROM:8381 31 0C                               AND     (lsb_line_addr_pg1),Y   ; wipe character pixels
ROM:8383 11 0E                               ORA     (lsb_line_addr_pg2),Y   ; restore background
ROM:8385 91 0C                               STA     (lsb_line_addr_pg1),Y   ; update video
ROM:8387 E8                                  INX                             ; next render buffer addr
ROM:8388 C8                                  INY                             ; next video addr
ROM:8389 B5 DF                               LDA     char_render_buf,X
ROM:838B 49 7F                               EOR     #7Fh ; ''              ; invert character data
ROM:838D 31 0C                               AND     (lsb_line_addr_pg1),Y   ; wipe character pixels
ROM:838F 11 0E                               ORA     (lsb_line_addr_pg2),Y   ; restore background
ROM:8391 91 0C                               STA     (lsb_line_addr_pg1),Y   ; updte video
ROM:8393 E8                                  INX                             ; next render buffer addr
ROM:8394 C8                                  INY                             ; next video addr
ROM:8395 B5 DF                               LDA     char_render_buf,X
ROM:8397 49 7F                               EOR     #7Fh ; ''              ; invert character data
ROM:8399 31 0C                               AND     (lsb_line_addr_pg1),Y   ; wipe character pixels
ROM:839B 11 0E                               ORA     (lsb_line_addr_pg2),Y   ; restore background
ROM:839D 91 0C                               STA     (lsb_line_addr_pg1),Y   ; update video
ROM:839F E8                                  INX                             ; next render buffer addr
ROM:83A0 E6 1B                               INC     scanline
ROM:83A2 C6 1D                               DEC     scanline_cnt            ; done character?
ROM:83A4 D0 D0                               BNE     wipe_3_byte_char_from_video ; no, loop
ROM:83A6 60                                  RTS
ROM:83A6             ; End of function wipe_char
ROM:83A6
ROM:83A7
ROM:83A7             ; =============== S U B R O U T I N E =======================================
ROM:83A7
ROM:83A7
ROM:83A7             display_transparent_char:
ROM:83A7 84 1B                               STY     scanline
ROM:83A9 85 1E                               STA     msg_char
ROM:83AB 20 72 88                            JSR     calc_addr_shift_for_x
ROM:83AE 85 1C                               STA     col_addr_offset
ROM:83B0 86 71                               STX     col_pixel_shift
ROM:83B2 20 38 84                            JSR     render_char_in_buffer
ROM:83B5 A9 0B                               LDA     #11                     ; 11 scanlines to display
ROM:83B7 85 1D                               STA     scanline_cnt
ROM:83B9 A2 00                               LDX     #0
ROM:83BB 86 52                               STX     collision_detect
ROM:83BD A5 71                               LDA     col_pixel_shift
ROM:83BF C9 05                               CMP     #5                      ; >5?
ROM:83C1 B0 32                               BCS     OR_3_byte_char_to_video ; yes, continue
ROM:83C3
ROM:83C3             OR_2_byte_char_to_video:
ROM:83C3 A4 1B                               LDY     scanline
ROM:83C5 20 3E 7A                            JSR     get_line_addr_pgs_1_2
ROM:83C8 A4 1C                               LDY     col_addr_offset
ROM:83CA B1 0C                               LDA     (lsb_line_addr_pg1),Y   ; get video byte
ROM:83CC 51 0E                               EOR     (lsb_line_addr_pg2),Y
ROM:83CE 35 DF                               AND     char_render_buf,X
ROM:83D0 05 52                               ORA     collision_detect
ROM:83D2 85 52                               STA     collision_detect
ROM:83D4 B5 DF                               LDA     char_render_buf,X       ; get character data byte
ROM:83D6 11 0C                               ORA     (lsb_line_addr_pg1),Y   ; OR with video byte
ROM:83D8 91 0C                               STA     (lsb_line_addr_pg1),Y   ; update video
ROM:83DA E8                                  INX                             ; next render buffer addr
ROM:83DB C8                                  INY                             ; next video addr
ROM:83DC B1 0C                               LDA     (lsb_line_addr_pg1),Y
ROM:83DE 51 0E                               EOR     (lsb_line_addr_pg2),Y
ROM:83E0 35 DF                               AND     char_render_buf,X
ROM:83E2 05 52                               ORA     collision_detect
ROM:83E4 85 52                               STA     collision_detect
ROM:83E6 B5 DF                               LDA     char_render_buf,X       ; get character data byte
ROM:83E8 11 0C                               ORA     (lsb_line_addr_pg1),Y   ; OR with video byte
ROM:83EA 91 0C                               STA     (lsb_line_addr_pg1),Y   ; update video
ROM:83EC E8                                  INX
ROM:83ED E8                                  INX                             ; next render buffer addr
ROM:83EE E6 1B                               INC     scanline
ROM:83F0 C6 1D                               DEC     scanline_cnt            ; done character?
ROM:83F2 D0 CF                               BNE     OR_2_byte_char_to_video ; no, loop
ROM:83F4 60                                  RTS
ROM:83F5             ; ---------------------------------------------------------------------------
ROM:83F5
ROM:83F5             OR_3_byte_char_to_video:
ROM:83F5 A4 1B                               LDY     scanline
ROM:83F7 20 3E 7A                            JSR     get_line_addr_pgs_1_2
ROM:83FA A4 1C                               LDY     col_addr_offset
ROM:83FC B1 0C                               LDA     (lsb_line_addr_pg1),Y
ROM:83FE 51 0E                               EOR     (lsb_line_addr_pg2),Y
ROM:8400 35 DF                               AND     char_render_buf,X
ROM:8402 05 52                               ORA     collision_detect
ROM:8404 85 52                               STA     collision_detect
ROM:8406 B5 DF                               LDA     char_render_buf,X       ; get character data byte
ROM:8408 11 0C                               ORA     (lsb_line_addr_pg1),Y   ; OR with video byte
ROM:840A 91 0C                               STA     (lsb_line_addr_pg1),Y   ; update video
ROM:840C E8                                  INX                             ; next render buffer addr
ROM:840D C8                                  INY                             ; next video addr
ROM:840E B1 0C                               LDA     (lsb_line_addr_pg1),Y
ROM:8410 51 0E                               EOR     (lsb_line_addr_pg2),Y
ROM:8412 35 DF                               AND     char_render_buf,X
ROM:8414 05 52                               ORA     collision_detect
ROM:8416 85 52                               STA     collision_detect
ROM:8418 B5 DF                               LDA     char_render_buf,X       ; get character data byte
ROM:841A 11 0C                               ORA     (lsb_line_addr_pg1),Y   ; OR with video byte
ROM:841C 91 0C                               STA     (lsb_line_addr_pg1),Y   ; update video
ROM:841E E8                                  INX                             ; next render buffer addr
ROM:841F C8                                  INY                             ; next video addr
ROM:8420 B1 0C                               LDA     (lsb_line_addr_pg1),Y   ; get character data byte
ROM:8422 51 0E                               EOR     (lsb_line_addr_pg2),Y
ROM:8424 35 DF                               AND     char_render_buf,X
ROM:8426 05 52                               ORA     collision_detect
ROM:8428 85 52                               STA     collision_detect
ROM:842A B5 DF                               LDA     char_render_buf,X       ; get video data byte
ROM:842C 11 0C                               ORA     (lsb_line_addr_pg1),Y   ; OR with video byte
ROM:842E 91 0C                               STA     (lsb_line_addr_pg1),Y   ; update video
ROM:8430 E8                                  INX                             ; next render buffer addr
ROM:8431 E6 1B                               INC     scanline
ROM:8433 C6 1D                               DEC     scanline_cnt            ; done character?
ROM:8435 D0 BE                               BNE     OR_3_byte_char_to_video ; no, loop
ROM:8437 60                                  RTS
ROM:8437             ; End of function display_transparent_char
ROM:8437
ROM:8438
ROM:8438             ; =============== S U B R O U T I N E =======================================
ROM:8438
ROM:8438
ROM:8438             render_char_in_buffer:
ROM:8438 A9 0B                               LDA     #11                     ; renders 11*3=33 bytes into $DF-$FF
ROM:8438                                                                     ; X=col_pixel_shift
ROM:8438                                                                     ; 11 scan lines per character?
ROM:843A 85 1D                               STA     1Dh                     ; scanline_cnt
ROM:843C A9 00                               LDA     #0
ROM:843E 85 0A                               STA     0Ah
ROM:8440 A9 AD                               LDA     #0ADh ; '­'
ROM:8442 85 0B                               STA     0Bh                     ; start AD00; 22 tables $68 bytes each
ROM:8444 BD C1 84                            LDA     char_bank_tbl,X         ; offsets for character data per pixel shift ($A2-$A8)
ROM:8447 8D 5C 84                            STA     845Ch                   ; self-modifying code (msb)
ROM:844A 8D 68 84                            STA     8468h
ROM:844D 8D 8D 84                            STA     848Dh
ROM:8450 8D 99 84                            STA     8499h
ROM:8453 A2 00                               LDX     #0                      ; init offset into character render buffer
ROM:8455
ROM:8455             loc_8455:                                               ; msg_char
ROM:8455 A4 1E                               LDY     1Eh
ROM:8457 B1 0A                               LDA     (word_A),Y              ; [$AD00+char]
ROM:8459 A8                                  TAY                             ; Y=$00..$7F
ROM:845A
ROM:845A             loc_845A:                                               ; (msb modified) A2/A3/A4/A5/A6/A7/A8
ROM:845A B9 00 A0                            LDA     0A000h,Y                ; Y=offset from [$AD00+char]
ROM:845D 8D 70 84                            STA     8470h                   ; self-modifying code (lsb)
ROM:8460 18                                  CLC
ROM:8461 69 01                               ADC     #1                      ; next address
ROM:8463 8D 75 84                            STA     8475h                   ; self-modifying code (lsb)
ROM:8466
ROM:8466             loc_8466:                                               ; (msb modified)
ROM:8466 B9 80 A0                            LDA     0A080h,Y                ; Y=offset from [$AD00+char] A2/A3/A4/A5/A6/A7/A8
ROM:8469 8D 71 84                            STA     8471h                   ; self-modifying code (msb)
ROM:846C 8D 76 84                            STA     8476h                   ; self-modifying code (msb)
ROM:846F
ROM:846F             loc_846F:                                               ; (msb & lsb modified)
ROM:846F AD 00 A0                            LDA     0A000h
ROM:8472 95 DF                               STA     0DFh,X                  ; lchar_data
ROM:8474
ROM:8474             loc_8474:                                               ; (msb & lsb modified)
ROM:8474 AD 00 A0                            LDA     0A000h
ROM:8477 95 E0                               STA     0E0h,X                  ; lchar_data+1
ROM:8479 A5 0A                               LDA     0Ah
ROM:847B 18                                  CLC
ROM:847C 69 68                               ADC     #68h ; 'h'
ROM:847E 85 0A                               STA     0Ah
ROM:8480 A5 0B                               LDA     0Bh
ROM:8482 69 00                               ADC     #0
ROM:8484 85 0B                               STA     0Bh                     ; inc $AD00 address
ROM:8486 A4 1E                               LDY     1Eh                     ; msg_char
ROM:8488 B1 0A                               LDA     (0Ah),Y                 ; [$AD68+char]
ROM:848A A8                                  TAY
ROM:848B
ROM:848B             loc_848B:                                               ; (msb modified)
ROM:848B B9 00 A0                            LDA     0A000h,Y                ; Y=offset from [$AD80+char]
ROM:848E 8D A1 84                            STA     84A1h                   ; self-modifying code (lsb)
ROM:8491 18                                  CLC
ROM:8492 69 01                               ADC     #1
ROM:8494 8D A8 84                            STA     84A8h                   ; self-modifying code (lsb)
ROM:8497
ROM:8497             loc_8497:                                               ; (msb modified)
ROM:8497 B9 80 A0                            LDA     0A080h,Y
ROM:849A 8D A2 84                            STA     84A2h                   ; self-modifying code
ROM:849D 8D A9 84                            STA     84A9h                   ; self-modifying code
ROM:84A0
ROM:84A0             loc_84A0:                                               ; (msb & lsb modified)
ROM:84A0 AD 00 A0                            LDA     0A000h
ROM:84A3 15 E0                               ORA     0E0h,X
ROM:84A5 95 E0                               STA     0E0h,X                  ; lchar_data+1
ROM:84A7
ROM:84A7             loc_84A7:                                               ; (msb & lsb modified)
ROM:84A7 AD 00 A0                            LDA     0A000h
ROM:84AA 95 E1                               STA     0E1h,X                  ; lchar_data+2
ROM:84AC A5 0A                               LDA     word_A
ROM:84AE 18                                  CLC
ROM:84AF 69 68                               ADC     #68h ; 'h'
ROM:84B1 85 0A                               STA     word_A
ROM:84B3 A5 0B                               LDA     word_A+1
ROM:84B5 69 00                               ADC     #0
ROM:84B7 85 0B                               STA     word_A+1                ; next character data addr
ROM:84B9 E8                                  INX
ROM:84BA E8                                  INX
ROM:84BB E8                                  INX                             ; next render buffer addr
ROM:84BC C6 1D                               DEC     scanline_cnt            ; done all scan lines?
ROM:84BE D0 95                               BNE     loc_8455                ; no, loop
ROM:84C0 60                                  RTS
ROM:84C0             ; End of function render_char_in_buffer
ROM:84C0
ROM:84C0             ; ---------------------------------------------------------------------------
ROM:84C1 A2 A3 A4 A5+char_bank_tbl:          .db 0A2h, 0A3h, 0A4h, 0A5h, 0A6h, 0A7h, 0A8h ; offsets for character data per pixel shift
ROM:84C8             ; ---------------------------------------------------------------------------
ROM:84C8
ROM:84C8             check_and_update_high_score_tbl:
ROM:84C8 A5 9D                               LDA     no_cheat
ROM:84CA F0 48                               BEQ     locret_8514             ; no, exit
ROM:84CC A5 8E                               LDA     score_1e1_1
ROM:84CE 05 8F                               ORA     score_1e3_1e2
ROM:84D0 05 90                               ORA     score_1e5_1e4
ROM:84D2 05 91                               ORA     score_1e6               ; score = 0?
ROM:84D4 F0 3E                               BEQ     locret_8514             ; yes, exit
ROM:84D6 A9 01                               LDA     #1
ROM:84D8 20 59 63                            JSR     read_disk_and_chk_sig
ROM:84DB F0 37                               BEQ     locret_8514
ROM:84DD A0 01                               LDY     #1                      ; 1st high score
ROM:84DF
ROM:84DF             loc_84DF:
ROM:84DF BE A2 79                            LDX     high_score_offset_tbl,Y
ROM:84E2 A5 A6                               LDA     level
ROM:84E4 DD 03 1F                            CMP     1F03h,X                 ; high score level
ROM:84E7 90 26                               BCC     loc_850F                ; lower, skip
ROM:84E9 D0 2A                               BNE     add_hs_entry            ; higher, add entry
ROM:84EB A5 91                               LDA     score_1e6
ROM:84ED DD 04 1F                            CMP     1F04h,X
ROM:84F0 90 1D                               BCC     loc_850F
ROM:84F2 D0 21                               BNE     add_hs_entry
ROM:84F4 A5 90                               LDA     score_1e5_1e4
ROM:84F6 DD 05 1F                            CMP     1F05h,X
ROM:84F9 90 14                               BCC     loc_850F
ROM:84FB D0 18                               BNE     add_hs_entry
ROM:84FD A5 8F                               LDA     score_1e3_1e2
ROM:84FF DD 06 1F                            CMP     1F06h,X
ROM:8502 90 0B                               BCC     loc_850F
ROM:8504 D0 0F                               BNE     add_hs_entry
ROM:8506 A5 8E                               LDA     score_1e1_1
ROM:8508 DD 07 1F                            CMP     1F07h,X
ROM:850B 90 02                               BCC     loc_850F
ROM:850D D0 06                               BNE     add_hs_entry
ROM:850F
ROM:850F             loc_850F:                                               ; next high score
ROM:850F C8                                  INY
ROM:8510 C0 0B                               CPY     #11                     ; done?
ROM:8512 90 CB                               BCC     loc_84DF                ; no, loop
ROM:8514
ROM:8514             locret_8514:
ROM:8514 60                                  RTS
ROM:8515             ; ---------------------------------------------------------------------------
ROM:8515
ROM:8515             add_hs_entry:                                           ; last entry?
ROM:8515 C0 0A                               CPY     #10
ROM:8517 F0 1D                               BEQ     loc_8536                ; yes, go
ROM:8519 84 56                               STY     guard_ai_row
ROM:851B A0 09                               LDY     #9
ROM:851D
ROM:851D             loc_851D:
ROM:851D BE A2 79                            LDX     high_score_offset_tbl,Y
ROM:8520 A9 08                               LDA     #8
ROM:8522 85 1D                               STA     scanline_cnt
ROM:8524
ROM:8524             loc_8524:
ROM:8524 BD 00 1F                            LDA     1F00h,X
ROM:8527 9D 08 1F                            STA     1F08h,X
ROM:852A E8                                  INX
ROM:852B C6 1D                               DEC     scanline_cnt
ROM:852D D0 F5                               BNE     loc_8524
ROM:852F C4 56                               CPY     guard_ai_row
ROM:8531 F0 03                               BEQ     loc_8536
ROM:8533 88                                  DEY
ROM:8534 D0 E7                               BNE     loc_851D
ROM:8536
ROM:8536             loc_8536:
ROM:8536 BE A2 79                            LDX     high_score_offset_tbl,Y
ROM:8539 A9 A0                               LDA     #0A0h ; ' '
ROM:853B 9D 00 1F                            STA     1F00h,X
ROM:853E 9D 01 1F                            STA     1F01h,X
ROM:8541 9D 02 1F                            STA     1F02h,X                 ; set initials to spaces
ROM:8544 A5 A6                               LDA     level
ROM:8546 9D 03 1F                            STA     1F03h,X                 ; display level
ROM:8549 A5 91                               LDA     score_1e6
ROM:854B 9D 04 1F                            STA     1F04h,X
ROM:854E A5 90                               LDA     score_1e5_1e4
ROM:8550 9D 05 1F                            STA     1F05h,X
ROM:8553 A5 8F                               LDA     score_1e3_1e2
ROM:8555 9D 06 1F                            STA     1F06h,X
ROM:8558 A5 8E                               LDA     score_1e1_1
ROM:855A 9D 07 1F                            STA     1F07h,X                 ; display score
ROM:855D 84 69                               STY     byte_69                 ; high score index
ROM:855F B9 A2 79                            LDA     high_score_offset_tbl,Y
ROM:8562 8D 83 85                            STA     8583h
ROM:8565 8D CA 85                            STA     85CAh
ROM:8568 20 6B 78                            JSR     cls_and_display_high_scores
ROM:856B A9 40                               LDA     #40h ; '@'
ROM:856D 85 87                               STA     display_char_page
ROM:856F A5 69                               LDA     byte_69                 ; high score index
ROM:8571 18                                  CLC
ROM:8572 69 04                               ADC     #4
ROM:8574 85 86                               STA     row                     ; set row
ROM:8576 A9 07                               LDA     #7
ROM:8578 85 85                               STA     col                     ; set col
ROM:857A A2 00                               LDX     #0
ROM:857C 8E 4D 82                            STX     initial_cnt
ROM:857F
ROM:857F             next_inital:
ROM:857F AE 4D 82                            LDX     initial_cnt
ROM:8582 BD 00 1F                            LDA     1F00h,X                 ; get initial
ROM:8585 20 2A 7B                            JSR     remap_character
ROM:8588 20 F3 85                            JSR     blink_char_cursor_wait_key
ROM:858B 8D 10 C0                            STA     0C010h                  ; keyboard strobe
ROM:858E C9 8D                               CMP     #8Dh ; ''              ; <ENTER>?
ROM:8590 F0 55                               BEQ     done_initials_entry     ; yes, go
ROM:8592 C9 88                               CMP     #88h ; ''              ; <BS>?
ROM:8594 D0 0D                               BNE     add_initial             ; no, go
ROM:8596 AE 4D 82                            LDX     initial_cnt             ; 1st initial?
ROM:8599 F0 46                               BEQ     beep_and_loop           ; yes, exit
ROM:859B CE 4D 82                            DEC     initial_cnt
ROM:859E C6 85                               DEC     col
ROM:85A0 4C 7F 85                            JMP     next_inital             ; loop
ROM:85A3             ; ---------------------------------------------------------------------------
ROM:85A3
ROM:85A3             add_initial:                                            ; ctrl-U?
ROM:85A3 C9 95                               CMP     #95h ; ''
ROM:85A5 D0 0F                               BNE     loc_85B6                ; no, skip
ROM:85A7 AE 4D 82                            LDX     initial_cnt
ROM:85AA E0 02                               CPX     #2
ROM:85AC F0 33                               BEQ     beep_and_loop
ROM:85AE E6 85                               INC     col
ROM:85B0 EE 4D 82                            INC     initial_cnt
ROM:85B3 4C 7F 85                            JMP     next_inital             ; loop
ROM:85B6             ; ---------------------------------------------------------------------------
ROM:85B6
ROM:85B6             loc_85B6:                                               ; '.'?
ROM:85B6 C9 AE                               CMP     #0AEh ; '®'
ROM:85B8 F0 0C                               BEQ     save_initial            ; yes, go
ROM:85BA C9 A0                               CMP     #0A0h ; ' '             ; space?
ROM:85BC F0 08                               BEQ     save_initial            ; yes, go
ROM:85BE C9 C1                               CMP     #0C1h ; 'Á'             ; alhpa?
ROM:85C0 90 1F                               BCC     beep_and_loop           ; no, exit
ROM:85C2 C9 DB                               CMP     #0DBh ; 'Û'             ; alpha?
ROM:85C4 B0 1B                               BCS     beep_and_loop           ; no, exit
ROM:85C6
ROM:85C6             save_initial:
ROM:85C6 AC 4D 82                            LDY     initial_cnt
ROM:85C9 99 00 1F                            STA     1F00h,Y                 ; save initial
ROM:85CC 20 64 7B                            JSR     display_character
ROM:85CF EE 4D 82                            INC     initial_cnt
ROM:85D2 AD 4D 82                            LDA     initial_cnt
ROM:85D5 C9 03                               CMP     #3                      ; done 3 initials?
ROM:85D7 90 A6                               BCC     next_inital             ; no, loop
ROM:85D9 CE 4D 82                            DEC     initial_cnt
ROM:85DC C6 85                               DEC     col                     ; stay on 3rd initial
ROM:85DE 4C 7F 85                            JMP     next_inital             ; loop
ROM:85E1             ; ---------------------------------------------------------------------------
ROM:85E1
ROM:85E1             beep_and_loop:
ROM:85E1 20 CE 86                            JSR     beep
ROM:85E4 4C 7F 85                            JMP     next_inital             ; loop
ROM:85E7             ; ---------------------------------------------------------------------------
ROM:85E7
ROM:85E7             done_initials_entry:
ROM:85E7 A9 20                               LDA     #20h ; ' '
ROM:85E9 85 87                               STA     display_char_page
ROM:85EB A9 02                               LDA     #2
ROM:85ED 20 59 63                            JSR     read_disk_and_chk_sig
ROM:85F0 4C 8E 61                            JMP     title_wait_for_key
ROM:85F3
ROM:85F3             ; =============== S U B R O U T I N E =======================================
ROM:85F3
ROM:85F3
ROM:85F3             blink_char_cursor_wait_key:
ROM:85F3 8D 45 87                            STA     blink_char
ROM:85F6
ROM:85F6             loc_85F6:                                               ; blink on timer
ROM:85F6 A9 68                               LDA     #104
ROM:85F8 85 A1                               STA     timer
ROM:85FA AD 45 87                            LDA     blink_char
ROM:85FD D0 02                               BNE     loc_8601
ROM:85FF A9 0A                               LDA     #0Ah                    ; cursor character
ROM:8601
ROM:8601             loc_8601:
ROM:8601 20 B0 82                            JSR     display_char_pg2
ROM:8604
ROM:8604             loc_8604:                                               ; read keyboard
ROM:8604 AD 00 C0                            LDA     0C000h
ROM:8607 30 1F                               BMI     loc_8628                ; key pressed, go
ROM:8609 20 6D 87                            JSR     joystick_active
ROM:860C C6 A1                               DEC     timer
ROM:860E D0 F4                               BNE     loc_8604
ROM:8610 A9 00                               LDA     #0
ROM:8612 20 B0 82                            JSR     display_char_pg2        ; blink character
ROM:8615 A9 68                               LDA     #104                    ; blink off timer
ROM:8617 85 A1                               STA     timer
ROM:8619
ROM:8619             loc_8619:                                               ; read keyboard
ROM:8619 AD 00 C0                            LDA     0C000h
ROM:861C 30 0A                               BMI     loc_8628                ; key pressed, go
ROM:861E 20 6D 87                            JSR     joystick_active
ROM:8621 C6 A1                               DEC     timer
ROM:8623 D0 F4                               BNE     loc_8619                ; blink off
ROM:8625 4C F6 85                            JMP     loc_85F6                ; blink on
ROM:8628             ; ---------------------------------------------------------------------------
ROM:8628
ROM:8628             loc_8628:
ROM:8628 48                                  PHA
ROM:8629 AD 45 87                            LDA     blink_char
ROM:862C 20 B0 82                            JSR     display_char_pg2        ; restore character
ROM:862F 68                                  PLA                             ; new key
ROM:8630 60                                  RTS
ROM:8630             ; End of function blink_char_cursor_wait_key
ROM:8630
ROM:8631
ROM:8631             ; =============== S U B R O U T I N E =======================================
ROM:8631
ROM:8631
ROM:8631             draw_end_of_screen_ladder:
ROM:8631 A9 00                               LDA     #0
ROM:8633 8D 00 0C                            STA     eos_ladder_col
ROM:8636 A6 A3                               LDX     no_eos_ladder_tiles
ROM:8638 8E 9E 86                            STX     no_eos_ladder_entries
ROM:863B
ROM:863B             loc_863B:
ROM:863B AE 9E 86                            LDX     no_eos_ladder_entries
ROM:863E F0 56                               BEQ     loc_8696
ROM:8640 BD 00 0C                            LDA     eos_ladder_col,X
ROM:8643 30 4B                               BMI     loc_8690
ROM:8645 85 85                               STA     col
ROM:8647 BD 30 0C                            LDA     eos_ladder_row,X
ROM:864A 85 86                               STA     row
ROM:864C A8                                  TAY
ROM:864D B9 05 1C                            LDA     lsb_row_a_tbl,Y
ROM:8650 85 06                               STA     lsb_row_lda_dyn
ROM:8652 85 08                               STA     lsb_row_lda_static
ROM:8654 B9 15 1C                            LDA     msb_row_a_dyn_tbl,Y
ROM:8657 85 07                               STA     msb_row_lda_dyn
ROM:8659 B9 25 1C                            LDA     msb_row_a_static_tbl,Y
ROM:865C 85 09                               STA     msb_row_lda_static
ROM:865E A4 85                               LDY     col
ROM:8660 B1 08                               LDA     (lsb_row_lda_static),Y  ; get object from tilemap
ROM:8662 D0 27                               BNE     loc_868B                ; not a space, skip
ROM:8664 A9 03                               LDA     #3                      ; ladder
ROM:8666 91 08                               STA     (lsb_row_lda_static),Y  ; update tilemap
ROM:8668 B1 06                               LDA     (lsb_row_lda_dyn),Y     ; get object from tilemap
ROM:866A D0 04                               BNE     loc_8670                ; not a space, skip
ROM:866C A9 03                               LDA     #3                      ; ladder
ROM:866E 91 06                               STA     (lsb_row_lda_dyn),Y     ; update tilemap
ROM:8670
ROM:8670             loc_8670:                                               ; ladder
ROM:8670 A9 03                               LDA     #3
ROM:8672 20 B0 82                            JSR     display_char_pg2
ROM:8675 A6 85                               LDX     col
ROM:8677 A4 86                               LDY     row
ROM:8679 20 5D 88                            JSR     calc_colx5_scanline
ROM:867C A9 03                               LDA     #3                      ; ladder
ROM:867E 20 A7 83                            JSR     display_transparent_char
ROM:8681 AE 9E 86                            LDX     no_eos_ladder_entries
ROM:8684 A9 FF                               LDA     #0FFh
ROM:8686 9D 00 0C                            STA     eos_ladder_col,X
ROM:8689 30 05                               BMI     loc_8690
ROM:868B
ROM:868B             loc_868B:
ROM:868B A9 01                               LDA     #1
ROM:868D 8D 00 0C                            STA     eos_ladder_col
ROM:8690
ROM:8690             loc_8690:
ROM:8690 CE 9E 86                            DEC     no_eos_ladder_entries
ROM:8693 4C 3B 86                            JMP     loc_863B
ROM:8696             ; ---------------------------------------------------------------------------
ROM:8696
ROM:8696             loc_8696:
ROM:8696 AD 00 0C                            LDA     eos_ladder_col
ROM:8699 D0 02                               BNE     locret_869D
ROM:869B C6 93                               DEC     no_gold
ROM:869D
ROM:869D             locret_869D:
ROM:869D 60                                  RTS
ROM:869D             ; End of function draw_end_of_screen_ladder
ROM:869D
ROM:869D             ; ---------------------------------------------------------------------------
ROM:869E 00          no_eos_ladder_entries:  .db 0
ROM:869F
ROM:869F             ; =============== S U B R O U T I N E =======================================
ROM:869F
ROM:869F
ROM:869F             keybd_flush:
ROM:869F 8D 10 C0                            STA     0C010h                  ; keyboard strobe
ROM:86A2 AD 00 C0                            LDA     0C000h                  ; read keyboard data
ROM:86A5 30 F8                               BMI     keybd_flush             ; key pressed, loop
ROM:86A7 60                                  RTS
ROM:86A7             ; End of function keybd_flush
ROM:86A7
ROM:86A8
ROM:86A8             ; =============== S U B R O U T I N E =======================================
ROM:86A8
ROM:86A8
ROM:86A8             wait_for_key:
ROM:86A8 AD 00 C0                            LDA     0C000h                  ; read keyboard
ROM:86AB 10 FB                               BPL     wait_for_key            ; no key pressed, loop
ROM:86AD 8D 10 C0                            STA     0C010h                  ; keyboard strobe
ROM:86B0 60                                  RTS
ROM:86B0             ; End of function wait_for_key
ROM:86B0
ROM:86B1
ROM:86B1             ; =============== S U B R O U T I N E =======================================
ROM:86B1
ROM:86B1
ROM:86B1             delay_180X_scaled:
ROM:86B1 BD BE 86                            LDA     speed_scale_tbl,X
ROM:86B4 AA                                  TAX
ROM:86B4             ; End of function delay_180X_scaled
ROM:86B4
ROM:86B5
ROM:86B5             ; =============== S U B R O U T I N E =======================================
ROM:86B5
ROM:86B5
ROM:86B5             delay_180X:
ROM:86B5 A0 B4                               LDY     #180
ROM:86B7
ROM:86B7             loc_86B7:
ROM:86B7 88                                  DEY
ROM:86B8 D0 FD                               BNE     loc_86B7
ROM:86BA CA                                  DEX
ROM:86BB D0 F8                               BNE     delay_180X
ROM:86BD 60                                  RTS
ROM:86BD             ; End of function delay_180X
ROM:86BD
ROM:86BD             ; ---------------------------------------------------------------------------
ROM:86BE 02 04 06 08+speed_scale_tbl:        .db 2, 4, 6, 8, 0Ah, 0Ch, 0Eh, 10h, 12h, 14h, 16h, 18h, 1Ah
ROM:86BE 0A 0C 0E 10+                        .db 1Ch, 1Eh, 20h
ROM:86CE
ROM:86CE             ; =============== S U B R O U T I N E =======================================
ROM:86CE
ROM:86CE
ROM:86CE             beep:
ROM:86CE A0 C0                               LDY     #0C0h ; 'À'
ROM:86D0
ROM:86D0             loc_86D0:
ROM:86D0 A2 80                               LDX     #80h ; ''
ROM:86D2
ROM:86D2             loc_86D2:
ROM:86D2 CA                                  DEX
ROM:86D3 D0 FD                               BNE     loc_86D2                ; delay
ROM:86D5 A5 99                               LDA     sound_enabled
ROM:86D7 F0 03                               BEQ     loc_86DC
ROM:86D9 AD 30 C0                            LDA     0C030h                  ; speaker
ROM:86DC
ROM:86DC             loc_86DC:
ROM:86DC 88                                  DEY
ROM:86DD D0 F1                               BNE     loc_86D0
ROM:86DF 60                                  RTS
ROM:86DF             ; End of function beep
ROM:86DF
ROM:86E0
ROM:86E0             ; =============== S U B R O U T I N E =======================================
ROM:86E0
ROM:86E0
ROM:86E0             display_message:
ROM:86E0 68                                  PLA
ROM:86E1 85 10                               STA     msg_addr
ROM:86E3 68                                  PLA
ROM:86E4 85 11                               STA     msg_addr+1              ; return address
ROM:86E6 D0 09                               BNE     loc_86F1
ROM:86E8
ROM:86E8             loc_86E8:
ROM:86E8 A0 00                               LDY     #0
ROM:86EA B1 10                               LDA     (msg_addr),Y            ; next message character
ROM:86EC F0 0B                               BEQ     loc_86F9                ; done? yes, exit
ROM:86EE 20 64 7B                            JSR     display_character
ROM:86F1
ROM:86F1             loc_86F1:                                               ; next address
ROM:86F1 E6 10                               INC     msg_addr
ROM:86F3 D0 F3                               BNE     loc_86E8
ROM:86F5 E6 11                               INC     msg_addr+1              ; fix MSB of next address
ROM:86F7 D0 EF                               BNE     loc_86E8
ROM:86F9
ROM:86F9             loc_86F9:
ROM:86F9 A5 11                               LDA     msg_addr+1
ROM:86FB 48                                  PHA
ROM:86FC A5 10                               LDA     msg_addr
ROM:86FE 48                                  PHA                             ; adjust return address
ROM:86FF 60                                  RTS
ROM:86FF             ; End of function display_message
ROM:86FF
ROM:8700
ROM:8700             ; =============== S U B R O U T I N E =======================================
ROM:8700
ROM:8700
ROM:8700             blink_char_and_wait_for_key:
ROM:8700 8D 45 87                            STA     blink_char              ; character to blink
ROM:8703
ROM:8703             loc_8703:
ROM:8703 A9 68                               LDA     #104
ROM:8705 85 A1                               STA     timer                   ; reset timer
ROM:8707 A9 00                               LDA     #0                      ; space
ROM:8709 AE 45 87                            LDX     blink_char              ; character to blink
ROM:870C D0 02                               BNE     loc_8710                ; not a space, skip
ROM:870E A9 0A                               LDA     #0Ah                    ; solid square
ROM:8710
ROM:8710             loc_8710:                                               ; display space/square
ROM:8710 20 AA 82                            JSR     display_char_pg1
ROM:8713
ROM:8713             loc_8713:                                               ; read keyboard
ROM:8713 AD 00 C0                            LDA     0C000h
ROM:8716 30 24                               BMI     blink_got_key           ; key pressed, go
ROM:8718 20 6D 87                            JSR     joystick_active
ROM:871B B0 1F                               BCS     blink_got_key           ; yes, go
ROM:871D C6 A1                               DEC     timer                   ; timeout?
ROM:871F D0 F2                               BNE     loc_8713                ; no, loop
ROM:8721 AD 45 87                            LDA     blink_char
ROM:8724 20 AA 82                            JSR     display_char_pg1        ; display character to blink
ROM:8727 A9 68                               LDA     #104
ROM:8729 85 A1                               STA     timer                   ; reset timer
ROM:872B
ROM:872B             loc_872B:                                               ; read keyboard
ROM:872B AD 00 C0                            LDA     0C000h
ROM:872E 30 0C                               BMI     blink_got_key           ; key pressed, go
ROM:8730 20 6D 87                            JSR     joystick_active
ROM:8733 B0 07                               BCS     blink_got_key           ; yes, go
ROM:8735 C6 A1                               DEC     timer                   ; timeout?
ROM:8737 D0 F2                               BNE     loc_872B                ; no, loop
ROM:8739 4C 03 87                            JMP     loc_8703                ; loop waiting for key
ROM:873C             ; ---------------------------------------------------------------------------
ROM:873C
ROM:873C             blink_got_key:                                          ; save key
ROM:873C 48                                  PHA
ROM:873D AD 45 87                            LDA     blink_char
ROM:8740 20 AA 82                            JSR     display_char_pg1        ; display original character
ROM:8743 68                                  PLA                             ; restore key
ROM:8744 60                                  RTS
ROM:8744             ; End of function blink_char_and_wait_for_key
ROM:8744
ROM:8744             ; ---------------------------------------------------------------------------
ROM:8745 06          blink_char:             .db 6
ROM:8746             ; ---------------------------------------------------------------------------
ROM:8746
ROM:8746             read_joystick_axes:
ROM:8746 A9 00                               LDA     #0
ROM:8748 85 65                               STA     joy_x
ROM:874A 85 66                               STA     joy_y
ROM:874C AD 70 C0                            LDA     0C070h                  ; trigger paddles
ROM:874F
ROM:874F             loc_874F:
ROM:874F A2 01                               LDX     #1
ROM:8751
ROM:8751             loc_8751:                                               ; read paddle 0
ROM:8751 BD 64 C0                            LDA     0C064h,X
ROM:8754 10 13                               BPL     loc_8769                ; not ready, skip
ROM:8756 F6 65                               INC     65h,X
ROM:8758
ROM:8758             loc_8758:
ROM:8758 CA                                  DEX
ROM:8759 10 F6                               BPL     loc_8751
ROM:875B AD 64 C0                            LDA     0C064h                  ; read paddle 0
ROM:875E 0D 65 C0                            ORA     0C065h                  ; and paddle 1
ROM:8761 10 09                               BPL     locret_876C             ; not ready, skip
ROM:8763 A5 65                               LDA     joy_x
ROM:8765 05 66                               ORA     joy_y
ROM:8767 10 E6                               BPL     loc_874F
ROM:8769
ROM:8769             loc_8769:
ROM:8769 EA                                  NOP
ROM:876A 10 EC                               BPL     loc_8758
ROM:876C
ROM:876C             locret_876C:
ROM:876C 60                                  RTS
ROM:876D
ROM:876D             ; =============== S U B R O U T I N E =======================================
ROM:876D
ROM:876D
ROM:876D             joystick_active:
ROM:876D A5 95                               LDA     paddles_detected
ROM:876F C9 CB                               CMP     #0CBh ; 'Ë'             ; detected?
ROM:8771 F0 25                               BEQ     loc_8798                ; no, skip
ROM:8773 20 46 87                            JSR     read_joystick_axes
ROM:8776 A5 65                               LDA     joy_x
ROM:8778 C9 12                               CMP     #12h                    ; left?
ROM:877A 90 1A                               BCC     loc_8796                ; yes, exit
ROM:877C C9 3B                               CMP     #3Bh ; ';'              ; right?
ROM:877E B0 16                               BCS     loc_8796                ; yes, exit
ROM:8780 A5 66                               LDA     joy_y
ROM:8782 C9 12                               CMP     #12h                    ; up?
ROM:8784 90 10                               BCC     loc_8796                ; yes, exit
ROM:8786 C9 3B                               CMP     #3Bh ; ';'              ; down?
ROM:8788 B0 0C                               BCS     loc_8796                ; yes, exit
ROM:878A AD 62 C0                            LDA     0C062h                  ; button #1?
ROM:878D 30 07                               BMI     loc_8796                ; yes, exit
ROM:878F AD 61 C0                            LDA     0C061h                  ; button #0?
ROM:8792 30 02                               BMI     loc_8796                ; yes, exit
ROM:8794 18                                  CLC                             ; flag not pressed
ROM:8795 60                                  RTS
ROM:8796             ; ---------------------------------------------------------------------------
ROM:8796
ROM:8796             loc_8796:                                               ; flag pressed
ROM:8796 38                                  SEC
ROM:8797 60                                  RTS
ROM:8798             ; ---------------------------------------------------------------------------
ROM:8798
ROM:8798             loc_8798:
ROM:8798 A2 02                               LDX     #2
ROM:879A
ROM:879A             loc_879A:
ROM:879A 88                                  DEY
ROM:879B D0 FD                               BNE     loc_879A
ROM:879D CA                                  DEX
ROM:879E D0 FA                               BNE     loc_879A
ROM:87A0 18                                  CLC
ROM:87A1 60                                  RTS
ROM:87A1             ; End of function joystick_active
ROM:87A1
ROM:87A2
ROM:87A2             ; =============== S U B R O U T I N E =======================================
ROM:87A2
ROM:87A2
ROM:87A2             detect_paddles:
ROM:87A2 AD 70 C0                            LDA     0C070h                  ; trigger paddles
ROM:87A5 A2 10                               LDX     #10h
ROM:87A7
ROM:87A7             loc_87A7:                                               ; read paddle 0
ROM:87A7 AD 64 C0                            LDA     0C064h
ROM:87AA 0D 65 C0                            ORA     0C065h                  ; and paddle 1
ROM:87AD 10 0A                               BPL     locret_87B9             ; paddle detected? Yes, exit
ROM:87AF 88                                  DEY
ROM:87B0 D0 F5                               BNE     loc_87A7
ROM:87B2 CA                                  DEX                             ; timed-out?
ROM:87B3 D0 F2                               BNE     loc_87A7                ; no, loop
ROM:87B5 A9 CB                               LDA     #0CBh ; 'Ë'             ; flag no paddles detected
ROM:87B7 85 95                               STA     paddles_detected
ROM:87B9
ROM:87B9             locret_87B9:
ROM:87B9 60                                  RTS
ROM:87B9             ; End of function detect_paddles
ROM:87B9
ROM:87BA
ROM:87BA             ; =============== S U B R O U T I N E =======================================
ROM:87BA
ROM:87BA
ROM:87BA             play_sound:
ROM:87BA 85 0A                               STA     word_A                  ; fequency
ROM:87BC 86 0B                               STX     word_A+1                ; duration
ROM:87BE
ROM:87BE             loc_87BE:
ROM:87BE A5 99                               LDA     sound_enabled
ROM:87C0 F0 03                               BEQ     loc_87C5                ; no, skip
ROM:87C2 AD 30 C0                            LDA     0C030h                  ; speaker out
ROM:87C5
ROM:87C5             loc_87C5:                                               ; this is uninitialised, then wraps
ROM:87C5 88                                  DEY
ROM:87C6 D0 04                               BNE     loc_87CC
ROM:87C8 C6 0B                               DEC     word_A+1                ; duration - done playing?
ROM:87CA F0 08                               BEQ     locret_87D4             ; yes, return
ROM:87CC
ROM:87CC             loc_87CC:
ROM:87CC CA                                  DEX
ROM:87CD D0 F6                               BNE     loc_87C5                ; loop
ROM:87CF A6 0A                               LDX     word_A                  ; frequency
ROM:87D1 4C BE 87                            JMP     loc_87BE                ; loop
ROM:87D4             ; ---------------------------------------------------------------------------
ROM:87D4
ROM:87D4             locret_87D4:
ROM:87D4 60                                  RTS
ROM:87D4             ; End of function play_sound
ROM:87D4
ROM:87D5
ROM:87D5             ; =============== S U B R O U T I N E =======================================
ROM:87D5
ROM:87D5
ROM:87D5             queue_note:
ROM:87D5 E6 54                               INC     sndq_length
ROM:87D7 A4 54                               LDY     sndq_length
ROM:87D9 99 80 0E                            STA     sndfreq,Y               ; frequency
ROM:87DC 8A                                  TXA
ROM:87DD 99 00 0E                            STA     snddur,Y                ; duration
ROM:87E0 60                                  RTS
ROM:87E0             ; End of function queue_note
ROM:87E0
ROM:87E1
ROM:87E1             ; =============== S U B R O U T I N E =======================================
ROM:87E1
ROM:87E1
ROM:87E1             queue_sound:
ROM:87E1 68                                  PLA
ROM:87E2 85 10                               STA     msg_addr
ROM:87E4 68                                  PLA
ROM:87E5 85 11                               STA     msg_addr+1              ; return address
ROM:87E7 D0 19                               BNE     loc_8802                ; always
ROM:87E9
ROM:87E9             loc_87E9:
ROM:87E9 A0 00                               LDY     #0
ROM:87EB B1 10                               LDA     (msg_addr),Y            ; get message byte
ROM:87ED F0 1B                               BEQ     loc_880A                ; done? yes, go
ROM:87EF E6 54                               INC     sndq_length
ROM:87F1 A6 54                               LDX     sndq_length
ROM:87F3 9D 00 0E                            STA     snddur,X                ; duration
ROM:87F6 C8                                  INY                             ; next message byte
ROM:87F7 B1 10                               LDA     (msg_addr),Y            ; get byte
ROM:87F9 9D 80 0E                            STA     sndfreq,X               ; frequency
ROM:87FC E6 10                               INC     msg_addr
ROM:87FE D0 02                               BNE     loc_8802
ROM:8800 E6 11                               INC     msg_addr+1
ROM:8802
ROM:8802             loc_8802:
ROM:8802 E6 10                               INC     msg_addr
ROM:8804 D0 E3                               BNE     loc_87E9
ROM:8806 E6 11                               INC     msg_addr+1
ROM:8808 D0 DF                               BNE     loc_87E9
ROM:880A
ROM:880A             loc_880A:
ROM:880A A5 11                               LDA     msg_addr+1
ROM:880C 48                                  PHA
ROM:880D A5 10                               LDA     msg_addr
ROM:880F 48                                  PHA                             ; restore return address
ROM:8810 60                                  RTS
ROM:8810             ; End of function queue_sound
ROM:8810
ROM:8811
ROM:8811             ; =============== S U B R O U T I N E =======================================
ROM:8811
ROM:8811
ROM:8811             throttle_and_update_sound:
ROM:8811 A4 54                               LDY     sndq_length             ; sound playing?
ROM:8813 F0 1D                               BEQ     silent                  ; no, go
ROM:8815 B9 80 0E                            LDA     sndfreq,Y               ; frequency
ROM:8818 BE 00 0E                            LDX     snddur,Y                ; duration
ROM:881B 20 BA 87                            JSR     play_sound
ROM:881E A4 54                               LDY     sndq_length
ROM:8820 C6 54                               DEC     sndq_length
ROM:8822 A5 8C                               LDA     game_speed
ROM:8824 38                                  SEC
ROM:8825 F9 00 0E                            SBC     snddur,Y                ; duration
ROM:8828 F0 06                               BEQ     loc_8830
ROM:882A 90 04                               BCC     loc_8830
ROM:882C AA                                  TAX
ROM:882D 20 B5 86                            JSR     delay_180X
ROM:8830
ROM:8830             loc_8830:
ROM:8830 38                                  SEC
ROM:8831 60                                  RTS
ROM:8832             ; ---------------------------------------------------------------------------
ROM:8832
ROM:8832             silent:                                                 ; falling?
ROM:8832 A5 9B                               LDA     not_falling
ROM:8834 D0 0E                               BNE     throttle_game_speed     ; no, go
ROM:8836 A5 A4                               LDA     falling_snd_freq
ROM:8838 4A                                  LSR     A
ROM:8839 E6 A4                               INC     falling_snd_freq
ROM:883B A6 8C                               LDX     game_speed
ROM:883D E8                                  INX
ROM:883E E8                                  INX
ROM:883F 20 BA 87                            JSR     play_sound
ROM:8842 18                                  CLC
ROM:8843 60                                  RTS
ROM:8844             ; ---------------------------------------------------------------------------
ROM:8844
ROM:8844             throttle_game_speed:
ROM:8844 A6 8C                               LDX     game_speed
ROM:8846 20 B1 86                            JSR     delay_180X_scaled
ROM:8849 18                                  CLC
ROM:884A 60                                  RTS
ROM:884A             ; End of function throttle_and_update_sound
ROM:884A
ROM:884B
ROM:884B             ; =============== S U B R O U T I N E =======================================
ROM:884B
ROM:884B
ROM:884B             set_row_addr_1_2:
ROM:884B B9 05 1C                            LDA     lsb_row_a_tbl,Y
ROM:884E 85 06                               STA     lsb_row_lda_dyn
ROM:8850 85 08                               STA     lsb_row_lda_static
ROM:8852 B9 15 1C                            LDA     msb_row_a_dyn_tbl,Y
ROM:8855 85 07                               STA     msb_row_lda_dyn
ROM:8857 B9 25 1C                            LDA     msb_row_a_static_tbl,Y
ROM:885A 85 09                               STA     msb_row_lda_static
ROM:885C 60                                  RTS
ROM:885C             ; End of function set_row_addr_1_2
ROM:885C
ROM:885D
ROM:885D             ; =============== S U B R O U T I N E =======================================
ROM:885D
ROM:885D
ROM:885D             calc_colx5_scanline:
ROM:885D B9 51 1C                            LDA     row_to_scanline_tbl,Y
ROM:8860 48                                  PHA
ROM:8861 BD 35 1C                            LDA     col_x_5_tbl,X
ROM:8864 AA                                  TAX                             ; X=col*5
ROM:8865 68                                  PLA
ROM:8866 A8                                  TAY                             ; Y=scanline
ROM:8867 60                                  RTS
ROM:8867             ; End of function calc_colx5_scanline
ROM:8867
ROM:8868
ROM:8868             ; =============== S U B R O U T I N E =======================================
ROM:8868
ROM:8868
ROM:8868             calc_col_addr_shift:
ROM:8868 BD 62 1C                            LDA     col_to_addr_tbl,X
ROM:886B 48                                  PHA
ROM:886C BD 7E 1C                            LDA     col_pixel_shift_tbl,X
ROM:886F AA                                  TAX
ROM:8870 68                                  PLA
ROM:8871 60                                  RTS
ROM:8871             ; End of function calc_col_addr_shift
ROM:8871
ROM:8872
ROM:8872             ; =============== S U B R O U T I N E =======================================
ROM:8872
ROM:8872
ROM:8872             calc_addr_shift_for_x:
ROM:8872 BD 9A 1C                            LDA     movement_offset_to_addr_tbl,X ; get video address (offset) for count of 2-pixel increments
ROM:8875 48                                  PHA
ROM:8876 BD 26 1D                            LDA     movement_offset_to_shift_tbl,X ; get shift for count of 2-pixel increments
ROM:8879 AA                                  TAX
ROM:887A 68                                  PLA
ROM:887B 60                                  RTS
ROM:887B             ; End of function calc_addr_shift_for_x
ROM:887B
ROM:887C
ROM:887C             ; =============== S U B R O U T I N E =======================================
ROM:887C
ROM:887C
ROM:887C             calc_scanline:
ROM:887C 8A                                  TXA
ROM:887D 48                                  PHA                             ; save X (y_offset_within_tile)
ROM:887E 20 5D 88                            JSR     calc_colx5_scanline
ROM:8881 68                                  PLA
ROM:8882 AA                                  TAX                             ; restore X (y_offset_within_tile)
ROM:8883 98                                  TYA                             ; A=scanline
ROM:8884 18                                  CLC
ROM:8885 7D 8A 88                            ADC     byte_888A,X             ; add -5/-3/0/2/4 to scanline
ROM:8888 A8                                  TAY                             ; to Y
ROM:8889 60                                  RTS
ROM:8889             ; End of function calc_scanline
ROM:8889
ROM:8889             ; ---------------------------------------------------------------------------
ROM:888A FB FD 00 02+byte_888A:              .db 0FBh, 0FDh, 0, 2, 4
ROM:888F
ROM:888F             ; =============== S U B R O U T I N E =======================================
ROM:888F
ROM:888F
ROM:888F             calc_x_div_2:
ROM:888F 98                                  TYA
ROM:8890 48                                  PHA                             ; save Y (x_offset_within_tile)
ROM:8891 20 5D 88                            JSR     calc_colx5_scanline
ROM:8894 68                                  PLA
ROM:8895 A8                                  TAY                             ; restore Y (x_offset_within_tile)
ROM:8896 8A                                  TXA                             ; A=col*5
ROM:8897 18                                  CLC
ROM:8898 79 9D 88                            ADC     byte_889D,Y             ; col*5 +/- 0/1/2
ROM:889B AA                                  TAX                             ; X = x as a count of 2-pixel increments
ROM:889C 60                                  RTS
ROM:889C             ; End of function calc_x_div_2
ROM:889C
ROM:889C             ; ---------------------------------------------------------------------------
ROM:889D FE FF 00 01+byte_889D:              .db 0FEh, 0FFh, 0, 1, 2
ROM:88A2
ROM:88A2             ; =============== S U B R O U T I N E =======================================
ROM:88A2
ROM:88A2
ROM:88A2             wipe_and_draw_level:
ROM:88A2 A9 58                               LDA     #88                     ; 176/2 - y radius
ROM:88A4 85 73                               STA     73h
ROM:88A6 A9 8C                               LDA     #140                    ; 280/2 - x radius
ROM:88A8 85 74                               STA     74h
ROM:88AA A5 A5                               LDA     wipe_next_time          ; wiping or drawing?
ROM:88AC F0 0F                               BEQ     loc_88BD                ; drawing, skip
ROM:88AE A2 AA                               LDX     #170                    ; number of circles
ROM:88B0 86 6D                               STX     6Dh
ROM:88B2 A2 00                               LDX     #0
ROM:88B4 86 72                               STX     drawing
ROM:88B6
ROM:88B6             loc_88B6:
ROM:88B6 20 D7 88                            JSR     render_wipe_circle
ROM:88B9 C6 6D                               DEC     6Dh
ROM:88BB D0 F9                               BNE     loc_88B6
ROM:88BD
ROM:88BD             loc_88BD:
ROM:88BD A9 01                               LDA     #1
ROM:88BF 85 6D                               STA     6Dh
ROM:88C1 85 A5                               STA     wipe_next_time
ROM:88C3 85 72                               STA     drawing
ROM:88C5 20 70 7A                            JSR     display_no_lives
ROM:88C8 20 8C 7A                            JSR     display_level
ROM:88CB
ROM:88CB             loc_88CB:
ROM:88CB 20 D7 88                            JSR     render_wipe_circle
ROM:88CE E6 6D                               INC     6Dh
ROM:88D0 A5 6D                               LDA     6Dh
ROM:88D2 C9 AA                               CMP     #170                    ; done?
ROM:88D4 D0 F5                               BNE     loc_88CB                ; no, loop
ROM:88D6 60                                  RTS
ROM:88D6             ; End of function wipe_and_draw_level
ROM:88D6
ROM:88D7
ROM:88D7             ; =============== S U B R O U T I N E =======================================
ROM:88D7
ROM:88D7
ROM:88D7             render_wipe_circle:
ROM:88D7 A5 6D                               LDA     6Dh                     ; circle number
ROM:88D9 85 69                               STA     69h
ROM:88DB A9 00                               LDA     #0
ROM:88DD 85 6A                               STA     6Ah
ROM:88DF 85 67                               STA     67h
ROM:88E1 85 68                               STA     68h
ROM:88E3 A5 69                               LDA     69h                     ; circle #
ROM:88E5 0A                                  ASL     A                       ; *2
ROM:88E6 85 6B                               STA     6Bh                     ; circle *2 (lsb)
ROM:88E8 A5 6A                               LDA     6Ah
ROM:88EA 2A                                  ROL     A
ROM:88EB 85 6C                               STA     6Ch                     ; circle *2 (msb)
ROM:88ED A9 03                               LDA     #3
ROM:88EF 38                                  SEC
ROM:88F0 E5 6B                               SBC     6Bh
ROM:88F2 85 6B                               STA     6Bh
ROM:88F4 A9 00                               LDA     #0
ROM:88F6 E5 6C                               SBC     6Ch
ROM:88F8 85 6C                               STA     6Ch
ROM:88FA A5 73                               LDA     73h
ROM:88FC 38                                  SEC
ROM:88FD E5 6D                               SBC     6Dh
ROM:88FF 85 75                               STA     75h
ROM:8901 A9 00                               LDA     #0
ROM:8903 E9 00                               SBC     #0
ROM:8905 85 79                               STA     79h
ROM:8907 A5 73                               LDA     73h
ROM:8909 85 76                               STA     76h
ROM:890B 85 77                               STA     77h
ROM:890D A9 00                               LDA     #0
ROM:890F 85 7A                               STA     7Ah
ROM:8911 85 7B                               STA     7Bh
ROM:8913 A5 73                               LDA     73h
ROM:8915 18                                  CLC
ROM:8916 65 6D                               ADC     6Dh
ROM:8918 85 78                               STA     78h
ROM:891A A9 00                               LDA     #0
ROM:891C 69 00                               ADC     #0
ROM:891E 85 7C                               STA     7Ch
ROM:8920 A5 74                               LDA     74h
ROM:8922 38                                  SEC
ROM:8923 E5 6D                               SBC     6Dh
ROM:8925 AA                                  TAX
ROM:8926 A9 00                               LDA     #0
ROM:8928 E9 00                               SBC     #0
ROM:892A 20 45 8A                            JSR     sub_8A45
ROM:892D 84 7D                               STY     7Dh
ROM:892F 85 81                               STA     81h
ROM:8931 A6 74                               LDX     74h
ROM:8933 A9 00                               LDA     #0
ROM:8935 20 45 8A                            JSR     sub_8A45
ROM:8938 84 7E                               STY     7Eh
ROM:893A 84 7F                               STY     7Fh
ROM:893C 85 82                               STA     82h
ROM:893E 85 83                               STA     83h
ROM:8940 A5 74                               LDA     74h
ROM:8942 18                                  CLC
ROM:8943 65 6D                               ADC     6Dh
ROM:8945 AA                                  TAX
ROM:8946 A9 00                               LDA     #0
ROM:8948 69 00                               ADC     #0
ROM:894A 20 45 8A                            JSR     sub_8A45
ROM:894D 84 80                               STY     80h
ROM:894F 85 84                               STA     84h
ROM:8951
ROM:8951             loc_8951:
ROM:8951 A5 68                               LDA     68h
ROM:8953 C5 6A                               CMP     6Ah
ROM:8955 90 18                               BCC     loc_896F
ROM:8957 F0 10                               BEQ     loc_8969
ROM:8959
ROM:8959             loc_8959:
ROM:8959 A5 67                               LDA     67h
ROM:895B C5 69                               CMP     69h
ROM:895D D0 09                               BNE     locret_8968
ROM:895F A5 68                               LDA     68h
ROM:8961 C5 6A                               CMP     6Ah
ROM:8963 D0 03                               BNE     locret_8968
ROM:8965 4C 69 8A                            JMP     sub_8A69
ROM:8968             ; ---------------------------------------------------------------------------
ROM:8968
ROM:8968             locret_8968:
ROM:8968 60                                  RTS
ROM:8969             ; ---------------------------------------------------------------------------
ROM:8969
ROM:8969             loc_8969:
ROM:8969 A5 67                               LDA     67h
ROM:896B C5 69                               CMP     69h
ROM:896D B0 EA                               BCS     loc_8959
ROM:896F
ROM:896F             loc_896F:
ROM:896F 20 69 8A                            JSR     sub_8A69
ROM:8972 A5 6C                               LDA     6Ch
ROM:8974 10 31                               BPL     loc_89A7
ROM:8976 A5 67                               LDA     67h
ROM:8978 0A                                  ASL     A
ROM:8979 85 6F                               STA     6Fh
ROM:897B A5 68                               LDA     68h
ROM:897D 2A                                  ROL     A
ROM:897E 85 70                               STA     70h
ROM:8980 A5 6F                               LDA     6Fh
ROM:8982 0A                                  ASL     A
ROM:8983 85 6F                               STA     6Fh
ROM:8985 A5 70                               LDA     70h
ROM:8987 2A                                  ROL     A
ROM:8988 85 70                               STA     70h
ROM:898A A5 6B                               LDA     6Bh
ROM:898C 18                                  CLC
ROM:898D 65 6F                               ADC     6Fh
ROM:898F 85 6F                               STA     6Fh
ROM:8991 A5 6C                               LDA     6Ch
ROM:8993 65 70                               ADC     70h
ROM:8995 85 70                               STA     70h
ROM:8997 A9 06                               LDA     #6
ROM:8999 18                                  CLC
ROM:899A 65 6F                               ADC     6Fh
ROM:899C 85 6B                               STA     6Bh
ROM:899E A9 00                               LDA     #0
ROM:89A0 65 70                               ADC     70h
ROM:89A2 85 6C                               STA     6Ch
ROM:89A4 4C 14 8A                            JMP     loc_8A14
ROM:89A7             ; ---------------------------------------------------------------------------
ROM:89A7
ROM:89A7             loc_89A7:
ROM:89A7 A5 67                               LDA     67h
ROM:89A9 38                                  SEC
ROM:89AA E5 69                               SBC     69h
ROM:89AC 85 6F                               STA     6Fh
ROM:89AE A5 68                               LDA     68h
ROM:89B0 E5 6A                               SBC     6Ah
ROM:89B2 85 70                               STA     70h
ROM:89B4 A5 6F                               LDA     6Fh
ROM:89B6 0A                                  ASL     A
ROM:89B7 85 6F                               STA     6Fh
ROM:89B9 A5 70                               LDA     70h
ROM:89BB 2A                                  ROL     A
ROM:89BC 85 70                               STA     70h
ROM:89BE A5 6F                               LDA     6Fh
ROM:89C0 0A                                  ASL     A
ROM:89C1 85 6F                               STA     6Fh
ROM:89C3 A5 70                               LDA     70h
ROM:89C5 2A                                  ROL     A
ROM:89C6 85 70                               STA     70h
ROM:89C8 A5 6F                               LDA     6Fh
ROM:89CA 18                                  CLC
ROM:89CB 69 10                               ADC     #10h
ROM:89CD 85 6F                               STA     6Fh
ROM:89CF A5 70                               LDA     70h
ROM:89D1 69 00                               ADC     #0
ROM:89D3 85 70                               STA     70h
ROM:89D5 A5 6F                               LDA     6Fh
ROM:89D7 18                                  CLC
ROM:89D8 65 6B                               ADC     6Bh
ROM:89DA 85 6B                               STA     6Bh
ROM:89DC A5 70                               LDA     70h
ROM:89DE 65 6C                               ADC     6Ch
ROM:89E0 85 6C                               STA     6Ch
ROM:89E2 A5 69                               LDA     69h
ROM:89E4 08                                  PHP
ROM:89E5 C6 69                               DEC     69h
ROM:89E7 28                                  PLP
ROM:89E8 D0 02                               BNE     loc_89EC
ROM:89EA C6 6A                               DEC     6Ah
ROM:89EC
ROM:89EC             loc_89EC:
ROM:89EC E6 75                               INC     75h
ROM:89EE D0 02                               BNE     loc_89F2
ROM:89F0 E6 79                               INC     79h
ROM:89F2
ROM:89F2             loc_89F2:
ROM:89F2 C6 84                               DEC     84h
ROM:89F4 10 06                               BPL     loc_89FC
ROM:89F6 A9 06                               LDA     #6
ROM:89F8 85 84                               STA     84h
ROM:89FA C6 80                               DEC     80h
ROM:89FC
ROM:89FC             loc_89FC:
ROM:89FC E6 81                               INC     81h
ROM:89FE A5 81                               LDA     81h
ROM:8A00 C9 07                               CMP     #7
ROM:8A02 D0 06                               BNE     loc_8A0A
ROM:8A04 A9 00                               LDA     #0
ROM:8A06 85 81                               STA     81h
ROM:8A08 E6 7D                               INC     7Dh
ROM:8A0A
ROM:8A0A             loc_8A0A:
ROM:8A0A C6 78                               DEC     78h
ROM:8A0C A5 78                               LDA     78h
ROM:8A0E C9 FF                               CMP     #0FFh
ROM:8A10 D0 02                               BNE     loc_8A14
ROM:8A12 C6 7C                               DEC     7Ch
ROM:8A14
ROM:8A14             loc_8A14:
ROM:8A14 E6 67                               INC     67h
ROM:8A16 D0 02                               BNE     loc_8A1A
ROM:8A18 E6 68                               INC     68h
ROM:8A1A
ROM:8A1A             loc_8A1A:
ROM:8A1A E6 83                               INC     83h
ROM:8A1C A5 83                               LDA     83h
ROM:8A1E C9 07                               CMP     #7
ROM:8A20 D0 06                               BNE     loc_8A28
ROM:8A22 A9 00                               LDA     #0
ROM:8A24 85 83                               STA     83h
ROM:8A26 E6 7F                               INC     7Fh
ROM:8A28
ROM:8A28             loc_8A28:
ROM:8A28 C6 76                               DEC     76h
ROM:8A2A A5 76                               LDA     76h
ROM:8A2C C9 FF                               CMP     #0FFh
ROM:8A2E D0 02                               BNE     loc_8A32
ROM:8A30 C6 7A                               DEC     7Ah
ROM:8A32
ROM:8A32             loc_8A32:
ROM:8A32 E6 77                               INC     77h
ROM:8A34 D0 02                               BNE     loc_8A38
ROM:8A36 E6 7B                               INC     7Bh
ROM:8A38
ROM:8A38             loc_8A38:
ROM:8A38 C6 82                               DEC     82h
ROM:8A3A 10 06                               BPL     loc_8A42
ROM:8A3C A9 06                               LDA     #6
ROM:8A3E 85 82                               STA     82h
ROM:8A40 C6 7E                               DEC     7Eh
ROM:8A42
ROM:8A42             loc_8A42:
ROM:8A42 4C 51 89                            JMP     loc_8951
ROM:8A42             ; End of function render_wipe_circle
ROM:8A42
ROM:8A45
ROM:8A45             ; =============== S U B R O U T I N E =======================================
ROM:8A45
ROM:8A45
ROM:8A45             sub_8A45:
ROM:8A45 86 6F                               STX     6Fh
ROM:8A47 A0 08                               LDY     #8
ROM:8A49 38                                  SEC
ROM:8A4A E9 07                               SBC     #7
ROM:8A4C
ROM:8A4C             loc_8A4C:
ROM:8A4C 08                                  PHP
ROM:8A4D 26 70                               ROL     70h
ROM:8A4F 06 6F                               ASL     6Fh
ROM:8A51 2A                                  ROL     A
ROM:8A52 28                                  PLP
ROM:8A53 90 05                               BCC     loc_8A5A
ROM:8A55 E9 07                               SBC     #7
ROM:8A57 4C 5C 8A                            JMP     loc_8A5C
ROM:8A5A             ; ---------------------------------------------------------------------------
ROM:8A5A
ROM:8A5A             loc_8A5A:
ROM:8A5A 69 07                               ADC     #7
ROM:8A5C
ROM:8A5C             loc_8A5C:
ROM:8A5C 88                                  DEY
ROM:8A5D D0 ED                               BNE     loc_8A4C
ROM:8A5F B0 03                               BCS     loc_8A64
ROM:8A61 69 07                               ADC     #7
ROM:8A63 18                                  CLC
ROM:8A64
ROM:8A64             loc_8A64:
ROM:8A64 26 70                               ROL     70h
ROM:8A66 A4 70                               LDY     70h
ROM:8A68 60                                  RTS
ROM:8A68             ; End of function sub_8A45
ROM:8A68
ROM:8A69
ROM:8A69             ; =============== S U B R O U T I N E =======================================
ROM:8A69
ROM:8A69
ROM:8A69             sub_8A69:
ROM:8A69 A4 7C                               LDY     7Ch
ROM:8A6B D0 1F                               BNE     loc_8A8C
ROM:8A6D A4 78                               LDY     78h
ROM:8A6F C0 B0                               CPY     #0B0h ; '°'
ROM:8A71 B0 19                               BCS     loc_8A8C
ROM:8A73 20 3E 7A                            JSR     get_line_addr_pgs_1_2
ROM:8A76 A4 7F                               LDY     7Fh
ROM:8A78 C0 28                               CPY     #28h ; '('
ROM:8A7A B0 05                               BCS     loc_8A81
ROM:8A7C A6 83                               LDX     83h
ROM:8A7E 20 F6 8A                            JSR     sub_8AF6
ROM:8A81
ROM:8A81             loc_8A81:
ROM:8A81 A4 7E                               LDY     7Eh
ROM:8A83 C0 28                               CPY     #28h ; '('
ROM:8A85 B0 05                               BCS     loc_8A8C
ROM:8A87 A6 82                               LDX     82h
ROM:8A89 20 F6 8A                            JSR     sub_8AF6
ROM:8A8C
ROM:8A8C             loc_8A8C:
ROM:8A8C A4 79                               LDY     79h
ROM:8A8E D0 1F                               BNE     loc_8AAF
ROM:8A90 A4 75                               LDY     75h
ROM:8A92 C0 B0                               CPY     #0B0h ; '°'
ROM:8A94 B0 19                               BCS     loc_8AAF
ROM:8A96 20 3E 7A                            JSR     get_line_addr_pgs_1_2
ROM:8A99 A4 7F                               LDY     7Fh
ROM:8A9B C0 28                               CPY     #28h ; '('
ROM:8A9D B0 05                               BCS     loc_8AA4
ROM:8A9F A6 83                               LDX     83h
ROM:8AA1 20 F6 8A                            JSR     sub_8AF6
ROM:8AA4
ROM:8AA4             loc_8AA4:
ROM:8AA4 A4 7E                               LDY     7Eh
ROM:8AA6 C0 28                               CPY     #28h ; '('
ROM:8AA8 B0 05                               BCS     loc_8AAF
ROM:8AAA A6 82                               LDX     82h
ROM:8AAC 20 F6 8A                            JSR     sub_8AF6
ROM:8AAF
ROM:8AAF             loc_8AAF:
ROM:8AAF A4 7B                               LDY     7Bh
ROM:8AB1 D0 1F                               BNE     loc_8AD2
ROM:8AB3 A4 77                               LDY     77h
ROM:8AB5 C0 B0                               CPY     #0B0h ; '°'
ROM:8AB7 B0 19                               BCS     loc_8AD2
ROM:8AB9 20 3E 7A                            JSR     get_line_addr_pgs_1_2
ROM:8ABC A4 80                               LDY     80h
ROM:8ABE C0 28                               CPY     #28h ; '('
ROM:8AC0 B0 05                               BCS     loc_8AC7
ROM:8AC2 A6 84                               LDX     84h
ROM:8AC4 20 F6 8A                            JSR     sub_8AF6
ROM:8AC7
ROM:8AC7             loc_8AC7:
ROM:8AC7 A4 7D                               LDY     7Dh
ROM:8AC9 C0 28                               CPY     #28h ; '('
ROM:8ACB B0 05                               BCS     loc_8AD2
ROM:8ACD A6 81                               LDX     81h
ROM:8ACF 20 F6 8A                            JSR     sub_8AF6
ROM:8AD2
ROM:8AD2             loc_8AD2:
ROM:8AD2 A4 7A                               LDY     7Ah
ROM:8AD4 D0 1F                               BNE     locret_8AF5
ROM:8AD6 A4 76                               LDY     76h
ROM:8AD8 C0 B0                               CPY     #0B0h ; '°'
ROM:8ADA B0 19                               BCS     locret_8AF5
ROM:8ADC 20 3E 7A                            JSR     get_line_addr_pgs_1_2
ROM:8ADF A4 80                               LDY     80h
ROM:8AE1 C0 28                               CPY     #28h ; '('
ROM:8AE3 B0 05                               BCS     loc_8AEA
ROM:8AE5 A6 84                               LDX     84h
ROM:8AE7 20 F6 8A                            JSR     sub_8AF6
ROM:8AEA
ROM:8AEA             loc_8AEA:
ROM:8AEA A4 7D                               LDY     7Dh
ROM:8AEC C0 28                               CPY     #28h ; '('
ROM:8AEE B0 05                               BCS     locret_8AF5
ROM:8AF0 A6 81                               LDX     81h
ROM:8AF2 4C F6 8A                            JMP     sub_8AF6
ROM:8AF5             ; ---------------------------------------------------------------------------
ROM:8AF5
ROM:8AF5             locret_8AF5:
ROM:8AF5 60                                  RTS
ROM:8AF5             ; End of function sub_8A69
ROM:8AF5
ROM:8AF6
ROM:8AF6             ; =============== S U B R O U T I N E =======================================
ROM:8AF6
ROM:8AF6
ROM:8AF6             sub_8AF6:
ROM:8AF6 A5 72                               LDA     72h
ROM:8AF8 D0 08                               BNE     loc_8B02
ROM:8AFA B1 0C                               LDA     (0Ch),Y
ROM:8AFC 3D 0C 8B                            AND     8B0Ch,X
ROM:8AFF 91 0C                               STA     (0Ch),Y
ROM:8B01 60                                  RTS
ROM:8B02             ; ---------------------------------------------------------------------------
ROM:8B02
ROM:8B02             loc_8B02:
ROM:8B02 B1 0E                               LDA     (0Eh),Y
ROM:8B04 3D 13 8B                            AND     8B13h,X
ROM:8B07 11 0C                               ORA     (0Ch),Y
ROM:8B09 91 0C                               STA     (0Ch),Y
ROM:8B0B 60                                  RTS
ROM:8B0B             ; End of function sub_8AF6
ROM:8B0B
ROM:8B0B             ; ---------------------------------------------------------------------------
ROM:8B0C F0 F0 F0 F0+                        .db 0F0h, 0F0h, 0F0h, 0F0h, 8Fh, 8Fh, 8Fh, 8Fh, 8Fh, 8Fh
ROM:8B0C 8F 8F 8F 8F+                        .db 8Fh, 0F0h, 0F0h, 0F0h
ROM:8B1A
ROM:8B1A             ; =============== S U B R O U T I N E =======================================
ROM:8B1A
ROM:8B1A
ROM:8B1A             game_over_animation:
ROM:8B1A A9 01                               LDA     #1
ROM:8B1C 8D 4B 8D                            STA     game_over_loop_cnt
ROM:8B1F A9 20                               LDA     #20h ; ' '              ; hires page 1
ROM:8B21 85 1F                               STA     hires_page_msb_1
ROM:8B23
ROM:8B23             loc_8B23:
ROM:8B23 20 CF 8B                            JSR     game_over_frame_1_11
ROM:8B26 20 BE 8B                            JSR     game_over_frame_2_10
ROM:8B29 20 AD 8B                            JSR     game_over_frame_3_9
ROM:8B2C 20 9C 8B                            JSR     game_over_frame_4_8
ROM:8B2F 20 8B 8B                            JSR     game_over_frame_5_7
ROM:8B32 20 7A 8B                            JSR     game_over_frame_6
ROM:8B35 20 8B 8B                            JSR     game_over_frame_5_7
ROM:8B38 20 9C 8B                            JSR     game_over_frame_4_8
ROM:8B3B 20 AD 8B                            JSR     game_over_frame_3_9
ROM:8B3E 20 BE 8B                            JSR     game_over_frame_2_10
ROM:8B41 20 CF 8B                            JSR     game_over_frame_1_11
ROM:8B44 20 24 8C                            JSR     game_over_frame_12_20
ROM:8B47 20 13 8C                            JSR     game_over_frame_13_19
ROM:8B4A 20 02 8C                            JSR     game_over_frame_14_18
ROM:8B4D 20 F1 8B                            JSR     game_over_frame_15_17
ROM:8B50 20 E0 8B                            JSR     game_over_frame_16
ROM:8B53 20 F1 8B                            JSR     game_over_frame_15_17
ROM:8B56 20 02 8C                            JSR     game_over_frame_14_18
ROM:8B59 20 13 8C                            JSR     game_over_frame_13_19
ROM:8B5C 20 24 8C                            JSR     game_over_frame_12_20
ROM:8B5F AD 4B 8D                            LDA     game_over_loop_cnt
ROM:8B62 C9 64                               CMP     #100                    ; done?
ROM:8B64 90 BD                               BCC     loc_8B23                ; no, loop
ROM:8B66 20 CF 8B                            JSR     game_over_frame_1_11
ROM:8B69 20 BE 8B                            JSR     game_over_frame_2_10
ROM:8B6C 20 AD 8B                            JSR     game_over_frame_3_9
ROM:8B6F 20 9C 8B                            JSR     game_over_frame_4_8
ROM:8B72 20 8B 8B                            JSR     game_over_frame_5_7
ROM:8B75 20 7A 8B                            JSR     game_over_frame_6
ROM:8B78 18                                  CLC
ROM:8B79 60                                  RTS
ROM:8B79             ; End of function game_over_animation
ROM:8B79
ROM:8B7A
ROM:8B7A             ; =============== S U B R O U T I N E =======================================
ROM:8B7A
ROM:8B7A
ROM:8B7A             game_over_frame_6:
ROM:8B7A 20 E5 8C                            JSR     render_game_over
ROM:8B7A             ; End of function game_over_frame_6
ROM:8B7A
ROM:8B7A             ; ---------------------------------------------------------------------------
ROM:8B7D 00 01 02 03+                        .db 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0Ah, 2, 1, 0
ROM:8B8B
ROM:8B8B             ; =============== S U B R O U T I N E =======================================
ROM:8B8B
ROM:8B8B
ROM:8B8B             game_over_frame_5_7:
ROM:8B8B 20 E5 8C                            JSR     render_game_over
ROM:8B8B             ; End of function game_over_frame_5_7
ROM:8B8B
ROM:8B8B             ; ---------------------------------------------------------------------------
ROM:8B8E 00 00 01 02+                        .db 0, 0, 1, 2, 3, 4, 5, 7, 9, 0Ah, 2, 1, 0, 0
ROM:8B9C
ROM:8B9C             ; =============== S U B R O U T I N E =======================================
ROM:8B9C
ROM:8B9C
ROM:8B9C             game_over_frame_4_8:
ROM:8B9C 20 E5 8C                            JSR     render_game_over
ROM:8B9C             ; End of function game_over_frame_4_8
ROM:8B9C
ROM:8B9C             ; ---------------------------------------------------------------------------
ROM:8B9F 00 00 00 01+                        .db 0, 0, 0, 1, 2, 3, 4, 9, 0Ah, 2, 1, 0, 0, 0
ROM:8BAD
ROM:8BAD             ; =============== S U B R O U T I N E =======================================
ROM:8BAD
ROM:8BAD
ROM:8BAD             game_over_frame_3_9:
ROM:8BAD 20 E5 8C                            JSR     render_game_over
ROM:8BAD             ; End of function game_over_frame_3_9
ROM:8BAD
ROM:8BAD             ; ---------------------------------------------------------------------------
ROM:8BB0 00 00 00 00+                        .db 0, 0, 0, 0, 1, 2, 3, 0Ah, 2, 1, 0, 0, 0, 0
ROM:8BBE
ROM:8BBE             ; =============== S U B R O U T I N E =======================================
ROM:8BBE
ROM:8BBE
ROM:8BBE             game_over_frame_2_10:
ROM:8BBE 20 E5 8C                            JSR     render_game_over
ROM:8BBE             ; End of function game_over_frame_2_10
ROM:8BBE
ROM:8BBE             ; ---------------------------------------------------------------------------
ROM:8BC1 00 00 00 00+                        .db 0, 0, 0, 0, 0, 1, 3, 0Ah, 1, 0, 0, 0, 0, 0
ROM:8BCF
ROM:8BCF             ; =============== S U B R O U T I N E =======================================
ROM:8BCF
ROM:8BCF
ROM:8BCF             game_over_frame_1_11:
ROM:8BCF 20 E5 8C                            JSR     render_game_over
ROM:8BCF             ; End of function game_over_frame_1_11
ROM:8BCF
ROM:8BCF             ; ---------------------------------------------------------------------------
ROM:8BD2 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0
ROM:8BE0
ROM:8BE0             ; =============== S U B R O U T I N E =======================================
ROM:8BE0
ROM:8BE0
ROM:8BE0             game_over_frame_16:
ROM:8BE0 20 E5 8C                            JSR     render_game_over
ROM:8BE0             ; End of function game_over_frame_16
ROM:8BE0
ROM:8BE0             ; ---------------------------------------------------------------------------
ROM:8BE3 00 01 02 0A+                        .db 0, 1, 2, 0Ah, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0
ROM:8BF1
ROM:8BF1             ; =============== S U B R O U T I N E =======================================
ROM:8BF1
ROM:8BF1
ROM:8BF1             game_over_frame_15_17:
ROM:8BF1 20 E5 8C                            JSR     render_game_over
ROM:8BF1             ; End of function game_over_frame_15_17
ROM:8BF1
ROM:8BF1             ; ---------------------------------------------------------------------------
ROM:8BF4 00 00 01 02+                        .db 0, 0, 1, 2, 0Ah, 9, 7, 5, 4, 3, 2, 1, 0, 0
ROM:8C02
ROM:8C02             ; =============== S U B R O U T I N E =======================================
ROM:8C02
ROM:8C02
ROM:8C02             game_over_frame_14_18:
ROM:8C02 20 E5 8C                            JSR     render_game_over
ROM:8C02             ; End of function game_over_frame_14_18
ROM:8C02
ROM:8C02             ; ---------------------------------------------------------------------------
ROM:8C05 00 00 00 01+                        .db 0, 0, 0, 1, 2, 0Ah, 9, 4, 3, 2, 1, 0, 0, 0
ROM:8C13
ROM:8C13             ; =============== S U B R O U T I N E =======================================
ROM:8C13
ROM:8C13
ROM:8C13             game_over_frame_13_19:
ROM:8C13 20 E5 8C                            JSR     render_game_over
ROM:8C13             ; End of function game_over_frame_13_19
ROM:8C13
ROM:8C13             ; ---------------------------------------------------------------------------
ROM:8C16 00 00 00 00+                        .db 0, 0, 0, 0, 1, 2, 0Ah, 3, 2, 1, 0, 0, 0, 0
ROM:8C24
ROM:8C24             ; =============== S U B R O U T I N E =======================================
ROM:8C24
ROM:8C24
ROM:8C24             game_over_frame_12_20:
ROM:8C24 20 E5 8C                            JSR     render_game_over
ROM:8C24             ; End of function game_over_frame_12_20
ROM:8C24
ROM:8C24             ; ---------------------------------------------------------------------------
ROM:8C27 00 00 00 00+byte_8C27:              .db 0, 0, 0, 0, 0, 1, 0Ah, 3, 1, 0, 0, 0, 0, 0
ROM:8C35 80 80 80 80+                        .db 80h, 80h, 80h, 80h, 80h, 80h, 80h, 80h, 80h, 80h, 80h
ROM:8C35 80 80 80 80+                        .db 80h, 80h, 80h
ROM:8C43 C0 AA D5 AA+                        .db 0C0h, 0AAh, 0D5h, 0AAh, 0D5h, 0AAh, 0D5h, 0AAh, 0D5h
ROM:8C43 D5 AA D5 AA+                        .db 0AAh, 0D5h, 0AAh, 0D5h, 80h
ROM:8C51 90 80 80 80+                        .db 90h, 80h, 80h, 80h, 80h, 80h, 80h, 80h, 80h, 80h, 80h
ROM:8C51 80 80 80 80+                        .db 80h, 80h, 82h
ROM:8C5F 90 AA D1 A2+                        .db 90h, 0AAh, 0D1h, 0A2h, 0D5h, 0A8h, 85h, 0A8h, 0C5h, 0A2h
ROM:8C5F D5 A8 85 A8+                        .db 0D4h, 0A2h, 95h, 82h
ROM:8C6D 90 82 91 A2+                        .db 90h, 82h, 91h, 0A2h, 0C5h, 0A8h, 80h, 88h, 0C5h, 0A2h
ROM:8C6D C5 A8 80 88+                        .db 94h, 0A0h, 90h, 82h
ROM:8C7B 90 82 90 A2+                        .db 90h, 82h, 90h, 0A2h, 0C4h, 0A8h, 80h, 88h, 0C5h, 0A2h
ROM:8C7B C4 A8 80 88+                        .db 94h, 0A0h, 90h, 82h
ROM:8C89 90 82 90 A2+                        .db 90h, 82h, 90h, 0A2h, 0C4h, 0A8h, 81h, 88h, 0C4h, 0A2h
ROM:8C89 C4 A8 81 88+                        .db 0D4h, 0A0h, 95h, 82h
ROM:8C97 90 A2 D1 A2+                        .db 90h, 0A2h, 0D1h, 0A2h, 0C4h, 88h, 80h, 88h, 0C4h, 0A2h
ROM:8C97 C4 88 80 88+                        .db 84h, 0A0h, 85h, 82h
ROM:8CA5 90 82 91 A2+                        .db 90h, 82h, 91h, 0A2h, 0C4h, 88h, 80h, 88h, 0C4h, 0AAh
ROM:8CA5 C4 88 80 88+                        .db 84h, 0A0h, 85h, 82h
ROM:8CB3 90 82 91 A2+                        .db 90h, 82h, 91h, 0A2h, 0C4h, 88h, 80h, 88h, 0C4h, 8Ah
ROM:8CB3 C4 88 80 88+                        .db 84h, 0A0h, 91h, 82h
ROM:8CC1 90 AA 91 A2+                        .db 90h, 0AAh, 91h, 0A2h, 0C4h, 0A8h, 85h, 0A8h, 85h, 82h
ROM:8CC1 C4 A8 85 A8+                        .db 0D4h, 0A2h, 91h, 82h
ROM:8CCF 28 8C       off_8CCF:               .dw byte_8C27+1
ROM:8CD1 36 8C                               .dw 8C36h
ROM:8CD3 44 8C                               .dw 8C44h
ROM:8CD5 52 8C                               .dw 8C52h
ROM:8CD7 60 8C                               .dw 8C60h
ROM:8CD9 6E 8C                               .dw 8C6Eh
ROM:8CDB 7C 8C                               .dw 8C7Ch
ROM:8CDD 8A 8C                               .dw 8C8Ah
ROM:8CDF 98 8C                               .dw 8C98h
ROM:8CE1 A6 8C                               .dw 8CA6h
ROM:8CE3 B4 8C                               .dw 8CB4h
ROM:8CE5             ; ---------------------------------------------------------------------------
ROM:8CE5
ROM:8CE5             render_game_over:
ROM:8CE5 68                                  PLA
ROM:8CE6 85 0A                               STA     word_A
ROM:8CE8 68                                  PLA
ROM:8CE9 85 0B                               STA     word_A+1                ; data table address
ROM:8CEB A0 50                               LDY     #80
ROM:8CED 84 86                               STY     row                     ; set row
ROM:8CEF D0 21                               BNE     loc_8D12                ; (always)
ROM:8CF1
ROM:8CF1             game_over_do_scanline:                                  ; Y=scanline
ROM:8CF1 20 31 7A                            JSR     calc_line_addr_for_scanline
ROM:8CF4 A0 00                               LDY     #0
ROM:8CF6 B1 0A                               LDA     (word_A),Y              ; get entry from table in code
ROM:8CF8 0A                                  ASL     A                       ; *2
ROM:8CF9 AA                                  TAX                             ; X=entry in game_over_anim_data_tbl
ROM:8CFA BD CF 8C                            LDA     off_8CCF,X
ROM:8CFD 8D 09 8D                            STA     8D09h                   ; (self-modifying code)
ROM:8D00 BD D0 8C                            LDA     (off_8CCF+1),X
ROM:8D03 8D 0A 8D                            STA     8D0Ah                   ; (self-modifying code)
ROM:8D06 A0 0D                               LDY     #13                     ; starting column
ROM:8D08
ROM:8D08             loc_8D08:                                               ; (address was modified)
ROM:8D08 B9 08 8D                            LDA     8D08h,Y                 ; get data byte
ROM:8D0B 91 0C                               STA     (lsb_line_addr_pg1),Y   ; store on screen
ROM:8D0D C8                                  INY                             ; next address
ROM:8D0E C0 1B                               CPY     #27                     ; col=27 (done 14 bytes)?
ROM:8D10 90 F6                               BCC     loc_8D08                ; no, loop
ROM:8D12
ROM:8D12             loc_8D12:
ROM:8D12 20 4C 8D                            JSR     game_over_anim_tbl_next_byte
ROM:8D15 E6 86                               INC     row
ROM:8D17 A4 86                               LDY     row
ROM:8D19 C0 5F                               CPY     #95                     ; last row?
ROM:8D1B 90 D4                               BCC     game_over_do_scanline   ; no, loop
ROM:8D1D AE 4B 8D                            LDX     game_over_loop_cnt      ; used as delay counter for slow down effect
ROM:8D20 A0 FF                               LDY     #0FFh                   ; delay count
ROM:8D22
ROM:8D22             loc_8D22:
ROM:8D22 88                                  DEY
ROM:8D23 D0 FD                               BNE     loc_8D22                ; delay
ROM:8D25 CA                                  DEX                             ; done?
ROM:8D26 D0 FA                               BNE     loc_8D22                ; no, loop
ROM:8D28 EE 4B 8D                            INC     game_over_loop_cnt
ROM:8D2B A5 95                               LDA     paddles_detected
ROM:8D2D C9 CB                               CMP     #0CBh ; 'Ë'             ; detected?
ROM:8D2F F0 0A                               BEQ     loc_8D3B                ; no, skip
ROM:8D31 AD 62 C0                            LDA     0C062h
ROM:8D34 30 0B                               BMI     exit_game_over_animation
ROM:8D36 AD 61 C0                            LDA     0C061h
ROM:8D39 30 06                               BMI     exit_game_over_animation
ROM:8D3B
ROM:8D3B             loc_8D3B:                                               ; read keyboard
ROM:8D3B AD 00 C0                            LDA     0C000h
ROM:8D3E 30 01                               BMI     exit_game_over_animation ; key pressed? yes, go
ROM:8D40 60                                  RTS
ROM:8D41             ; ---------------------------------------------------------------------------
ROM:8D41
ROM:8D41             exit_game_over_animation:
ROM:8D41 68                                  PLA
ROM:8D42 68                                  PLA                             ; discard return address
ROM:8D43 38                                  SEC
ROM:8D44 AD 00 C0                            LDA     0C000h                  ; read keyboard
ROM:8D47 8D 10 C0                            STA     0C010h                  ; strobe keyboard
ROM:8D4A 60                                  RTS
ROM:8D4A             ; ---------------------------------------------------------------------------
ROM:8D4B 9D          game_over_loop_cnt:     .db 9Dh
ROM:8D4C
ROM:8D4C             ; =============== S U B R O U T I N E =======================================
ROM:8D4C
ROM:8D4C
ROM:8D4C             game_over_anim_tbl_next_byte:
ROM:8D4C E6 0A                               INC     0Ah
ROM:8D4E D0 02                               BNE     locret_8D52
ROM:8D50 E6 0B                               INC     0Bh
ROM:8D52
ROM:8D52             locret_8D52:
ROM:8D52 60                                  RTS
ROM:8D52             ; End of function game_over_anim_tbl_next_byte
ROM:8D52
ROM:8D52             ; ---------------------------------------------------------------------------
ROM:8D53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8D53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8D53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8D53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8D53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8D53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8D53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8D53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8D53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8D53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E00             ; ---------------------------------------------------------------------------
ROM:8E00
ROM:8E00             loc_8E00:
ROM:8E00 A9 44                               LDA     #44h ; 'D'
ROM:8E02 8D 78 04                            STA     478h
ROM:8E05 A9 00                               LDA     #0
ROM:8E07 20 A0 B9                            JSR     sub_B9A0
ROM:8E0A EA                                  NOP
ROM:8E0B EA                                  NOP
ROM:8E0C EA                                  NOP
ROM:8E0D EA                                  NOP
ROM:8E0E EA                                  NOP
ROM:8E0F EA                                  NOP
ROM:8E10 A9 20                               LDA     #20h ; ' '
ROM:8E12 85 4F                               STA     4Fh
ROM:8E14
ROM:8E14             loc_8E14:
ROM:8E14 88                                  DEY
ROM:8E15 D0 09                               BNE     loc_8E20
ROM:8E17 C6 4F                               DEC     4Fh
ROM:8E19 D0 05                               BNE     loc_8E20
ROM:8E1B 4C AF BE                            JMP     loc_BEAF
ROM:8E1E             ; ---------------------------------------------------------------------------
ROM:8E1E EA                                  NOP
ROM:8E1F EA                                  NOP
ROM:8E20
ROM:8E20             loc_8E20:
ROM:8E20 BD 8C C0                            LDA     0C08Ch,X
ROM:8E23 10 FB                               BPL     loc_8E20
ROM:8E25
ROM:8E25             loc_8E25:
ROM:8E25 C9 D4                               CMP     #0D4h ; 'Ô'
ROM:8E27 D0 EB                               BNE     loc_8E14
ROM:8E29 EA                                  NOP
ROM:8E2A
ROM:8E2A             loc_8E2A:
ROM:8E2A BD 8C C0                            LDA     0C08Ch,X
ROM:8E2D 10 FB                               BPL     loc_8E2A
ROM:8E2F
ROM:8E2F             loc_8E2F:
ROM:8E2F C9 D5                               CMP     #0D5h ; 'Õ'
ROM:8E31 D0 F2                               BNE     loc_8E25
ROM:8E33 EA                                  NOP
ROM:8E34
ROM:8E34             loc_8E34:
ROM:8E34 BD 8C C0                            LDA     0C08Ch,X
ROM:8E37 10 FB                               BPL     loc_8E34
ROM:8E39 C9 D6                               CMP     #0D6h ; 'Ö'
ROM:8E3B D0 F2                               BNE     loc_8E2F
ROM:8E3D BD 88 C0                            LDA     0C088h,X
ROM:8E40 20 98 80                            JSR     loc_8098
ROM:8E43 4C B2 7B                            JMP     loc_7BB2
ROM:8E43             ; ---------------------------------------------------------------------------
ROM:8E46 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E50             ; ---------------------------------------------------------------------------
ROM:8E50
ROM:8E50             loc_8E50:
ROM:8E50 4C B5 B7                            JMP     loc_B7B5
ROM:8E50             ; ---------------------------------------------------------------------------
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:8E53 00 00 00 00+                        .db 0, 0, 0, 0, 0
ROM:9B00 16 4C 66 02+attract_move_tbl:       .db 16h, 4Ch, 66h, 2, 55h, 1, 66h, 2, 36h, 18h, 55h, 1, 44h
ROM:9B00 55 01 66 02+                        .db 1, 66h, 14h, 36h, 0Dh, 30h, 17h, 60h, 8, 66h, 3, 16h
ROM:9B00 36 18 55 01+                        .db 16h, 66h, 4, 36h, 23h, 32h, 1, 62h, 1, 55h, 1, 66h, 20h
ROM:9B00 44 01 66 14+                        .db 16h, 7, 66h, 2, 36h, 25h, 30h, 14h, 60h, 0Eh, 10h, 11h
ROM:9B00 36 0D 30 17+                        .db 16h, 25h, 10h, 8, 16h, 23h, 10h, 6, 60h, 2, 30h, 0Fh
ROM:9B00 60 08 66 03+                        .db 36h, 17h, 66h, 2, 16h, 7, 55h, 1, 66h, 1Eh, 16h, 38h
ROM:9B00 16 16 66 04+                        .db 44h, 1, 16h, 5, 44h, 1, 16h, 7, 44h, 1, 36h, 7, 55h
ROM:9B00 36 23 32 01+                        .db 1, 36h, 4, 55h, 1, 16h, 3, 55h, 1, 16h, 3, 36h, 0Bh
ROM:9B00 62 01 55 01+                        .db 55h, 1, 16h, 3, 36h, 0Eh, 44h, 1, 66h, 1, 60h, 0Ch, 30h
ROM:9B00 66 20 16 07+                        .db 29h, 60h, 2, 44h, 1, 16h, 2Bh, 10h, 4, 60h, 5, 30h, 1
ROM:9B00 66 02 36 25+                        .db 36h, 67h, 32h, 1, 44h, 1, 66h, 2Bh, 36h, 0Ch, 30h, 15h
ROM:9B00 30 14 60 0E+                        .db 36h, 12h, 55h, 1, 16h, 3, 55h, 1, 36h, 5, 55h, 1, 16h
ROM:9B00 10 11 16 25+                        .db 3, 36h, 8, 66h, 2, 16h, 4Ah, 10h, 4, 60h, 7, 30h, 9
ROM:9B00 10 08 16 23+                        .db 36h, 15h, 66h, 0Ah, 16h, 0Dh, 44h, 1, 66h, 2, 16h, 4
ROM:9B00 10 06 60 02+                        .db 44h, 1, 16h, 2, 44h, 6, 16h, 4, 44h, 1, 16h, 2, 62h
ROM:9B00 30 0F 36 17+                        .db 15h, 36h, 31h, 66h, 1, 62h, 4, 12h, 6, 44h, 1, 66h, 37h
ROM:9B00 66 02 16 07+                        .db 36h, 1, 30h, 1Dh, 60h, 33h, 36h, 32h, 66h, 3, 16h, 1
ROM:9B00 55 01 66 1E+                        .db 10h, 1Bh, 60h, 5, 36h, 28h, 44h, 1, 66h, 1Fh, 36h, 14h
ROM:9B00 16 38 44 01+                        .db 44h, 1, 55h, 1, 66h, 2Dh, 36h, 1, 30h, 12h, 60h, 25h
ROM:9B00 16 05 44 01+                        .db 66h, 1, 55h, 1, 16h, 0Dh, 66h, 2, 36h, 9, 30h, 0Ah, 36h
ROM:9B00 16 07 44 01+                        .db 4, 44h, 1, 36h, 3, 44h, 1, 36h, 3, 16h, 22h, 44h, 1
ROM:9B00 36 07 55 01+                        .db 16h, 7, 44h, 4, 16h, 3, 44h, 1, 16h, 27h, 12h, 0Eh, 16h
ROM:9B00 36 04 55 01+                        .db 1Eh, 55h, 1, 66h, 19h, 36h, 1, 30h, 3, 60h, 7, 10h, 1Fh
ROM:9B00 16 03 55 01+                        .db 60h, 7, 30h, 9, 36h, 33h, 66h, 4, 10h, 9, 16h, 8, 12h
ROM:9B00 16 03 36 0B+                        .db 1, 62h, 0Ch, 32h, 1, 36h, 32h, 44h, 1, 16h, 0Bh, 44h
ROM:9B00 55 01 16 03+                        .db 1, 16h, 9, 44h, 1, 10h, 2Ch, 60h, 4, 30h, 3, 36h, 0Ah
ROM:9B00 36 0E 44 01+                        .db 44h, 1, 16h, 5, 44h, 1, 36h, 3, 44h, 1, 36h, 3, 44h
ROM:9B00 66 01 60 0C+                        .db 1, 66h, 3, 36h, 3, 55h, 1, 36h, 8, 55h, 1, 66h, 4Ch
ROM:9B00 30 29 60 02+                        .db 16h, 9, 10h, 15h, 44h, 1, 10h, 2Fh, 16h, 9, 12h, 3, 16h
ROM:9B00 44 01 16 2B+                        .db 12h, 66h, 2, 36h, 6, 66h, 2Dh, 55h, 1, 16h, 3, 10h, 1Ch
ROM:9B00 10 04 60 05+                        .db 55h, 1, 16h, 3, 44h, 1, 36h, 3, 32h, 15h, 36h, 0Bh, 30h
ROM:9B00 30 01 36 67+                        .db 0Bh, 60h, 0Ch, 44h, 1, 62h, 0Dh, 12h, 2, 16h, 0Dh, 44h
ROM:9B00 32 01 44 01+                        .db 1, 66h, 20h, 36h, 4, 30h, 17h, 36h, 1Eh, 44h, 1, 36h
ROM:9B00 66 2B 36 0C+                        .db 2Fh, 30h, 8, 60h, 3, 10h, 22h, 16h, 1Bh, 66h, 26h, 55h
ROM:9B00 30 15 36 12+                        .db 7, 16h, 3, 55h, 1, 66h, 1Dh, 16h, 2, 10h, 85h, 60h, 2
ROM:9B00 55 01 16 03+                        .db 30h, 3, 36h, 3, 32h, 0Fh, 36h, 3, 30h, 0Ch, 36h, 20h
ROM:9B00 55 01 36 05+                        .db 66h, 1, 16h, 0Ah, 60h, 6, 66h, 2, 36h, 8, 30h, 5, 60h
ROM:9B00 55 01 16 03+                        .db 2, 66h, 2, 16h, 8, 10h, 1, 60h, 6, 66h, 1, 36h, 8, 30h
ROM:9B00 36 08 66 02+                        .db 4, 60h, 3, 66h, 1, 16h, 8, 10h, 2, 60h, 3, 30h, 1, 36h
ROM:9B00 16 4A 10 04+                        .db 8, 30h, 3, 60h, 3, 16h, 9, 10h, 2, 60h, 3, 30h, 3, 36h
ROM:9B00 60 07 30 09+                        .db 7, 30h, 3, 60h, 2, 10h, 2, 16h, 8, 10h, 1, 60h, 2, 30h
ROM:9B00 36 15 66 0A+                        .db 2, 36h, 0Ah, 30h, 2, 60h, 2, 10h, 3, 16h, 4, 10h, 3
ROM:9B00 16 0D 44 01+                        .db 60h, 5, 30h, 2, 36h, 7, 66h, 16h, 36h, 2, 66h, 33h, 55h
ROM:9B00 66 02 16 04+                        .db 1, 36h, 5, 55h, 1, 36h, 4, 55h, 1, 36h, 3, 55h, 1, 36h
ROM:9B00 44 01 16 02+                        .db 3, 55h, 1, 66h, 0A9h, 62h, 0Ch, 66h, 7, 60h, 0Fh, 55h
ROM:9B00 44 06 16 04+                        .db 1, 66h, 18h, 16h, 2Ah, 55h, 1, 16h, 3, 66h, 1, 60h, 7
ROM:9B00 44 01 16 02+                        .db 66h, 3, 36h, 3, 30h, 1Bh, 36h, 8, 44h, 1, 66h, 18h, 36h
ROM:9B00 62 15 36 31+                        .db 0Fh, 66h, 8, 44h, 1, 66h, 38h, 30h, 0Eh, 66h, 11h, 60h
ROM:9B00 66 01 62 04+                        .db 4, 66h, 49h, 37h, 3, 0, 0, 0, 0, 0, 30h, 3, 0, 0, 0
ROM:9B00 12 06 44 01+                        .db 0, 0, 33h, 7, 0, 0, 0, 0, 0, 30h, 3, 0, 0, 0, 0, 0, 37h
ROM:9B00 66 37 36 01+                        .db 3, 0, 0, 0, 0, 0, 30h, 3, 0, 0, 0, 0, 0, 33h, 7, 0, 0
ROM:9B00 30 1D 60 33+                        .db 0, 0, 0, 30h, 3, 0, 0, 0, 0, 0, 37h, 3, 0, 0, 0, 0, 0
ROM:9B00 36 32 66 03+                        .db 30h, 3, 0, 0, 0, 0, 0, 33h, 7, 0, 0, 0, 0, 0, 30h, 3
ROM:9B00 16 01 10 1B+                        .db 0, 0, 0, 0, 0, 37h, 3, 0, 0, 0, 0, 0, 30h, 3, 0, 0, 0
ROM:9B00 60 05 36 28+                        .db 9, 0, 33h, 7, 0, 0, 0, 0, 0, 30h, 3, 0, 30h, 11h, 11h
ROM:9B00 44 01 66 1F+                        .db 11h, 11h, 11h, 11h, 11h, 11h, 3, 0, 30h, 0, 0, 0, 0
ROM:9B00 36 14 44 01+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:9B00 55 01 66 2D+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:9E00 D1                                  .db 0D1h ; Ñ
ROM:9E01 D5                                  .db 0D5h ; Õ
ROM:9E02 A0 A4 B1 C3+                        .db 0A0h, 0A4h, 0B1h, 0C3h, 0B3h, 0B5h, 8Dh, 0F9h, 0F4h
ROM:9E02 B3 B5 8D F9+                        .db 0E1h, 0E2h, 0ECh, 0E5h, 0A0h, 0C5h, 0D1h, 0D5h, 0A0h
ROM:9E02 F4 E1 E2 EC+                        .db 0A4h, 0B1h, 0C3h, 0B5h, 0B1h, 8Dh, 0E2h, 0F9h, 0F4h
ROM:9E02 E5 A0 C5 D1+                        .db 0E1h, 0E2h, 0ECh, 0E5h, 0A0h, 0C5h, 0D1h, 0D5h, 0A0h
ROM:9E02 D5 A0 A4 B1+                        .db 0A4h, 0B1h, 0C3h, 0B6h, 0B2h, 8Dh, 0E2h, 0E9h, 0F4h
ROM:9E02 C3 B5 B1 8D+                        .db 0E1h, 0E2h, 0ECh, 0E5h, 0A0h, 0C5h, 0D1h, 0D5h, 0A0h
ROM:9E02 E2 F9 F4 E1+                        .db 0A4h, 0B1h, 0C3h, 0B7h, 0C5h, 8Dh, 0F8h, 0E2h, 0F9h
ROM:9E02 E2 EC E5 A0+                        .db 0F4h, 0E1h, 0E2h, 0ECh, 0E5h, 0A0h, 0C5h, 0D1h, 0D5h
ROM:9E02 C5 D1 D5 A0+                        .db 0A0h, 0A4h, 0B1h, 0C3h, 0B9h, 0C1h, 8Dh, 0F8h, 0E2h
ROM:9E02 A4 B1 C3 B6+                        .db 0E9h, 0F4h, 0E1h, 0E2h, 0ECh, 0E5h, 0A0h, 0C5h, 0D1h
ROM:9E02 B2 8D E2 E9+                        .db 0D5h, 0A0h, 0A4h, 0B1h, 0C4h, 0B2h, 0B6h, 8Dh, 0E2h
ROM:9E02 F4 E1 E2 EC+                        .db 0EFh, 0EFh, 0F4h, 0A0h, 0C5h, 0D1h, 0D5h, 0A0h, 0A4h
ROM:9E02 E5 A0 C5 D1+                        .db 0B1h, 0C4h, 0C2h, 0B2h, 8Dh, 0F3h, 0E3h, 0EFh, 0F2h
ROM:9E02 D5 A0 A4 B1+                        .db 0E5h, 0E2h, 0F5h, 0E6h, 0A0h, 0C5h, 0D1h, 0D5h, 0A0h
ROM:9E02 C3 B7 C5 8D+                        .db 0A4h, 0B1h, 0C6h, 0B0h, 0B0h, 8Dh, 0E3h, 0E8h, 0E1h
ROM:9E02 F8 E2 F9 F4+                        .db 0F2h, 0E4h, 0E1h, 0F4h, 0E1h, 0A0h, 0C5h, 0D1h, 0D5h
ROM:9E02 E1 E2 EC E5+                        .db 0A0h, 0A4h, 0C1h, 0C4h, 0B0h, 0B0h, 8Dh, 8Dh, 0F2h, 0F7h
ROM:9E02 A0 C5 D1 D5+                        .db 0F4h, 0F3h, 0F0h, 0E1h, 0F2h, 0EDh, 0A0h, 0C5h, 0D1h
ROM:9E02 A0 A4 B1 C3+                        .db 0D5h, 0A0h, 0A4h, 0C2h, 0B7h, 0C5h, 0B8h, 8Dh, 0F2h
ROM:9E02 B9 C1 8D F8+                        .db 0F7h, 0F4h, 0F3h, 0F6h, 0EFh, 0ECh, 0EDh, 0A0h, 0C5h
ROM:9E02 E2 E9 F4 E1+                        .db 0D1h, 0D5h, 0A0h, 0A4h, 0C2h, 0B7h, 0C5h, 0C2h, 8Dh
ROM:9E02 E2 EC E5 A0+                        .db 0F2h, 0F7h, 0F4h, 0F3h, 0F4h, 0F2h, 0E3h, 0EBh, 0A0h
ROM:9E02 C5 D1 D5 A0+                        .db 0C5h, 0D1h, 0D5h, 0A0h, 0A4h, 0C2h, 0B7h, 0C5h, 0C3h
ROM:9E02 A4 B1 C4 B2+                        .db 8Dh, 0F2h, 0F7h, 0F4h, 0F3h, 0F3h, 0E5h, 0E3h, 0F4h
ROM:9E02 B6 8D E2 EF+                        .db 0A0h, 0C5h, 0D1h, 0D5h, 0A0h, 0A4h, 0C2h, 0B7h, 0C5h
ROM:9E02 EF F4 A0 C5+                        .db 0C4h, 8Dh, 0F2h, 0F7h, 0F4h, 0F3h, 0E2h, 0F5h, 0E6h
ROM:9E02 D1 D5 A0 A4+                        .db 0E6h, 0A0h, 0C5h, 0D1h, 0D5h, 0A0h, 0A4h, 0C2h, 0B7h
ROM:9E02 B1 C4 C2 B2+                        .db 0C6h, 0B0h, 8Dh, 0F2h, 0F7h, 0F4h, 0F3h, 0E3h, 0EDh
ROM:9E02 8D F3 E3 EF+                        .db 0EEh, 6, 0, 0, 7, 0, 0, 7, 0, 0, 6, 0, 0, 3, 6, 13h
ROM:9E02 F2 E5 E2 F5+                        .db 11h, 11h, 11h, 11h, 11h, 11h, 11h, 11h, 3, 0, 0, 3, 6
ROM:9E02 E6 A0 C5 D1+                        .db 3, 0, 0, 0, 0, 0, 0, 7, 0, 43h, 44h, 44h, 3, 76h, 11h
ROM:9E02 D5 A0 A4 B1+                        .db 11h, 11h, 11h, 31h, 11h, 11h, 11h, 11h, 1, 0, 0, 13h
ROM:9E02 C6 B0 B0 8D+                        .db 11h, 11h, 11h, 11h, 11h, 33h, 0, 0, 0, 0, 0, 0, 0, 3
ROM:9E02 E3 E8 E1 F2+                        .db 0, 11h, 11h, 11h, 31h, 43h, 44h, 44h, 44h, 3, 0, 0, 0
ROM:9E02 E4 E1 F4 E1+                        .db 3, 0, 71h, 70h, 11h, 33h, 0, 0, 0, 8, 3, 70h, 0, 8, 3
ROM:9E02 A0 C5 D1 D5+                        .db 70h, 11h, 11h, 31h, 3, 0, 0, 13h, 11h, 21h, 22h, 11h
ROM:9E02 A0 A4 C1 C4+                        .db 11h, 13h, 11h, 0, 0, 30h, 0, 0, 0, 3, 0, 0, 0, 0, 0
ROM:9E02 B0 B0 8D 8D+                        .db 3, 0, 0, 0, 30h, 0, 0, 0, 3, 0, 0, 0, 0, 0, 3, 0, 0
ROM:9E02 F2 F7 F4 F3+                        .db 0, 38h, 0, 70h, 0, 43h, 44h, 44h, 44h, 44h, 44h, 3, 70h
ROM:9E02 F0 E1 F2 ED+                        .db 13h, 11h, 11h, 11h, 11h, 11h, 3, 70h, 0, 0, 70h, 0, 13h
ROM:9E02 A0 C5 D1 D5+                        .db 11h, 3, 0, 0, 0, 0, 0, 3, 11h, 11h, 11h, 11h, 1, 3, 0
ROM:9E02 A0 A4 C2 B7+                        .db 3, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 3, 0, 3, 0, 0, 70h
ROM:9E02 C5 B8 8D F2+                        .db 0, 0, 3, 0, 90h, 70h, 0, 0, 3, 0, 11h, 11h, 11h, 11h
ROM:9E02 F7 F4 F3 F6+                        .db 11h, 11h, 11h, 11h, 11h, 11h, 11h, 11h, 11h, 11h, 0
ROM:9E02 EF EC ED A0+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:9E02 C5 D1 D5 A0+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11h, 11h
ROM:A002 61 11 11 11+                        .db 61h, 11h, 11h, 11h, 11h, 11h, 11h, 11h, 11h, 1, 11h
ROM:A002 11 11 11 11+                        .db 11h, 6, 0, 61h, 1, 44h, 44h, 44h, 4, 0, 0, 0, 0, 0, 10h
ROM:A002 11 01 11 11+                        .db 16h, 61h, 60h, 1, 71h, 0, 10h, 13h, 0, 0, 0, 0, 80h
ROM:A002 06 00 61 01+                        .db 10h, 6, 11h, 11h, 1, 11h, 11h, 11h, 13h, 11h, 11h, 7
ROM:A002 44 44 44 04+                        .db 31h, 11h, 11h, 61h, 0, 0, 47h, 44h, 11h, 11h, 13h, 11h
ROM:A002 00 00 00 00+                        .db 11h, 11h, 31h, 1, 11h, 11h, 11h, 11h, 1, 0, 1, 10h, 13h
ROM:A002 00 10 16 61+                        .db 11h, 10h, 11h, 31h, 1, 11h, 0, 0, 0, 80h, 0, 0, 10h
ROM:A002 60 01 71 00+                        .db 13h, 11h, 10h, 1, 31h, 71h, 10h, 13h, 11h, 11h, 11h
ROM:A002 10 13 00 00+                        .db 13h, 73h, 10h, 13h, 11h, 10h, 1, 31h, 11h, 11h, 3, 0
ROM:A002 00 00 80 10+                        .db 0, 0, 13h, 11h, 11h, 13h, 11h, 7, 1, 31h, 11h, 10h, 3
ROM:A002 06 11 11 01+                        .db 0, 0, 0, 0, 11h, 11h, 13h, 11h, 11h, 1, 31h, 11h, 17h
ROM:A002 11 11 11 13+                        .db 3, 0, 0, 0, 1, 0, 0, 3, 0, 0, 0, 30h, 0, 10h, 13h, 11h
ROM:A002 11 11 07 31+                        .db 13h, 11h, 31h, 21h
ROM:A0A0 21                                  .db 21h
ROM:A0A1             ; ---------------------------------------------------------------------------
ROM:A0A1 21 21                               AND     (21h,X)
ROM:A0A3 21 21                               AND     (21h,X)
ROM:A0A5 31 21                               AND     (21h),Y
ROM:A0A7 21 13                               AND     (13h,X)
ROM:A0A9 11 13                               ORA     (13h),Y
ROM:A0AB 11 31                               ORA     (31h),Y
ROM:A0AD 11 11                               ORA     (11h),Y
ROM:A0AF 11 00                               ORA     (0),Y
ROM:A0B1 11 11                               ORA     (11h),Y
ROM:A0B3 31 21                               AND     (21h),Y
ROM:A0B5 21 03                               AND     (3,X)
ROM:A0B7 00                                  BRK
ROM:A0B7             ; ---------------------------------------------------------------------------
ROM:A0B8 03 00 30 11+                        .db 3, 0, 30h, 11h, 11h, 11h, 1, 10h, 11h, 31h, 0, 0, 13h
ROM:A0B8 11 11 01 10+                        .db 11h, 11h, 11h, 31h, 11h, 11h, 11h, 11h, 7, 11h, 11h
ROM:A0B8 11 31 00 00+                        .db 11h, 31h, 93h, 0, 0, 0, 30h, 70h, 10h, 11h, 11h, 1, 80h
ROM:A0B8 13 11 11 11+                        .db 0, 0, 30h, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:A0B8 31 11 11 11+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:A0B8 11 07 11 11+                        .db 0, 0, 0, 30h, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80h, 7, 0
ROM:A0B8 11 31 93 00+                        .db 30h, 0, 0, 0, 0, 0, 0, 0, 0, 70h, 8, 13h, 81h, 7, 30h
ROM:A0B8 00 00 30 70+                        .db 0, 0, 0, 0, 0, 0, 0, 70h, 18h, 31h, 3, 10h, 1, 30h, 11h
ROM:A0B8 10 11 11 01+                        .db 11h, 36h, 11h, 11h, 31h, 0, 10h, 1, 30h, 3, 0, 0, 0
ROM:A0B8 80 00 00 30+                        .db 0, 0, 33h, 7, 0, 30h, 0, 0, 0, 30h, 3, 0, 0, 0, 0, 0
ROM:A0B8 00 00 00 00+                        .db 37h, 3, 0, 30h, 0, 0, 0, 30h, 3, 0, 0, 0, 0, 0, 33h
ROM:A0B8 00 00 00 00+                        .db 7, 0, 0, 0, 0, 0, 30h, 3, 0, 0, 0, 0, 0, 37h, 3, 0, 0
ROM:A0B8 00 00 00 00+                        .db 0, 0, 0, 30h, 3, 0, 0, 0, 0, 0, 33h, 7, 0, 0, 0, 0, 0
ROM:A0B8 00 00 00 00+                        .db 30h, 3, 0, 0, 0, 0, 0, 37h, 3, 0, 0, 0, 0, 0, 30h, 3
ROM:A0B8 00 00 00 00+                        .db 0, 0, 0, 0, 0, 33h, 7, 0, 0, 0, 0, 0, 30h, 3, 0, 0, 0
ROM:A0B8 00 00 00 00+                        .db 0, 0, 37h, 3, 0, 0, 0, 0, 0, 30h, 3, 0, 0, 0, 0, 0, 33h
ROM:A0B8 00 00 00 00+                        .db 7, 0, 0, 0, 0, 0, 30h, 3, 0, 0, 0, 0, 0, 37h, 3, 0, 0
ROM:A0B8 00 00 00 00+                        .db 0, 0, 0, 30h, 3, 0, 0, 0, 9, 0, 33h, 7, 0, 0, 0, 0, 0
ROM:A0B8 00 00 00 30+                        .db 30h, 3, 0, 30h, 11h, 11h, 11h, 11h, 11h, 11h, 11h, 11h
ROM:A0B8 00 00 00 00+                        .db 3, 0, 30h, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:A0B8 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:A200 00 02 04 12+a200_lsbs_tbl:          .db 0, 2, 4, 12h, 6, 22h, 14h, 32h, 8, 42h, 24h, 52h, 16h
ROM:A200 06 22 14 32+                        .db 62h, 34h, 72h, 0Ah, 82h, 44h, 92h, 26h, 0A2h, 54h, 0B2h
ROM:A200 08 42 24 52+                        .db 18h, 0C2h, 64h, 0D2h, 36h, 0E2h, 74h, 0F2h, 0Ch, 2, 84h
ROM:A200 16 62 34 72+                        .db 12h, 46h, 22h, 94h, 32h, 28h, 42h, 0A4h, 52h, 56h, 62h
ROM:A200 0A 82 44 92+                        .db 0B4h, 72h, 1Ah, 82h, 0C4h, 92h, 66h, 0A2h, 0D4h, 0B2h
ROM:A200 26 A2 54 B2+                        .db 38h, 0C2h, 0E4h, 0D2h, 76h, 0E2h, 0F4h, 0F2h, 0Eh, 2
ROM:A200 18 C2 64 D2+                        .db 4, 12h, 86h, 22h, 14h, 32h, 48h, 42h, 24h, 52h, 96h
ROM:A200 36 E2 74 F2+                        .db 62h, 34h, 72h, 2Ah, 82h, 44h, 92h, 0A6h, 0A2h, 54h, 0B2h
ROM:A200 0C 02 84 12+                        .db 58h, 0C2h, 64h, 0D2h, 0B6h, 0E2h, 74h, 0F2h, 1Ch, 2
ROM:A200 46 22 94 32+                        .db 84h, 12h, 0C6h, 22h, 94h, 32h, 68h, 42h, 0A4h, 52h, 0D6h
ROM:A200 28 42 A4 52+                        .db 62h, 0B4h, 72h, 3Ah, 82h, 0C4h, 92h, 0E6h, 0A2h, 0D4h
ROM:A200 56 62 B4 72+                        .db 0B2h, 78h, 0C2h, 0E4h, 0D2h, 0F6h, 0E2h, 0F4h, 0F2h
ROM:A280 A9 A9 A9 A9+a280_msbs_tbl:          .db 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h
ROM:A280 A9 A9 A9 A9+                        .db 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h
ROM:A280 A9 A9 A9 A9+                        .db 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h
ROM:A280 A9 A9 A9 A9+                        .db 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0AAh, 0A9h, 0AAh
ROM:A280 A9 A9 A9 A9+                        .db 0A9h, 0AAh, 0A9h, 0AAh, 0A9h, 0AAh, 0A9h, 0AAh, 0A9h
ROM:A280 A9 A9 A9 A9+                        .db 0AAh, 0A9h, 0AAh, 0A9h, 0AAh, 0A9h, 0AAh, 0A9h, 0AAh
ROM:A280 A9 A9 A9 A9+                        .db 0A9h, 0AAh, 0A9h, 0AAh, 0A9h, 0AAh, 0A9h, 0AAh, 0A9h
ROM:A280 A9 A9 A9 A9+                        .db 0AAh, 0A9h, 0ABh, 0AAh, 0ABh, 0A9h, 0ABh, 0AAh, 0ABh
ROM:A280 A9 AA A9 AA+                        .db 0A9h, 0ABh, 0AAh, 0ABh, 0A9h, 0ABh, 0AAh, 0ABh, 0A9h
ROM:A280 A9 AA A9 AA+                        .db 0ABh, 0AAh, 0ABh, 0A9h, 0ABh, 0AAh, 0ABh, 0A9h, 0ABh
ROM:A280 A9 AA A9 AA+                        .db 0AAh, 0ABh, 0A9h, 0ABh, 0AAh, 0ABh, 0A9h, 0ACh, 0AAh
ROM:A280 A9 AA A9 AA+                        .db 0ACh, 0A9h, 0ACh, 0AAh, 0ACh, 0A9h, 0ACh, 0AAh, 0ACh
ROM:A280 A9 AA A9 AA+                        .db 0A9h, 0ACh, 0AAh, 0ACh, 0A9h, 0ACh, 0AAh, 0ACh, 0A9h
ROM:A280 A9 AA A9 AA+                        .db 0ACh, 0AAh, 0ACh, 0A9h, 0ACh, 0AAh, 0ACh, 0A9h, 0ACh
ROM:A280 A9 AA A9 AA+                        .db 0AAh, 0ACh
ROM:A300 00 04 06 14+a300_lsbs_tbl:          .db 0, 4, 6, 14h, 8, 24h, 16h, 34h, 0Ah, 44h, 26h, 54h, 18h
ROM:A300 08 24 16 34+                        .db 64h, 36h, 74h, 0Ch, 84h, 46h, 94h, 28h, 0A4h, 56h, 0B4h
ROM:A300 0A 44 26 54+                        .db 1Ah, 0C4h, 66h, 0D4h, 38h, 0E4h, 76h, 0F4h, 0Eh, 4, 86h
ROM:A300 18 64 36 74+                        .db 14h, 48h, 24h, 96h, 34h, 2Ah, 44h, 0A6h, 54h, 58h, 64h
ROM:A300 0C 84 46 94+                        .db 0B6h, 74h, 1Ch, 84h, 0C6h, 94h, 68h, 0A4h, 0D6h, 0B4h
ROM:A300 28 A4 56 B4+                        .db 3Ah, 0C4h, 0E6h, 0D4h, 78h, 0E4h, 0F6h, 0F4h, 10h, 4
ROM:A300 1A C4 66 D4+                        .db 6, 14h, 88h, 24h, 16h, 34h, 4Ah, 44h, 26h, 54h, 98h
ROM:A300 38 E4 76 F4+                        .db 64h, 36h, 74h, 2Ch, 84h, 46h, 94h, 0A8h, 0A4h, 56h, 0B4h
ROM:A300 0E 04 86 14+                        .db 5Ah, 0C4h, 66h, 0D4h, 0B8h, 0E4h, 76h, 0F4h, 1Eh, 4
ROM:A300 48 24 96 34+                        .db 86h, 14h, 0C8h, 24h, 96h, 34h, 6Ah, 44h, 0A6h, 54h, 0D8h
ROM:A300 2A 44 A6 54+                        .db 64h, 0B6h, 74h, 3Ch, 84h, 0C6h, 94h, 0E8h, 0A4h, 0D6h
ROM:A300 58 64 B6 74+                        .db 0B4h, 7Ah, 0C4h, 0E6h, 0D4h, 0F8h, 0E4h, 0F6h, 0F4h
ROM:A380 A9 A9 A9 A9+a380_msbs_tbl:          .db 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h
ROM:A380 A9 A9 A9 A9+                        .db 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h
ROM:A380 A9 A9 A9 A9+                        .db 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h
ROM:A380 A9 A9 A9 A9+                        .db 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0AAh, 0A9h, 0AAh
ROM:A380 A9 A9 A9 A9+                        .db 0A9h, 0AAh, 0A9h, 0AAh, 0A9h, 0AAh, 0A9h, 0AAh, 0A9h
ROM:A380 A9 A9 A9 A9+                        .db 0AAh, 0A9h, 0AAh, 0A9h, 0AAh, 0A9h, 0AAh, 0A9h, 0AAh
ROM:A380 A9 A9 A9 A9+                        .db 0A9h, 0AAh, 0A9h, 0AAh, 0A9h, 0AAh, 0A9h, 0AAh, 0A9h
ROM:A380 A9 A9 A9 A9+                        .db 0AAh, 0A9h, 0ABh, 0AAh, 0ABh, 0A9h, 0ABh, 0AAh, 0ABh
ROM:A380 A9 AA A9 AA+                        .db 0A9h, 0ABh, 0AAh, 0ABh, 0A9h, 0ABh, 0AAh, 0ABh, 0A9h
ROM:A380 A9 AA A9 AA+                        .db 0ABh, 0AAh, 0ABh, 0A9h, 0ABh, 0AAh, 0ABh, 0A9h, 0ABh
ROM:A380 A9 AA A9 AA+                        .db 0AAh, 0ABh, 0A9h, 0ABh, 0AAh, 0ABh, 0A9h, 0ACh, 0AAh
ROM:A380 A9 AA A9 AA+                        .db 0ACh, 0A9h, 0ACh, 0AAh, 0ACh, 0A9h, 0ACh, 0AAh, 0ACh
ROM:A380 A9 AA A9 AA+                        .db 0A9h, 0ACh, 0AAh, 0ACh, 0A9h, 0ACh, 0AAh, 0ACh, 0A9h
ROM:A380 A9 AA A9 AA+                        .db 0ACh, 0AAh, 0ACh, 0A9h, 0ACh, 0AAh, 0ACh, 0A9h, 0ACh
ROM:A380 A9 AA A9 AA+                        .db 0AAh, 0ACh
ROM:A400 00 06 08 16+a400_lsbs_tbl:          .db 0, 6, 8, 16h, 0Ah, 26h, 18h, 36h, 0Ch, 46h, 28h, 56h
ROM:A400 0A 26 18 36+                        .db 1Ah, 66h, 38h, 76h, 0Eh, 86h, 48h, 96h, 2Ah, 0A6h, 58h
ROM:A400 0C 46 28 56+                        .db 0B6h, 1Ch, 0C6h, 68h, 0D6h, 3Ah, 0E6h, 78h, 0F6h, 10h
ROM:A400 1A 66 38 76+                        .db 6, 88h, 16h, 4Ah, 26h, 98h, 36h, 2Ch, 46h, 0A8h, 56h
ROM:A400 0E 86 48 96+                        .db 5Ah, 66h, 0B8h, 76h, 1Eh, 86h, 0C8h, 96h, 6Ah, 0A6h
ROM:A400 2A A6 58 B6+                        .db 0D8h, 0B6h, 3Ch, 0C6h, 0E8h, 0D6h, 7Ah, 0E6h, 0F8h, 0F6h
ROM:A400 1C C6 68 D6+                        .db 20h, 6, 8, 16h, 8Ah, 26h, 18h, 36h, 4Ch, 46h, 28h, 56h
ROM:A400 3A E6 78 F6+                        .db 9Ah, 66h, 38h, 76h, 2Eh, 86h, 48h, 96h, 0AAh, 0A6h, 58h
ROM:A400 10 06 88 16+                        .db 0B6h, 5Ch, 0C6h, 68h, 0D6h, 0BAh, 0E6h, 78h, 0F6h, 30h
ROM:A400 4A 26 98 36+                        .db 6, 88h, 16h, 0CAh, 26h, 98h, 36h, 6Ch, 46h, 0A8h, 56h
ROM:A400 2C 46 A8 56+                        .db 0DAh, 66h, 0B8h, 76h, 3Eh, 86h, 0C8h, 96h, 0EAh, 0A6h
ROM:A400 5A 66 B8 76+                        .db 0D8h, 0B6h, 7Ch, 0C6h, 0E8h, 0D6h, 0FAh, 0E6h, 0F8h
ROM:A400 1E 86 C8 96+                        .db 0F6h
ROM:A480 A9 A9 A9 A9+a470_msbs_tbl:          .db 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h
ROM:A480 A9 A9 A9 A9+                        .db 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h
ROM:A480 A9 A9 A9 A9+                        .db 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h
ROM:A480 A9 A9 A9 A9+                        .db 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0AAh, 0A9h, 0AAh
ROM:A480 A9 A9 A9 A9+                        .db 0A9h, 0AAh, 0A9h, 0AAh, 0A9h, 0AAh, 0A9h, 0AAh, 0A9h
ROM:A480 A9 A9 A9 A9+                        .db 0AAh, 0A9h, 0AAh, 0A9h, 0AAh, 0A9h, 0AAh, 0A9h, 0AAh
ROM:A480 A9 A9 A9 A9+                        .db 0A9h, 0AAh, 0A9h, 0AAh, 0A9h, 0AAh, 0A9h, 0AAh, 0A9h
ROM:A480 A9 A9 A9 A9+                        .db 0AAh, 0A9h, 0ABh, 0AAh, 0ABh, 0A9h, 0ABh, 0AAh, 0ABh
ROM:A480 A9 AA A9 AA+                        .db 0A9h, 0ABh, 0AAh, 0ABh, 0A9h, 0ABh, 0AAh, 0ABh, 0A9h
ROM:A480 A9 AA A9 AA+                        .db 0ABh, 0AAh, 0ABh, 0A9h, 0ABh, 0AAh, 0ABh, 0A9h, 0ABh
ROM:A480 A9 AA A9 AA+                        .db 0AAh, 0ABh, 0A9h, 0ABh, 0AAh, 0ABh, 0A9h, 0ACh, 0AAh
ROM:A480 A9 AA A9 AA+                        .db 0ACh, 0A9h, 0ACh, 0AAh, 0ACh, 0A9h, 0ACh, 0AAh, 0ACh
ROM:A480 A9 AA A9 AA+                        .db 0A9h, 0ACh, 0AAh, 0ACh, 0A9h, 0ACh, 0AAh, 0ACh, 0A9h
ROM:A480 A9 AA A9 AA+                        .db 0ACh, 0AAh, 0ACh, 0A9h, 0ACh, 0AAh, 0ACh, 0A9h, 0ACh
ROM:A480 A9 AA A9 AA+                        .db 0AAh, 0ACh
ROM:A500 00 08 0A 18+a500_lsbs_tbl:          .db 0, 8, 0Ah, 18h, 0Ch, 28h, 1Ah, 38h, 0Eh, 48h, 2Ah, 58h
ROM:A500 0C 28 1A 38+                        .db 1Ch, 68h, 3Ah, 78h, 10h, 88h, 4Ah, 98h, 2Ch, 0A8h, 5Ah
ROM:A500 0E 48 2A 58+                        .db 0B8h, 1Eh, 0C8h, 6Ah, 0D8h, 3Ch, 0E8h, 7Ah, 0F8h, 20h
ROM:A500 1C 68 3A 78+                        .db 8, 8Ah, 18h, 4Ch, 28h, 9Ah, 38h, 2Eh, 48h, 0AAh, 58h
ROM:A500 10 88 4A 98+                        .db 5Ch, 68h, 0BAh, 78h, 30h, 88h, 0CAh, 98h, 6Ch, 0A8h
ROM:A500 2C A8 5A B8+                        .db 0DAh, 0B8h, 3Eh, 0C8h, 0EAh, 0D8h, 7Ch, 0E8h, 0FAh, 0F8h
ROM:A500 1E C8 6A D8+                        .db 40h, 8, 0Ah, 18h, 8Ch, 28h, 1Ah, 38h, 4Eh, 48h, 2Ah
ROM:A500 3C E8 7A F8+                        .db 58h, 9Ch, 68h, 3Ah, 78h, 50h, 88h, 4Ah, 98h, 0ACh, 0A8h
ROM:A500 20 08 8A 18+                        .db 5Ah, 0B8h, 5Eh, 0C8h, 6Ah, 0D8h, 0BCh, 0E8h, 7Ah, 0F8h
ROM:A500 4C 28 9A 38+                        .db 60h, 8, 8Ah, 18h, 0CCh, 28h, 9Ah, 38h, 6Eh, 48h, 0AAh
ROM:A500 2E 48 AA 58+                        .db 58h, 0DCh, 68h, 0BAh, 78h, 70h, 88h, 0CAh, 98h, 0ECh
ROM:A500 5C 68 BA 78+                        .db 0A8h, 0DAh, 0B8h, 7Eh, 0C8h, 0EAh, 0D8h, 0FCh, 0E8h
ROM:A500 30 88 CA 98+                        .db 0FAh, 0F8h
ROM:A580 A9 A9 A9 A9+a580_msbs_tbl:          .db 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h
ROM:A580 A9 A9 A9 A9+                        .db 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h
ROM:A580 A9 A9 A9 A9+                        .db 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h
ROM:A580 A9 A9 A9 A9+                        .db 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0AAh, 0A9h, 0AAh
ROM:A580 A9 A9 A9 A9+                        .db 0A9h, 0AAh, 0A9h, 0AAh, 0A9h, 0AAh, 0A9h, 0AAh, 0A9h
ROM:A580 A9 A9 A9 A9+                        .db 0AAh, 0A9h, 0AAh, 0A9h, 0AAh, 0A9h, 0AAh, 0A9h, 0AAh
ROM:A580 A9 A9 A9 A9+                        .db 0A9h, 0AAh, 0A9h, 0AAh, 0A9h, 0AAh, 0A9h, 0AAh, 0A9h
ROM:A580 A9 A9 A9 A9+                        .db 0AAh, 0A9h, 0ABh, 0AAh, 0ABh, 0A9h, 0ABh, 0AAh, 0ABh
ROM:A580 A9 AA A9 AA+                        .db 0A9h, 0ABh, 0AAh, 0ABh, 0A9h, 0ABh, 0AAh, 0ABh, 0A9h
ROM:A580 A9 AA A9 AA+                        .db 0ABh, 0AAh, 0ABh, 0A9h, 0ABh, 0AAh, 0ABh, 0A9h, 0ABh
ROM:A580 A9 AA A9 AA+                        .db 0AAh, 0ABh, 0A9h, 0ABh, 0AAh, 0ABh, 0A9h, 0ACh, 0AAh
ROM:A580 A9 AA A9 AA+                        .db 0ACh, 0A9h, 0ACh, 0AAh, 0ACh, 0A9h, 0ACh, 0AAh, 0ACh
ROM:A580 A9 AA A9 AA+                        .db 0A9h, 0ACh, 0AAh, 0ACh, 0A9h, 0ACh, 0AAh, 0ACh, 0A9h
ROM:A580 A9 AA A9 AA+                        .db 0ACh, 0AAh, 0ACh, 0A9h, 0ACh, 0AAh, 0ACh, 0A9h, 0ACh
ROM:A580 A9 AA A9 AA+                        .db 0AAh, 0ACh
ROM:A600 00 0A 0C 1A+a600_lsbs_tbl:          .db 0, 0Ah, 0Ch, 1Ah, 0Eh, 2Ah, 1Ch, 3Ah, 10h, 4Ah, 2Ch
ROM:A600 0E 2A 1C 3A+                        .db 5Ah, 1Eh, 6Ah, 3Ch, 7Ah, 20h, 8Ah, 4Ch, 9Ah, 2Eh, 0AAh
ROM:A600 10 4A 2C 5A+                        .db 5Ch, 0BAh, 30h, 0CAh, 6Ch, 0DAh, 3Eh, 0EAh, 7Ch, 0FAh
ROM:A600 1E 6A 3C 7A+                        .db 40h, 0Ah, 8Ch, 1Ah, 4Eh, 2Ah, 9Ch, 3Ah, 50h, 4Ah, 0ACh
ROM:A600 20 8A 4C 9A+                        .db 5Ah, 5Eh, 6Ah, 0BCh, 7Ah, 60h, 8Ah, 0CCh, 9Ah, 6Eh, 0AAh
ROM:A600 2E AA 5C BA+                        .db 0DCh, 0BAh, 70h, 0CAh, 0ECh, 0DAh, 7Eh, 0EAh, 0FCh, 0FAh
ROM:A600 30 CA 6C DA+                        .db 80h, 0Ah, 0Ch, 1Ah, 8Eh, 2Ah, 1Ch, 3Ah, 90h, 4Ah, 2Ch
ROM:A600 3E EA 7C FA+                        .db 5Ah, 9Eh, 6Ah, 3Ch, 7Ah, 0A0h, 8Ah, 4Ch, 9Ah, 0AEh, 0AAh
ROM:A600 40 0A 8C 1A+                        .db 5Ch, 0BAh, 0B0h, 0CAh, 6Ch, 0DAh, 0BEh, 0EAh, 7Ch, 0FAh
ROM:A600 4E 2A 9C 3A+                        .db 0C0h, 0Ah, 8Ch, 1Ah, 0CEh, 2Ah, 9Ch, 3Ah, 0D0h, 4Ah
ROM:A600 50 4A AC 5A+                        .db 0ACh, 5Ah, 0DEh, 6Ah, 0BCh, 7Ah, 0E0h, 8Ah, 0CCh, 9Ah
ROM:A600 5E 6A BC 7A+                        .db 0EEh, 0AAh, 0DCh, 0BAh, 0F0h, 0CAh, 0ECh, 0DAh, 0FEh
ROM:A600 60 8A CC 9A+                        .db 0EAh, 0FCh, 0FAh
ROM:A680 A9 A9 A9 A9+a680_msbs_tbl:          .db 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h
ROM:A680 A9 A9 A9 A9+                        .db 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h
ROM:A680 A9 A9 A9 A9+                        .db 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h
ROM:A680 A9 A9 A9 A9+                        .db 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0AAh, 0A9h, 0AAh
ROM:A680 A9 A9 A9 A9+                        .db 0A9h, 0AAh, 0A9h, 0AAh, 0A9h, 0AAh, 0A9h, 0AAh, 0A9h
ROM:A680 A9 A9 A9 A9+                        .db 0AAh, 0A9h, 0AAh, 0A9h, 0AAh, 0A9h, 0AAh, 0A9h, 0AAh
ROM:A680 A9 A9 A9 A9+                        .db 0A9h, 0AAh, 0A9h, 0AAh, 0A9h, 0AAh, 0A9h, 0AAh, 0A9h
ROM:A680 A9 A9 A9 A9+                        .db 0AAh, 0A9h, 0ABh, 0AAh, 0ABh, 0A9h, 0ABh, 0AAh, 0ABh
ROM:A680 A9 AA A9 AA+                        .db 0A9h, 0ABh, 0AAh, 0ABh, 0A9h, 0ABh, 0AAh, 0ABh, 0A9h
ROM:A680 A9 AA A9 AA+                        .db 0ABh, 0AAh, 0ABh, 0A9h, 0ABh, 0AAh, 0ABh, 0A9h, 0ABh
ROM:A680 A9 AA A9 AA+                        .db 0AAh, 0ABh, 0A9h, 0ABh, 0AAh, 0ABh, 0A9h, 0ACh, 0AAh
ROM:A680 A9 AA A9 AA+                        .db 0ACh, 0A9h, 0ACh, 0AAh, 0ACh, 0A9h, 0ACh, 0AAh, 0ACh
ROM:A680 A9 AA A9 AA+                        .db 0A9h, 0ACh, 0AAh, 0ACh, 0A9h, 0ACh, 0AAh, 0ACh, 0A9h
ROM:A680 A9 AA A9 AA+                        .db 0ACh, 0AAh, 0ACh, 0A9h, 0ACh, 0AAh, 0ACh, 0A9h, 0ACh
ROM:A680 A9 AA A9 AA+                        .db 0AAh, 0ACh
ROM:A700 00 0C 0E 1C+a700_lsbs_tbl:          .db 0, 0Ch, 0Eh, 1Ch, 10h, 2Ch, 1Eh, 3Ch, 20h, 4Ch, 2Eh
ROM:A700 10 2C 1E 3C+                        .db 5Ch, 30h, 6Ch, 3Eh, 7Ch, 40h, 8Ch, 4Eh, 9Ch, 50h, 0ACh
ROM:A700 20 4C 2E 5C+                        .db 5Eh, 0BCh, 60h, 0CCh, 6Eh, 0DCh, 70h, 0ECh, 7Eh, 0FCh
ROM:A700 30 6C 3E 7C+                        .db 80h, 0Ch, 8Eh, 1Ch, 90h, 2Ch, 9Eh, 3Ch, 0A0h, 4Ch, 0AEh
ROM:A700 40 8C 4E 9C+                        .db 5Ch, 0B0h, 6Ch, 0BEh, 7Ch, 0C0h, 8Ch, 0CEh, 9Ch, 0D0h
ROM:A700 50 AC 5E BC+                        .db 0ACh, 0DEh, 0BCh, 0E0h, 0CCh, 0EEh, 0DCh, 0F0h, 0ECh
ROM:A700 60 CC 6E DC+                        .db 0FEh, 0FCh, 0, 0Ch, 0Eh, 1Ch, 10h, 2Ch, 1Eh, 3Ch, 20h
ROM:A700 70 EC 7E FC+                        .db 4Ch, 2Eh, 5Ch, 30h, 6Ch, 3Eh, 7Ch, 40h, 8Ch, 4Eh, 9Ch
ROM:A700 80 0C 8E 1C+                        .db 50h, 0ACh, 5Eh, 0BCh, 60h, 0CCh, 6Eh, 0DCh, 70h, 0ECh
ROM:A700 90 2C 9E 3C+                        .db 7Eh, 0FCh, 80h, 0Ch, 8Eh, 1Ch, 90h, 2Ch, 9Eh, 3Ch, 0A0h
ROM:A700 A0 4C AE 5C+                        .db 4Ch, 0AEh, 5Ch, 0B0h, 6Ch, 0BEh, 7Ch, 0C0h, 8Ch, 0CEh
ROM:A700 B0 6C BE 7C+                        .db 9Ch, 0D0h, 0ACh, 0DEh, 0BCh, 0E0h, 0CCh, 0EEh, 0DCh
ROM:A700 C0 8C CE 9C+                        .db 0F0h, 0ECh, 0FEh, 0FCh
ROM:A780 A9 A9 A9 A9+a780_msbs_tbl:          .db 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h
ROM:A780 A9 A9 A9 A9+                        .db 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h
ROM:A780 A9 A9 A9 A9+                        .db 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h
ROM:A780 A9 A9 A9 A9+                        .db 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0AAh, 0A9h, 0AAh
ROM:A780 A9 A9 A9 A9+                        .db 0A9h, 0AAh, 0A9h, 0AAh, 0A9h, 0AAh, 0A9h, 0AAh, 0A9h
ROM:A780 A9 A9 A9 A9+                        .db 0AAh, 0A9h, 0AAh, 0A9h, 0AAh, 0A9h, 0AAh, 0A9h, 0AAh
ROM:A780 A9 A9 A9 A9+                        .db 0A9h, 0AAh, 0A9h, 0AAh, 0A9h, 0AAh, 0A9h, 0AAh, 0A9h
ROM:A780 A9 A9 A9 A9+                        .db 0AAh, 0AAh, 0ABh, 0AAh, 0ABh, 0AAh, 0ABh, 0AAh, 0ABh
ROM:A780 A9 AA A9 AA+                        .db 0AAh, 0ABh, 0AAh, 0ABh, 0AAh, 0ABh, 0AAh, 0ABh, 0AAh
ROM:A780 A9 AA A9 AA+                        .db 0ABh, 0AAh, 0ABh, 0AAh, 0ABh, 0AAh, 0ABh, 0AAh, 0ABh
ROM:A780 A9 AA A9 AA+                        .db 0AAh, 0ABh, 0AAh, 0ABh, 0AAh, 0ABh, 0AAh, 0ACh, 0AAh
ROM:A780 A9 AA A9 AA+                        .db 0ACh, 0AAh, 0ACh, 0AAh, 0ACh, 0AAh, 0ACh, 0AAh, 0ACh
ROM:A780 A9 AA A9 AA+                        .db 0AAh, 0ACh, 0AAh, 0ACh, 0AAh, 0ACh, 0AAh, 0ACh, 0AAh
ROM:A780 A9 AA A9 AA+                        .db 0ACh, 0AAh, 0ACh, 0AAh, 0ACh, 0AAh, 0ACh, 0AAh, 0ACh
ROM:A780 A9 AA A9 AA+                        .db 0AAh, 0ACh
ROM:A800 00 0E 10 1E+a800_lsbs_tbl:          .db 0, 0Eh, 10h, 1Eh, 20h, 2Eh, 30h, 3Eh, 40h, 4Eh, 50h
ROM:A800 20 2E 30 3E+                        .db 5Eh, 60h, 6Eh, 70h, 7Eh, 80h, 8Eh, 90h, 9Eh, 0A0h, 0AEh
ROM:A800 40 4E 50 5E+                        .db 0B0h, 0BEh, 0C0h, 0CEh, 0D0h, 0DEh, 0E0h, 0EEh, 0F0h
ROM:A800 60 6E 70 7E+                        .db 0FEh, 0, 0Eh, 10h, 1Eh, 20h, 2Eh, 30h, 3Eh, 40h, 4Eh
ROM:A800 80 8E 90 9E+                        .db 50h, 5Eh, 60h, 6Eh, 70h, 7Eh, 80h, 8Eh, 90h, 9Eh, 0A0h
ROM:A800 A0 AE B0 BE+                        .db 0AEh, 0B0h, 0BEh, 0C0h, 0CEh, 0D0h, 0DEh, 0E0h, 0EEh
ROM:A800 C0 CE D0 DE+                        .db 0F0h, 0FEh, 0, 0Eh, 10h, 1Eh, 20h, 2Eh, 30h, 3Eh, 40h
ROM:A800 E0 EE F0 FE+                        .db 4Eh, 50h, 5Eh, 60h, 6Eh, 70h, 7Eh, 80h, 8Eh, 90h, 9Eh
ROM:A800 00 0E 10 1E+                        .db 0A0h, 0AEh, 0B0h, 0BEh, 0C0h, 0CEh, 0D0h, 0DEh, 0E0h
ROM:A800 20 2E 30 3E+                        .db 0EEh, 0F0h, 0FEh, 0, 0Eh, 10h, 1Eh, 20h, 2Eh, 30h, 3Eh
ROM:A800 40 4E 50 5E+                        .db 40h, 4Eh, 50h, 5Eh, 60h, 6Eh, 70h, 7Eh, 80h, 8Eh, 90h
ROM:A800 60 6E 70 7E+                        .db 9Eh, 0A0h, 0AEh, 0B0h, 0BEh, 0C0h, 0CEh, 0D0h, 0DEh
ROM:A800 80 8E 90 9E+                        .db 0E0h, 0EEh, 0F0h, 0FEh
ROM:A880 A9 A9 A9 A9+a880_msbs_tbl:          .db 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h
ROM:A880 A9 A9 A9 A9+                        .db 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h
ROM:A880 A9 A9 A9 A9+                        .db 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0A9h
ROM:A880 A9 A9 A9 A9+                        .db 0A9h, 0A9h, 0A9h, 0A9h, 0A9h, 0AAh, 0AAh, 0AAh, 0AAh
ROM:A880 A9 A9 A9 A9+                        .db 0AAh, 0AAh, 0AAh, 0AAh, 0AAh, 0AAh, 0AAh, 0AAh, 0AAh
ROM:A880 A9 A9 A9 A9+                        .db 0AAh, 0AAh, 0AAh, 0AAh, 0AAh, 0AAh, 0AAh, 0AAh, 0AAh
ROM:A880 A9 A9 A9 A9+                        .db 0AAh, 0AAh, 0AAh, 0AAh, 0AAh, 0AAh, 0AAh, 0AAh, 0AAh
ROM:A880 A9 A9 A9 A9+                        .db 0AAh, 0ABh, 0ABh, 0ABh, 0ABh, 0ABh, 0ABh, 0ABh, 0ABh
ROM:A880 AA AA AA AA+                        .db 0ABh, 0ABh, 0ABh, 0ABh, 0ABh, 0ABh, 0ABh, 0ABh, 0ABh
ROM:A880 AA AA AA AA+                        .db 0ABh, 0ABh, 0ABh, 0ABh, 0ABh, 0ABh, 0ABh, 0ABh, 0ABh
ROM:A880 AA AA AA AA+                        .db 0ABh, 0ABh, 0ABh, 0ABh, 0ABh, 0ABh, 0ACh, 0ACh, 0ACh
ROM:A880 AA AA AA AA+                        .db 0ACh, 0ACh, 0ACh, 0ACh, 0ACh, 0ACh, 0ACh, 0ACh, 0ACh
ROM:A880 AA AA AA AA+                        .db 0ACh, 0ACh, 0ACh, 0ACh, 0ACh, 0ACh, 0ACh, 0ACh, 0ACh
ROM:A880 AA AA AA AA+                        .db 0ACh, 0ACh, 0ACh, 0ACh, 0ACh, 0ACh, 0ACh, 0ACh, 0ACh
ROM:A880 AA AA AA AA+                        .db 0ACh, 0ACh
ROM:A900 80 80 81 80+char_gfx_data:          .db 80h, 80h, 81h, 80h, 82h, 80h, 84h, 80h, 88h, 80h, 90h
ROM:A900 82 80 84 80+                        .db 80h, 0A0h, 80h, 0C0h, 80h, 80h, 81h, 83h, 80h, 86h, 80h
ROM:A900 88 80 90 80+                        .db 8Ch, 80h, 98h, 80h, 0B0h, 80h, 0E0h, 80h, 0C0h, 81h
ROM:A900 A0 80 C0 80+                        .db 80h, 82h, 85h, 80h, 8Ah, 80h, 94h, 80h, 0A8h, 80h, 0D0h
ROM:A900 80 81 83 80+                        .db 80h, 0A0h, 81h, 0C0h, 82h, 80h, 83h, 87h, 80h, 8Eh, 80h
ROM:A900 86 80 8C 80+                        .db 9Ch, 80h, 0B8h, 80h, 0F0h, 80h, 0E0h, 81h, 0C0h, 83h
ROM:A900 98 80 B0 80+                        .db 80h, 84h, 89h, 80h, 92h, 80h, 0A4h, 80h, 0C8h, 80h, 90h
ROM:A900 E0 80 C0 81+                        .db 81h, 0A0h, 82h, 0C0h, 84h, 80h, 85h, 8Bh, 80h, 96h, 80h
ROM:A900 80 82 85 80+                        .db 0ACh, 80h, 0D8h, 80h, 0B0h, 81h, 0E0h, 82h, 0C0h, 85h
ROM:A900 8A 80 94 80+                        .db 80h, 86h, 8Dh, 80h, 9Ah, 80h, 0B4h, 80h, 0E8h, 80h, 0D0h
ROM:A900 A8 80 D0 80+                        .db 81h, 0A0h, 83h, 0C0h, 86h, 80h, 87h, 8Fh, 80h, 9Eh, 80h
ROM:A900 A0 81 C0 82+                        .db 0BCh, 80h, 0F8h, 80h, 0F0h, 81h, 0E0h, 83h, 0C0h, 87h
ROM:A900 80 83 87 80+                        .db 80h, 88h, 91h, 80h, 0A2h, 80h, 0C4h, 80h, 88h, 81h, 90h
ROM:A900 8E 80 9C 80+                        .db 82h, 0A0h, 84h, 0C0h, 88h, 80h, 89h, 93h, 80h, 0A6h
ROM:A900 B8 80 F0 80+                        .db 80h, 0CCh, 80h, 98h, 81h, 0B0h, 82h, 0E0h, 84h, 0C0h
ROM:A900 E0 81 C0 83+                        .db 89h, 80h, 8Ah, 95h, 80h, 0AAh, 80h, 0D4h, 80h, 0A8h
ROM:A900 80 84 89 80+                        .db 81h, 0D0h, 82h, 0A0h, 85h, 0C0h, 8Ah, 80h, 8Bh, 97h
ROM:A900 92 80 A4 80+                        .db 80h, 0AEh, 80h, 0DCh, 80h, 0B8h, 81h, 0F0h, 82h, 0E0h
ROM:A900 C8 80 90 81+                        .db 85h, 0C0h, 8Bh, 80h, 8Ch, 99h, 80h, 0B2h, 80h, 0E4h
ROM:A900 A0 82 C0 84+                        .db 80h, 0C8h, 81h, 90h, 83h, 0A0h, 86h, 0C0h, 8Ch, 80h
ROM:A900 80 85 8B 80+                        .db 8Dh, 9Bh, 80h, 0B6h, 80h, 0ECh, 80h, 0D8h, 81h, 0B0h
ROM:A900 96 80 AC 80+                        .db 83h, 0E0h, 86h, 0C0h, 8Dh, 80h, 8Eh, 9Dh, 80h, 0BAh
ROM:A900 D8 80 B0 81+                        .db 80h, 0F4h, 80h, 0E8h, 81h, 0D0h, 83h, 0A0h, 87h, 0C0h
ROM:A900 E0 82 C0 85+                        .db 8Eh, 80h, 8Fh, 9Fh, 80h, 0BEh, 80h, 0FCh, 80h, 0F8h
ROM:A900 80 86 8D 80+                        .db 81h, 0F0h, 83h, 0E0h, 87h, 0C0h, 8Fh, 80h, 90h, 0A1h
ROM:A900 9A 80 B4 80+                        .db 80h, 0C2h, 80h, 84h, 81h, 88h, 82h, 90h, 84h, 0A0h, 88h
ROM:A900 E8 80 D0 81+                        .db 0C0h, 90h, 80h, 91h, 0A3h, 80h, 0C6h, 80h, 8Ch, 81h
ROM:A900 A0 83 C0 86+                        .db 98h, 82h, 0B0h, 84h, 0E0h, 88h, 0C0h, 91h, 80h, 92h
ROM:A900 80 87 8F 80+                        .db 0A5h, 80h, 0CAh, 80h, 94h, 81h, 0A8h, 82h, 0D0h, 84h
ROM:A900 9E 80 BC 80+                        .db 0A0h, 89h, 0C0h, 92h, 80h, 93h, 0A7h, 80h, 0CEh, 80h
ROM:A900 F8 80 F0 81+                        .db 9Ch, 81h, 0B8h, 82h, 0F0h, 84h, 0E0h, 89h, 0C0h, 93h
ROM:A900 E0 83 C0 87+                        .db 80h, 94h, 0A9h, 80h, 0D2h, 80h, 0A4h, 81h, 0C8h, 82h
ROM:A900 80 88 91 80+                        .db 90h, 85h, 0A0h, 8Ah, 0C0h, 94h, 80h, 95h, 0ABh, 80h
ROM:A900 A2 80 C4 80+                        .db 0D6h, 80h, 0ACh, 81h, 0D8h, 82h, 0B0h, 85h, 0E0h, 8Ah
ROM:A900 88 81 90 82+                        .db 0C0h, 95h, 80h, 96h, 0ADh, 80h, 0DAh, 80h, 0B4h, 81h
ROM:A900 A0 84 C0 88+                        .db 0E8h, 82h, 0D0h, 85h, 0A0h, 8Bh, 0C0h, 96h, 80h, 97h
ROM:A900 80 89 93 80+                        .db 0AFh, 80h, 0DEh, 80h, 0BCh, 81h, 0F8h, 82h, 0F0h, 85h
ROM:A900 A6 80 CC 80+                        .db 0E0h, 8Bh, 0C0h, 97h, 80h, 98h, 0B1h, 80h, 0E2h, 80h
ROM:A900 98 81 B0 82+                        .db 0C4h, 81h, 88h, 83h, 90h, 86h, 0A0h, 8Ch, 0C0h, 98h
ROM:A900 E0 84 C0 89+                        .db 80h, 99h, 0B3h, 80h, 0E6h, 80h, 0CCh, 81h, 98h, 83h
ROM:A900 80 8A 95 80+                        .db 0B0h, 86h, 0E0h, 8Ch, 0C0h, 99h, 80h, 9Ah, 0B5h, 80h
ROM:A900 AA 80 D4 80+                        .db 0EAh, 80h, 0D4h, 81h, 0A8h, 83h, 0D0h, 86h, 0A0h, 8Dh
ROM:A900 A8 81 D0 82+                        .db 0C0h, 9Ah, 80h, 9Bh, 0B7h, 80h, 0EEh, 80h, 0DCh, 81h
ROM:A900 A0 85 C0 8A+                        .db 0B8h, 83h, 0F0h, 86h, 0E0h, 8Dh, 0C0h, 9Bh, 80h, 9Ch
ROM:A900 80 8B 97 80+                        .db 0B9h, 80h, 0F2h, 80h, 0E4h, 81h, 0C8h, 83h, 90h, 87h
ROM:A900 AE 80 DC 80+                        .db 0A0h, 8Eh, 0C0h, 9Ch, 80h, 9Dh, 0BBh, 80h, 0F6h, 80h
ROM:A900 B8 81 F0 82+                        .db 0ECh, 81h, 0D8h, 83h, 0B0h, 87h, 0E0h, 8Eh, 0C0h, 9Dh
ROM:A900 E0 85 C0 8B+                        .db 80h, 9Eh, 0BDh, 80h, 0FAh, 80h, 0F4h, 81h, 0E8h, 83h
ROM:A900 80 8C 99 80+                        .db 0D0h, 87h, 0A0h, 8Fh, 0C0h, 9Eh, 80h, 9Fh, 0BFh, 80h
ROM:A900 B2 80 E4 80+                        .db 0FEh, 80h, 0FCh, 81h, 0F8h, 83h, 0F0h, 87h, 0E0h, 8Fh
ROM:A900 C8 81 90 83+                        .db 0C0h, 9Fh, 80h, 0A0h, 0C1h, 80h, 82h, 81h, 84h, 82h
ROM:A900 A0 86 C0 8C+                        .db 88h, 84h, 90h, 88h, 0A0h, 90h, 0C0h, 0A0h, 80h, 0A1h
ROM:A900 80 8D 9B 80+                        .db 0C3h, 80h, 86h, 81h, 8Ch, 82h, 98h, 84h, 0B0h, 88h, 0E0h
ROM:A900 B6 80 EC 80+                        .db 90h, 0C0h, 0A1h, 80h, 0A2h, 0C5h, 80h, 8Ah, 81h, 94h
ROM:A900 D8 81 B0 83+                        .db 82h, 0A8h, 84h, 0D0h, 88h, 0A0h, 91h, 0C0h, 0A2h, 80h
ROM:A900 E0 86 C0 8D+                        .db 0A3h, 0C7h, 80h, 8Eh, 81h, 9Ch, 82h, 0B8h, 84h, 0F0h
ROM:A900 80 8E 9D 80+                        .db 88h, 0E0h, 91h, 0C0h, 0A3h, 80h, 0A4h, 0C9h, 80h, 92h
ROM:A900 BA 80 F4 80+                        .db 81h, 0A4h, 82h, 0C8h, 84h, 90h, 89h, 0A0h, 92h, 0C0h
ROM:A900 E8 81 D0 83+                        .db 0A4h, 80h, 0A5h, 0CBh, 80h, 96h, 81h, 0ACh, 82h, 0D8h
ROM:A900 A0 87 C0 8E+                        .db 84h, 0B0h, 89h, 0E0h, 92h, 0C0h, 0A5h, 80h, 0A6h, 0CDh
ROM:A900 80 8F 9F 80+                        .db 80h, 9Ah, 81h, 0B4h, 82h, 0E8h, 84h, 0D0h, 89h, 0A0h
ROM:A900 BE 80 FC 80+                        .db 93h, 0C0h, 0A6h, 80h, 0A7h, 0CFh, 80h, 9Eh, 81h, 0BCh
ROM:A900 F8 81 F0 83+                        .db 82h, 0F8h, 84h, 0F0h, 89h, 0E0h, 93h, 0C0h, 0A7h, 80h
ROM:A900 E0 87 C0 8F+                        .db 0A8h, 0D1h, 80h, 0A2h, 81h, 0C4h, 82h, 88h, 85h, 90h
ROM:A900 80 90 A1 80+                        .db 8Ah, 0A0h, 94h, 0C0h, 0A8h, 80h, 0A9h, 0D3h, 80h, 0A6h
ROM:A900 C2 80 84 81+                        .db 81h, 0CCh, 82h, 98h, 85h, 0B0h, 8Ah, 0E0h, 94h, 0C0h
ROM:A900 88 82 90 84+                        .db 0A9h, 80h, 0AAh, 0D5h, 80h, 0AAh, 81h, 0D4h, 82h, 0A8h
ROM:A900 A0 88 C0 90+                        .db 85h, 0D0h, 8Ah, 0A0h, 95h, 0C0h, 0AAh, 80h, 0ABh, 0D7h
ROM:A900 80 91 A3 80+                        .db 80h, 0AEh, 81h, 0DCh, 82h, 0B8h, 85h, 0F0h, 8Ah, 0E0h
ROM:A900 C6 80 8C 81+                        .db 95h, 0C0h, 0ABh, 80h, 0ACh, 0D9h, 80h, 0B2h, 81h, 0E4h
ROM:A900 98 82 B0 84+                        .db 82h, 0C8h, 85h, 90h, 8Bh, 0A0h, 96h, 0C0h, 0ACh, 80h
ROM:A900 E0 88 C0 91+                        .db 0ADh, 0DBh, 80h, 0B6h, 81h, 0ECh, 82h, 0D8h, 85h, 0B0h
ROM:A900 80 92 A5 80+                        .db 8Bh, 0E0h, 96h, 0C0h, 0ADh, 80h, 0AEh, 0DDh, 80h, 0BAh
ROM:A900 CA 80 94 81+                        .db 81h, 0F4h, 82h, 0E8h, 85h, 0D0h, 8Bh, 0A0h, 97h, 0C0h
ROM:A900 A8 82 D0 84+                        .db 0AEh, 80h, 0AFh, 0DFh, 80h, 0BEh, 81h, 0FCh, 82h, 0F8h
ROM:A900 A0 89 C0 92+                        .db 85h, 0F0h, 8Bh, 0E0h, 97h, 0C0h, 0AFh, 80h, 0B0h, 0E1h
ROM:A900 80 93 A7 80+                        .db 80h, 0C2h, 81h, 84h, 83h, 88h, 86h, 90h, 8Ch, 0A0h, 98h
ROM:A900 CE 80 9C 81+                        .db 0C0h, 0B0h, 80h, 0B1h, 0E3h, 80h, 0C6h, 81h, 8Ch, 83h
ROM:A900 B8 82 F0 84+                        .db 98h, 86h, 0B0h, 8Ch, 0E0h, 98h, 0C0h, 0B1h, 80h, 0B2h
ROM:A900 E0 89 C0 93+                        .db 0E5h, 80h, 0CAh, 81h, 94h, 83h, 0A8h, 86h, 0D0h, 8Ch
ROM:A900 80 94 A9 80+                        .db 0A0h, 99h, 0C0h, 0B2h, 80h, 0B3h, 0E7h, 80h, 0CEh, 81h
ROM:A900 D2 80 A4 81+                        .db 9Ch, 83h, 0B8h, 86h, 0F0h, 8Ch, 0E0h, 99h, 0C0h, 0B3h
ROM:A900 C8 82 90 85+                        .db 80h, 0B4h, 0E9h, 80h, 0D2h, 81h, 0A4h, 83h, 0C8h, 86h
ROM:A900 A0 8A C0 94+                        .db 90h, 8Dh, 0A0h, 9Ah, 0C0h, 0B4h, 80h, 0B5h, 0EBh, 80h
ROM:A900 80 95 AB 80+                        .db 0D6h, 81h, 0ACh, 83h, 0D8h, 86h, 0B0h, 8Dh, 0E0h, 9Ah
ROM:A900 D6 80 AC 81+                        .db 0C0h, 0B5h, 80h, 0B6h, 0EDh, 80h, 0DAh, 81h, 0B4h, 83h
ROM:A900 D8 82 B0 85+                        .db 0E8h, 86h, 0D0h, 8Dh, 0A0h, 9Bh, 0C0h, 0B6h, 80h, 0B7h
ROM:A900 E0 8A C0 95+                        .db 0EFh, 80h, 0DEh, 81h, 0BCh, 83h, 0F8h, 86h, 0F0h, 8Dh
ROM:A900 80 96 AD 80+                        .db 0E0h, 9Bh, 0C0h, 0B7h, 80h, 0B8h, 0F1h, 80h, 0E2h, 81h
ROM:A900 DA 80 B4 81+                        .db 0C4h, 83h, 88h, 87h, 90h, 8Eh, 0A0h, 9Ch, 0C0h, 0B8h
ROM:A900 E8 82 D0 85+                        .db 80h, 0B9h, 0F3h, 80h, 0E6h, 81h, 0CCh, 83h, 98h, 87h
ROM:A900 A0 8B C0 96+                        .db 0B0h, 8Eh, 0E0h, 9Ch, 0C0h, 0B9h, 80h, 0BAh, 0F5h, 80h
ROM:A900 80 97 AF 80+                        .db 0EAh, 81h, 0D4h, 83h, 0A8h, 87h, 0D0h, 8Eh, 0A0h, 9Dh
ROM:A900 DE 80 BC 81+                        .db 0C0h, 0BAh, 80h, 0BBh, 0F7h, 80h, 0EEh, 81h, 0DCh, 83h
ROM:A900 F8 82 F0 85+                        .db 0B8h, 87h, 0F0h, 8Eh, 0E0h, 9Dh, 0C0h, 0BBh, 80h, 0BCh
ROM:A900 E0 8B C0 97+                        .db 0F9h, 80h, 0F2h, 81h, 0E4h, 83h, 0C8h, 87h, 90h, 8Fh
ROM:A900 80 98 B1 80+                        .db 0A0h, 9Eh, 0C0h, 0BCh, 80h, 0BDh, 0FBh, 80h, 0F6h, 81h
ROM:A900 E2 80 C4 81+                        .db 0ECh, 83h, 0D8h, 87h, 0B0h, 8Fh, 0E0h, 9Eh, 0C0h, 0BDh
ROM:A900 88 83 90 86+                        .db 80h, 0BEh, 0FDh, 80h, 0FAh, 81h, 0F4h, 83h, 0E8h, 87h
ROM:A900 A0 8C C0 98+                        .db 0D0h, 8Fh, 0A0h, 9Fh, 0C0h, 0BEh, 80h, 0BFh, 0FFh, 80h
ROM:A900 80 99 B3 80+                        .db 0FEh, 81h, 0FCh, 83h, 0F8h, 87h, 0F0h, 8Fh, 0E0h, 9Fh
ROM:A900 E6 80 CC 81+                        .db 0C0h, 0BFh
ROM:AD00 00 15 55 06+tbl1:                   .db 0, 15h, 55h, 6, 0, 55h, 6, 0, 10h, 40h, 7Fh, 8, 8, 8
ROM:AD00 00 55 06 00+                        .db 30h, 40h, 40h, 40h, 30h, 26h, 13h, 6, 60h, 18h, 6, 18h
ROM:AD00 10 40 7F 08+                        .db 60h, 0, 0, 10h, 0, 25h, 20h, 0, 0, 0, 0, 10h, 0, 0, 40h
ROM:AD00 08 08 30 40+                        .db 40h, 40h, 10h, 10h, 2, 20h, 8, 2, 8, 20h, 20h, 20h, 22h
ROM:AD00 40 40 30 26+                        .db 22h, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:AD00 13 06 60 18+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:AD00 06 18 60 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3
ROM:AD68 00 02 02 03+tbl2:                   .db 0, 2, 2, 3, 0, 2, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0
ROM:AD68 00 02 00 00+                        .db 0, 6, 3, 3, 0, 0, 3, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0
ROM:AD68 00 00 07 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 4
ROM:AD68 00 00 00 00+                        .db 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:AD68 00 00 00 06+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:AD68 03 03 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0
ROM:ADD0 00 15 55 06+tbl3:                   .db 0, 15h, 55h, 6, 7Fh, 55h, 6, 0, 28h, 60h, 7Fh, 1Ch, 1Ch
ROM:ADD0 7F 55 06 00+                        .db 1Ch, 30h, 60h, 60h, 60h, 31h, 76h, 3Bh, 6, 60h, 18h
ROM:ADD0 28 60 7F 1C+                        .db 6, 18h, 60h, 0, 0, 0, 0, 15h, 28h, 20h, 0, 0, 0, 38h
ROM:ADD0 1C 1C 30 60+                        .db 0, 0, 20h, 20h, 20h, 28h, 28h, 2, 20h, 8, 2, 8, 20h
ROM:ADD0 60 60 31 76+                        .db 20h, 21h, 22h, 22h, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:ADD0 3B 06 60 18+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:ADD0 06 18 60 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:ADD0 00 00 00 15+                        .db 7, 0
ROM:AE38 00 02 02 03+tbl4:                   .db 0, 2, 2, 3, 7, 2, 0, 0, 0, 1, 7, 0, 0, 0, 4, 1, 1, 1
ROM:AE38 07 02 00 00+                        .db 0, 6, 3, 3, 0, 0, 3, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0
ROM:AE38 00 01 07 00+                        .db 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 4, 0, 4
ROM:AE38 00 00 04 01+                        .db 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:AE38 01 01 00 06+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:AE38 03 03 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70h, 60h
ROM:AEA0 00 15 55 7E+tbl5:                   .db 0, 15h, 55h, 7Eh, 0, 0, 7Eh, 0, 28h, 60h, 7Fh, 1Ch, 1Ch
ROM:AEA0 00 00 7E 00+                        .db 1Ch, 70h, 60h, 60h, 60h, 3Fh, 76h, 3Bh, 36h, 78h, 78h
ROM:AEA0 28 60 7F 1C+                        .db 36h, 78h, 78h, 0, 0, 0, 0, 15h, 1, 28h, 0, 0, 0, 38h
ROM:AEA0 1C 1C 70 60+                        .db 0, 0, 20h, 20h, 20h, 28h, 28h, 22h, 28h, 28h, 0Ah, 28h
ROM:AEA0 60 60 3F 76+                        .db 28h, 20h, 2Bh, 22h, 22h, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:AEA0 3B 36 78 78+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:AEA0 36 78 78 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:AEA0 00 00 00 15+                        .db 0, 0, 6
ROM:AF08 00 02 02 03+tbl6:                   .db 0, 2, 2, 3, 0, 0, 3, 0, 0, 1, 7, 0, 0, 0, 7, 1, 1, 1
ROM:AF08 00 00 03 00+                        .db 0, 6, 3, 3, 0, 0, 3, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0
ROM:AF08 00 01 07 00+                        .db 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 5, 0, 4
ROM:AF08 00 00 07 01+                        .db 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:AF08 01 01 00 06+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:AF08 03 03 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 38h, 70h
ROM:AF70 00 15 55 06+tbl7:                   .db 0, 15h, 55h, 6, 0, 7Ch, 6, 0, 20h, 70h, 7Fh, 38h, 18h
ROM:AF70 00 7C 06 00+                        .db 18h, 72h, 40h, 60h, 60h, 38h, 7Ch, 7Eh, 76h, 38h, 70h
ROM:AF70 20 70 7F 38+                        .db 3Ch, 70h, 3Bh, 0, 10h, 0, 10h, 15h, 15h, 29h, 20h, 0
ROM:AF70 18 18 72 40+                        .db 0, 18h, 0, 10h, 20h, 20h, 20h, 20h, 20h, 22h, 28h, 20h
ROM:AF70 60 60 38 7C+                        .db 0Ah, 28h, 8, 22h, 28h, 28h, 28h, 0, 0, 0, 0, 2Ah, 28h
ROM:AF70 7E 76 38 70+                        .db 2Ah, 2Ah, 0Ah, 2Ah, 2Ah, 2Ah, 28h, 2Ah, 54h, 15h, 55h
ROM:AF70 3C 70 3B 00+                        .db 15h, 55h, 55h, 55h, 41h, 4, 10h, 41h, 1, 41h, 41h, 55h
ROM:AF70 10 00 10 15+                        .db 55h, 55h, 55h, 55h, 55h, 41h, 45h, 41h, 41h, 51h, 55h
ROM:AF70 15 29 20 00+                        .db 1, 0, 14h, 14h, 40h, 0, 40h, 0, 0
ROM:AFD8 00 02 02 03+tbl8:                   .db 0, 2, 2, 3, 0, 1, 3, 0, 0, 0, 7, 0, 0, 0, 0, 1, 0, 0
ROM:AFD8 00 01 03 00+                        .db 2, 3, 1, 1, 0, 6, 3, 0, 0, 0, 0, 0, 0, 2, 2, 2, 0, 0
ROM:AFD8 00 00 07 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 4, 1, 0, 0, 0, 2, 1
ROM:AFD8 00 00 00 01+                        .db 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0
ROM:AFD8 00 00 02 03+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:AFD8 01 01 00 06+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:B040 00 00 55 06+tbl9:                   .db 0, 0, 55h, 6, 0, 30h, 0, 0, 28h, 6Ch, 7Fh, 5Ch, 38h
ROM:B040 00 30 00 00+                        .db 7Ah, 7Eh, 70h, 70h, 78h, 78h, 60h, 18h, 3Ch, 1Eh, 60h
ROM:B040 28 6C 7F 5C+                        .db 70h, 60h, 1Eh, 0, 0, 0, 0, 0, 0, 0, 28h, 0, 0, 7Eh, 0
ROM:B040 38 7A 7E 70+                        .db 0, 28h, 28h, 28h, 20h, 28h, 28h, 0Ah, 20h, 28h, 20h
ROM:B040 70 78 78 60+                        .db 0Ah, 2Ah, 28h, 20h, 20h, 0, 0, 0, 0, 2, 28h, 2, 2, 0Ah
ROM:B040 18 3C 1E 60+                        .db 2, 2, 20h, 8, 2, 44h, 11h, 41h, 41h, 5, 5, 41h, 41h
ROM:B040 70 60 1E 00+                        .db 4, 10h, 51h, 1, 45h, 41h, 51h, 41h, 51h, 41h, 41h, 4
ROM:B040 00 00 00 00+                        .db 41h, 45h, 41h, 41h, 51h, 41h, 5, 0, 14h, 14h, 40h, 0
ROM:B040 00 00 28 00+                        .db 50h, 0, 0
ROM:B0A8 00 00 02 03+tbl10:                  .db 0, 0, 2, 3, 0, 0, 3, 0, 1, 1, 7, 1, 0, 0, 0, 7, 0, 2
ROM:B0A8 00 00 03 00+                        .db 3, 0, 0, 0, 0, 3, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:B0A8 01 01 07 01+                        .db 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 3, 0
ROM:B0A8 00 00 00 07+                        .db 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0
ROM:B0A8 00 02 03 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:B0A8 00 00 00 03+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:B110 00 51 55 06+tbl11:                  .db 0, 51h, 55h, 6, 0, 30h, 0, 78h, 22h, 36h, 7Fh, 33h, 7Ch
ROM:B110 00 30 00 78+                        .db 5Eh, 70h, 5Ah, 78h, 6Ch, 38h, 60h, 18h, 18h, 1Bh, 60h
ROM:B110 22 36 7F 33+                        .db 60h, 60h, 18h, 0, 0, 11h, 1, 51h, 51h, 51h, 28h, 20h
ROM:B110 7C 5E 70 5A+                        .db 0, 5Ah, 0, 0, 22h, 28h, 22h, 28h, 28h, 8, 0Ah, 20h, 20h
ROM:B110 78 6C 38 60+                        .db 20h, 8, 20h, 28h, 20h, 20h, 0, 0, 0, 0, 2, 20h, 0, 0
ROM:B110 18 18 1B 60+                        .db 0Ah, 2, 2, 20h, 8, 2, 44h, 11h, 1, 41h, 5, 5, 1, 41h
ROM:B110 60 60 18 00+                        .db 4, 10h, 11h, 1, 55h, 45h, 51h, 41h, 51h, 41h, 1, 4, 41h
ROM:B110 00 11 01 51+                        .db 45h, 41h, 41h, 51h, 41h, 14h, 0, 5, 50h, 10h, 55h, 14h
ROM:B110 51 51 28 20+                        .db 1, 1
ROM:B178 00 02 02 03+tbl12:                  .db 0, 2, 2, 3, 0, 0, 3, 1, 4, 6, 7, 3, 0, 1, 0, 5, 1, 3
ROM:B178 00 00 03 01+                        .db 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 2, 0, 0, 2, 2, 2, 1, 0
ROM:B178 04 06 07 03+                        .db 0, 5, 0, 2, 4, 1, 1, 1, 4, 0, 0, 0, 0, 1, 0, 0, 0, 0
ROM:B178 00 01 00 05+                        .db 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0
ROM:B178 01 03 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:B178 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 8, 20h
ROM:B1E0 00 51 55 06+tbl13:                  .db 0, 51h, 55h, 6, 0, 30h, 0, 28h, 60h, 30h, 7Fh, 30h, 7Bh
ROM:B1E0 00 30 00 28+                        .db 18h, 70h, 42h, 78h, 60h, 38h, 78h, 78h, 18h, 18h, 60h
ROM:B1E0 60 30 7F 30+                        .db 60h, 60h, 18h, 10h, 1, 0, 0, 51h, 51h, 51h, 0, 20h, 0
ROM:B1E0 7B 18 70 42+                        .db 18h, 10h, 5, 30h, 60h, 60h, 32h, 30h, 8, 8, 20h, 20h
ROM:B1E0 78 60 38 78+                        .db 20h, 8, 70h, 38h, 70h, 78h, 0, 1, 0, 0, 2, 20h, 2Ah
ROM:B1E0 78 18 18 60+                        .db 28h, 2Ah, 2Ah, 2, 20h, 2Ah, 2Ah, 55h, 55h, 1, 41h, 15h
ROM:B1E0 60 60 18 10+                        .db 15h, 1, 55h, 14h, 50h, 15h, 1, 55h, 55h, 41h, 55h, 41h
ROM:B1E0 01 00 00 51+                        .db 55h, 55h, 4, 41h, 45h, 41h, 14h, 55h, 10h, 50h, 0, 5
ROM:B1E0 51 51 00 20+                        .db 50h, 10h, 55h, 5, 0, 0
ROM:B248 00 02 02 03+tbl14:                  .db 0, 2, 2, 3, 0, 0, 3, 1, 0, 0, 7, 0, 0, 0, 0, 1, 6, 0
ROM:B248 00 00 03 01+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 2, 2, 0, 1
ROM:B248 00 00 07 00+                        .db 0, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1
ROM:B248 00 00 00 01+                        .db 0, 0, 2, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0
ROM:B248 06 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:B248 00 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 6Ch, 0
ROM:B2B0 00 51 55 7E+tbl15:                  .db 0, 51h, 55h, 7Eh, 0, 30h, 6, 78h, 70h, 70h, 7Fh, 38h
ROM:B2B0 00 30 06 78+                        .db 1Ch, 3Ch, 58h, 60h, 60h, 70h, 6Ch, 6Ch, 58h, 1Eh, 1Ch
ROM:B2B0 70 70 7F 38+                        .db 70h, 60h, 60h, 38h, 40h, 4, 1, 0, 51h, 51h, 51h, 51h
ROM:B2B0 1C 3C 58 60+                        .db 29h, 20h, 38h, 44h, 2, 70h, 60h, 70h, 38h, 78h, 1Eh
ROM:B2B0 60 70 6C 6C+                        .db 1Ch, 70h, 70h, 70h, 1Ch, 58h, 6Ch, 30h, 6Ch, 0, 1, 0
ROM:B2B0 58 1E 1C 70+                        .db 0, 22h, 20h, 2, 0, 0, 20h, 2Ah, 28h, 2, 20h, 41h, 41h
ROM:B2B0 60 60 38 40+                        .db 5, 45h, 1, 1, 51h, 45h, 14h, 50h, 55h, 5, 41h, 55h, 41h
ROM:B2B0 04 01 00 51+                        .db 5, 41h, 15h, 50h, 14h, 45h, 45h, 55h, 14h, 14h, 14h
ROM:B2B0 51 51 51 29+                        .db 50h, 0, 5, 50h, 4, 55h, 5, 0, 1
ROM:B318 00 02 02 03+tbl16:                  .db 0, 2, 2, 3, 0, 0, 3, 1, 0, 0, 7, 0, 0, 0, 1, 1, 1, 1
ROM:B318 00 00 03 01+                        .db 0, 0, 1, 0, 0, 0, 3, 1, 0, 4, 0, 0, 2, 2, 2, 2, 2, 1
ROM:B318 00 00 07 00+                        .db 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 3
ROM:B318 00 00 01 01+                        .db 0, 0, 2, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0
ROM:B318 01 01 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:B318 01 00 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0
ROM:B380 00 51 55 06+tbl17:                  .db 0, 51h, 55h, 6, 0, 55h, 7Eh, 28h, 58h, 5Eh, 7Fh, 6Ch
ROM:B380 00 55 7E 28+                        .db 3Ch, 66h, 58h, 30h, 70h, 18h, 6Eh, 6Ch, 58h, 13h, 36h
ROM:B380 58 5E 7F 6C+                        .db 58h, 20h, 30h, 6Ch, 4, 50h, 4, 0, 51h, 51h, 51h, 51h
ROM:B380 3C 66 58 30+                        .db 1, 28h, 6Ch, 12h, 52h, 5Eh, 70h, 18h, 78h, 4Ch, 13h
ROM:B380 70 18 6E 6C+                        .db 36h, 58h, 10h, 58h, 36h, 58h, 6Eh, 30h, 6Ch, 1, 1, 0
ROM:B380 58 13 36 58+                        .db 28h, 22h, 20h, 2, 0, 0, 20h, 22h, 8, 2, 20h, 41h, 41h
ROM:B380 20 30 6C 04+                        .db 5, 45h, 1, 1, 51h, 45h, 14h, 50h, 45h, 5, 41h, 51h, 41h
ROM:B380 50 04 00 51+                        .db 5, 41h, 15h, 50h, 14h, 45h, 55h, 55h, 41h, 14h, 1, 14h
ROM:B380 51 51 51 01+                        .db 14h, 5, 50h, 4, 55h, 14h, 0, 1
ROM:B3E8 00 02 02 03+tbl18:                  .db 0, 2, 2, 3, 0, 2, 3, 1, 7, 1, 7, 3, 0, 0, 3, 3, 1, 3
ROM:B3E8 00 02 03 01+                        .db 0, 0, 1, 0, 0, 1, 6, 3, 0, 4, 4, 0, 0, 2, 2, 2, 2, 0
ROM:B3E8 07 01 07 03+                        .db 0, 0, 0, 0, 1, 1, 3, 0, 1, 0, 0, 1, 3, 1, 0, 3, 0, 3
ROM:B3E8 00 00 03 03+                        .db 0, 2, 2, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0
ROM:B3E8 01 03 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:B3E8 01 00 00 01+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 41h, 45h
ROM:B450 00 51 55 06+tbl19:                  .db 0, 51h, 55h, 6, 0, 55h, 6, 78h, 18h, 40h, 7Fh, 0Ch, 70h
ROM:B450 00 55 06 78+                        .db 46h, 18h, 30h, 38h, 0Ch, 60h, 6Ch, 58h, 1Bh, 36h, 58h
ROM:B450 18 40 7F 0C+                        .db 60h, 30h, 6Ch, 10h, 4, 40h, 0, 51h, 51h, 51h, 51h, 51h
ROM:B450 70 46 18 30+                        .db 28h, 6Ch, 0Ah, 8, 40h, 38h, 0Ch, 60h, 0Ch, 1Bh, 36h
ROM:B450 38 0C 60 6C+                        .db 58h, 30h, 58h, 36h, 18h, 60h, 30h, 6Ch, 1, 1, 28h, 2Ah
ROM:B450 58 1B 36 58+                        .db 22h, 28h, 22h, 2, 0, 20h, 22h, 8, 2, 20h, 51h, 41h, 45h
ROM:B450 60 30 6C 10+                        .db 45h, 1, 1, 41h, 45h, 14h, 51h, 45h, 5, 41h, 41h, 41h
ROM:B450 04 40 00 51+                        .db 5, 11h, 45h, 51h, 14h, 45h, 14h, 45h, 41h, 14h, 51h
ROM:B450 51 51 51 51+                        .db 5, 14h, 14h, 14h, 1, 0, 50h, 0, 0
ROM:B4B8 00 02 02 03+tbl20:                  .db 0, 2, 2, 3, 0, 2, 0, 1, 0, 1, 7, 0, 0, 1, 0, 3, 0, 3
ROM:B4B8 00 02 00 01+                        .db 0, 0, 1, 0, 0, 1, 6, 3, 0, 1, 5, 0, 0, 2, 2, 2, 2, 2
ROM:B4B8 00 01 07 00+                        .db 1, 0, 2, 1, 1, 0, 3, 1, 3, 0, 0, 1, 3, 1, 0, 0, 0, 3
ROM:B4B8 00 01 00 03+                        .db 0, 2, 2, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0
ROM:B4B8 00 03 00 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:B4B8 01 00 00 01+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 55h, 45h
ROM:B520 00 00 00 06+tbl21:                  .db 0, 0, 0, 6, 0, 0, 6, 0, 18h, 40h, 7Fh, 0Ch, 30h, 40h
ROM:B520 00 00 06 00+                        .db 1Ch, 30h, 30h, 0Ch, 60h, 60h, 18h, 0Dh, 36h, 58h, 40h
ROM:B520 18 40 7F 0C+                        .db 30h, 6Ch, 0, 10h, 0, 0, 0, 0, 0, 0, 0, 0, 6Ch, 8, 8
ROM:B520 30 40 1C 30+                        .db 40h, 30h, 0Ch, 60h, 0, 0Dh, 30h, 58h, 60h, 58h, 36h
ROM:B520 30 0C 60 60+                        .db 1Ch, 60h, 30h, 60h, 0, 0, 2Ah, 2Ah, 2Ah, 28h, 2Ah, 2Ah
ROM:B520 18 0D 36 58+                        .db 0, 2Ah, 2Ah, 8, 2Ah, 20h, 51h, 55h, 55h, 15h, 55h, 1
ROM:B520 40 30 6C 00+                        .db 55h, 45h, 14h, 55h, 45h, 55h, 41h, 41h, 55h, 5, 45h
ROM:B520 10 00 00 00+                        .db 45h, 55h, 14h, 55h, 4, 41h, 41h, 14h, 55h, 1, 14h, 14h
ROM:B520 00 00 00 00+                        .db 14h, 1, 0, 40h, 0, 0
ROM:B588 00 00 00 03+tbl22:                  .db 0, 0, 0, 3, 0, 0, 0, 0, 0, 1, 7, 0, 0, 1, 0, 3, 0, 0
ROM:B588 00 00 00 00+                        .db 1, 0, 0, 0, 0, 1, 5, 3, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0
ROM:B588 00 01 07 00+                        .db 0, 0, 0, 1, 1, 0, 0, 0, 3, 0, 0, 1, 2, 1, 0, 0, 1, 0
ROM:B588 00 01 00 03+                        .db 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0
ROM:B588 00 00 01 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:B588 00 00 00 01+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 81h, 0A8h
ROM:B5F0 C5                                  .db 0C5h ; Å
ROM:B5F1 A2                                  .db 0A2h ; ¢
ROM:B5F2 D4 A2 00 D0+                        .db 0D4h, 0A2h, 0, 0D0h, 8Ah, 94h, 80h, 80h, 80h, 80h, 80h
ROM:B5F2 8A 94 80 80+                        .db 80h, 80h, 80h, 1, 0A5h, 27h, 0C9h, 9, 0D0h, 18h, 0A5h
ROM:B5F2 80 80 80 80+                        .db 2Bh, 4Ah, 4Ah, 4Ah, 4Ah, 9, 0C0h, 85h, 3Fh, 0A9h, 5Ch
ROM:B5F2 80 80 01 A5+                        .db 85h, 3Eh, 18h, 0ADh, 0FEh, 8, 6Dh, 0FFh, 8, 8Dh, 0FEh
ROM:B5F2 27 C9 09 D0+                        .db 8, 0AEh, 0FFh, 8, 30h, 15h, 0BDh, 4Dh, 8, 85h, 3Dh, 0CEh
ROM:B5F2 18 A5 2B 4A+                        .db 0FFh, 8, 0ADh, 0FEh, 8, 85h, 27h, 0CEh, 0FEh, 8, 0A6h
ROM:B5F2 4A 4A 4A 09+                        .db 2Bh, 6Ch, 3Eh, 0, 0EEh, 0FEh, 8, 0EEh, 0FEh, 8, 20h
ROM:B5F2 C0 85 3F A9+                        .db 89h, 0FEh, 20h, 93h, 0FEh, 20h, 2Fh, 0FBh, 0A6h, 2Bh
ROM:B5F2 5C 85 3E 18+                        .db 6Ch, 0FDh, 8, 0, 0Dh, 0Bh, 9, 7, 5, 3, 1, 0Eh, 0Ch, 0Ah
ROM:B5F2 AD FE 08 6D+                        .db 8, 6, 4, 2, 0Fh, 0, 20h, 64h, 0A7h, 0B0h, 8, 0A9h, 0
ROM:B5F2 FF 08 8D FE+                        .db 0A8h, 8Dh, 5Dh, 0B6h, 91h, 40h, 0ADh, 0C5h, 0B5h, 4Ch
ROM:B5F2 08 AE FF 08+                        .db 0D2h, 0A6h, 0ADh, 5Dh, 0B6h, 0F0h, 8, 0EEh, 0BDh, 0B5h
ROM:B5F2 30 15 BD 4D+                        .db 0D0h, 3, 0EEh, 0BEh, 0B5h, 0A9h, 0, 8Dh, 5Dh, 0B6h, 4Ch
ROM:B5F2 08 85 3D CE+                        .db 46h, 0A5h, 8Dh, 0BCh, 0B5h, 20h, 0A8h, 0A6h, 20h, 0EAh
ROM:B5F2 FF 08 AD FE+                        .db 0A2h, 4Ch, 7Dh, 0A2h, 0A0h, 13h, 0B1h, 42h, 0D0h, 14h
ROM:B5F2 08 85 27 CE+                        .db 0C8h, 0C0h, 17h, 0D0h, 0F7h, 0A0h, 19h, 0B1h, 42h, 99h
ROM:B5F2 FE 08 A6 2B+                        .db 0A4h, 0B5h, 0C8h, 0C0h, 1Dh, 0D0h, 0F6h, 4Ch, 0BCh, 0A6h
ROM:B5F2 6C 3E 00 EE+                        .db 0A2h, 0FFh, 8Eh, 5Dh, 0B6h, 0D0h, 0F6h, 0, 0, 0, 0, 0
ROM:B5F2 FE 08 EE FE+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:B5F2 08 20 89 FE+                        .db 0, 0, 0, 0, 0, 0, 20h, 58h, 0FCh, 0A9h, 0C2h, 20h, 0EDh
ROM:B5F2 20 93 FE 20+                        .db 0FDh, 0A9h, 1, 20h, 0DAh, 0FDh, 0A9h, 0ADh, 20h, 0EDh
ROM:B5F2 2F FB A6 2B+                        .db 0FDh, 0A9h, 0, 20h, 0DAh, 0FDh, 60h, 0, 0, 0, 0, 0, 0
ROM:B5F2 6C FD 08 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0B6h
ROM:B5F2 0D 0B 09 07+                        .db 9, 8Eh, 0E9h, 0B7h, 8Eh, 0F7h, 0B7h, 0A9h, 1, 8Dh, 0F8h
ROM:B5F2 05 03 01 0E+                        .db 0B7h, 8Dh, 0EAh, 0B7h, 0ADh, 0E0h, 0B7h, 8Dh, 0E1h, 0B7h
ROM:B5F2 0C 0A 08 06+                        .db 0A9h, 2, 8Dh, 0ECh, 0B7h, 0A9h, 4, 8Dh, 0EDh, 0B7h, 0ACh
ROM:B5F2 04 02 0F 00+                        .db 0E7h, 0B7h, 88h, 8Ch, 0F1h, 0B7h, 0A9h, 1, 8Dh, 0F4h
ROM:B5F2 20 64 A7 B0+                        .db 0B7h, 8Ah, 4Ah, 4Ah, 4Ah, 4Ah, 0AAh, 0A9h, 0, 9Dh, 0F8h
ROM:B5F2 08 A9 00 A8+                        .db 4, 9Dh, 78h, 4, 20h, 93h, 0B7h, 0A2h, 0FFh, 9Ah, 8Eh
ROM:B5F2 8D 5D B6 91+                        .db 0EBh, 0B7h, 0EAh, 0EAh, 0EAh, 20h, 89h, 0FEh, 4Ch, 84h
ROM:B5F2 40 AD C5 B5+                        .db 9Dh, 0ADh, 0E7h, 0B7h, 38h, 0EDh, 0F1h, 0B7h, 8Dh, 0E1h
ROM:B5F2 4C D2 A6 AD+                        .db 0B7h, 0ADh, 0E7h, 0B7h, 8Dh, 0F1h, 0B7h, 0CEh, 0F1h
ROM:B5F2 5D B6 F0 08+                        .db 0B7h, 0A9h, 2, 8Dh, 0ECh, 0B7h, 0A9h, 4, 8Dh, 0EDh, 0B7h
ROM:B5F2 EE BD B5 D0+                        .db 0A9h, 2, 8Dh, 0F4h, 0B7h, 20h, 93h, 0B7h, 0ADh, 0E7h
ROM:B5F2 03 EE BE B5+                        .db 0B7h, 8Dh, 0FEh, 0B6h, 18h, 69h, 9, 8Dh, 0F1h, 0B7h
ROM:B5F2 A9 00 8D 5D+                        .db 0A9h, 0Ah, 8Dh, 0E1h, 0B7h, 38h, 0E9h, 1, 8Dh, 0FFh
ROM:B5F2 B6 4C 46 A5+                        .db 0B6h, 8Dh, 0EDh, 0B7h, 20h, 93h, 0B7h, 60h, 0, 0, 0
ROM:B5F2 8D BC B5 20+                        .db 0, 0, 0, 0ADh, 0E5h, 0B7h, 0ACh, 0E4h, 0B7h, 20h, 0B5h
ROM:B5F2 A8 A6 20 EA+                        .db 0B7h, 0ACh, 0EDh, 0B7h, 88h, 10h, 7, 0A0h, 0Fh, 0EAh
ROM:B5F2 A2 4C 7D A2+                        .db 0EAh, 0CEh, 0ECh, 0B7h, 8Ch, 0EDh, 0B7h, 0CEh, 0F1h
ROM:B5F2 A0 13 B1 42+                        .db 0B7h, 0CEh, 0E1h, 0B7h, 0D0h, 0DFh
ROM:B7B4             ; ---------------------------------------------------------------------------
ROM:B7B4 60                                  RTS
ROM:B7B5             ; ---------------------------------------------------------------------------
ROM:B7B5
ROM:B7B5             loc_B7B5:                                               ; push processor status
ROM:B7B5 08                                  PHP
ROM:B7B6 78                                  SEI                             ; disable interrupts
ROM:B7B7 20 00 BD                            JSR     determine_hardware
ROM:B7BA B0 03                               BCS     loc_B7BF
ROM:B7BC 28                                  PLP                             ; pull processor status
ROM:B7BD 18                                  CLC                             ; clear carry
ROM:B7BE 60                                  RTS
ROM:B7BF             ; ---------------------------------------------------------------------------
ROM:B7BF
ROM:B7BF             loc_B7BF:                                               ; pull processor status
ROM:B7BF 28                                  PLP
ROM:B7C0 38                                  SEC                             ; set carry flag
ROM:B7C1 60                                  RTS
ROM:B7C2             ; ---------------------------------------------------------------------------
ROM:B7C2 AD BC B5                            LDA     0B5BCh
ROM:B7C5 8D F1 B7                            STA     0B7F1h
ROM:B7C8 A9 00                               LDA     #0
ROM:B7CA 8D F0 B7                            STA     0B7F0h
ROM:B7CD AD F9 B5                            LDA     0B5F9h
ROM:B7D0 49 FF                               EOR     #0FFh
ROM:B7D2 8D EB B7                            STA     0B7EBh
ROM:B7D5 60                                  RTS
ROM:B7D6             ; ---------------------------------------------------------------------------
ROM:B7D6 A9 00                               LDA     #0
ROM:B7D8 A8                                  TAY
ROM:B7D9
ROM:B7D9             loc_B7D9:
ROM:B7D9 91 42                               STA     (42h),Y
ROM:B7DB C8                                  INY
ROM:B7DC D0 FB                               BNE     loc_B7D9
ROM:B7DE 60                                  RTS
ROM:B7DF             ; ---------------------------------------------------------------------------
ROM:B7DF 00                                  BRK
ROM:B7DF             ; ---------------------------------------------------------------------------
ROM:B7E0 1B 00 0A 1B+                        .db 1Bh, 0, 0Ah, 1Bh, 0E8h, 0B7h, 0, 0B6h, 1
ROM:B7E9 70                                  .db 70h
ROM:B7EA 01                                  .db 1
ROM:B7EB FF          byte_B7EB:              .db 0FFh
ROM:B7EC 13          byte_B7EC:              .db 13h
ROM:B7ED 05          byte_B7ED:              .db 5
ROM:B7EE FB B7                               .db 0FBh, 0B7h
ROM:B7F0 00          byte_B7F0:              .db 0
ROM:B7F1 96          byte_B7F1:              .db 96h
ROM:B7F2             ; ---------------------------------------------------------------------------
ROM:B7F2 00                                  BRK
ROM:B7F2             ; ---------------------------------------------------------------------------
ROM:B7F3 01                                  .db 1
ROM:B7F4 01          byte_B7F4:              .db 1
ROM:B7F5             ; ---------------------------------------------------------------------------
ROM:B7F5 00                                  BRK
ROM:B7F6             ; ---------------------------------------------------------------------------
ROM:B7F6 01 60                               ORA     (60h,X)
ROM:B7F8 01 00                               ORA     (0,X)
ROM:B7FA 00                                  BRK
ROM:B7FB             ; ---------------------------------------------------------------------------
ROM:B7FB 00                                  BRK
ROM:B7FC             ; ---------------------------------------------------------------------------
ROM:B7FC 01 EF                               ORA     (0EFh,X)
ROM:B7FE D8                                  CLD
ROM:B7FF 00                                  BRK
ROM:B800
ROM:B800             ; =============== S U B R O U T I N E =======================================
ROM:B800
ROM:B800
ROM:B800             sub_B800:
ROM:B800 A2 00                               LDX     #0
ROM:B802 A0 02                               LDY     #2
ROM:B804
ROM:B804             loc_B804:
ROM:B804 88                                  DEY
ROM:B805 B1 3E                               LDA     (3Eh),Y
ROM:B807 4A                                  LSR     A
ROM:B808 3E 00 BC                            ROL     0BC00h,X
ROM:B80B 4A                                  LSR     A
ROM:B80C 3E 00 BC                            ROL     0BC00h,X
ROM:B80F 99 00 BB                            STA     0BB00h,Y
ROM:B812 E8                                  INX
ROM:B813 E0 56                               CPX     #56h ; 'V'
ROM:B815 90 ED                               BCC     loc_B804
ROM:B817 A2 00                               LDX     #0
ROM:B819 98                                  TYA
ROM:B81A D0 E8                               BNE     loc_B804
ROM:B81C A2 55                               LDX     #55h ; 'U'
ROM:B81E
ROM:B81E             loc_B81E:
ROM:B81E BD 00 BC                            LDA     0BC00h,X
ROM:B821 29 3F                               AND     #3Fh ; '?'
ROM:B823 9D 00 BC                            STA     0BC00h,X
ROM:B826 CA                                  DEX
ROM:B827 10 F5                               BPL     loc_B81E
ROM:B829 60                                  RTS
ROM:B829             ; End of function sub_B800
ROM:B829
ROM:B82A
ROM:B82A             ; =============== S U B R O U T I N E =======================================
ROM:B82A
ROM:B82A
ROM:B82A             sub_B82A:
ROM:B82A 38                                  SEC
ROM:B82B 86 27                               STX     27h
ROM:B82D 8E 78 06                            STX     678h
ROM:B830 BD 8D C0                            LDA     0C08Dh,X
ROM:B833 BD 8E C0                            LDA     0C08Eh,X
ROM:B836 30 7C                               BMI     loc_B8B4
ROM:B838 AD 00 BC                            LDA     0BC00h
ROM:B83B 85 26                               STA     26h
ROM:B83D A9 FF                               LDA     #0FFh
ROM:B83F 9D 8F C0                            STA     0C08Fh,X
ROM:B842 1D 8C C0                            ORA     0C08Ch,X
ROM:B845 48                                  PHA
ROM:B846 68                                  PLA
ROM:B847 EA                                  NOP
ROM:B848 A0 04                               LDY     #4
ROM:B84A
ROM:B84A             loc_B84A:
ROM:B84A 48                                  PHA
ROM:B84B 68                                  PLA
ROM:B84C 20 B9 B8                            JSR     sub_B8B9
ROM:B84F 88                                  DEY
ROM:B850 D0 F8                               BNE     loc_B84A
ROM:B852 A9 D5                               LDA     #0D5h ; 'Õ'
ROM:B854 20 B8 B8                            JSR     sub_B8B8
ROM:B857 A9 AA                               LDA     #0AAh ; 'ª'
ROM:B859 20 B8 B8                            JSR     sub_B8B8
ROM:B85C A9 AD                               LDA     #0ADh ; '­'
ROM:B85E 20 B8 B8                            JSR     sub_B8B8
ROM:B861 98                                  TYA
ROM:B862 A0 56                               LDY     #56h ; 'V'
ROM:B864 D0 03                               BNE     loc_B869
ROM:B866
ROM:B866             loc_B866:
ROM:B866 B9 00 BC                            LDA     0BC00h,Y
ROM:B869
ROM:B869             loc_B869:
ROM:B869 59 FF BB                            EOR     0BBFFh,Y
ROM:B86C AA                                  TAX
ROM:B86D BD 29 BA                            LDA     0BA29h,X
ROM:B870 A6 27                               LDX     27h
ROM:B872 9D 8D C0                            STA     0C08Dh,X
ROM:B875 BD 8C C0                            LDA     0C08Ch,X
ROM:B878 88                                  DEY
ROM:B879 D0 EB                               BNE     loc_B866
ROM:B87B A5 26                               LDA     26h
ROM:B87D EA                                  NOP
ROM:B87E
ROM:B87E             loc_B87E:
ROM:B87E 59 00 BB                            EOR     0BB00h,Y
ROM:B881 AA                                  TAX
ROM:B882 BD 29 BA                            LDA     0BA29h,X
ROM:B885 AE 78 06                            LDX     678h
ROM:B888 9D 8D C0                            STA     0C08Dh,X
ROM:B88B BD 8C C0                            LDA     0C08Ch,X
ROM:B88E B9 00 BB                            LDA     0BB00h,Y
ROM:B891 C8                                  INY
ROM:B892 D0 EA                               BNE     loc_B87E
ROM:B894 AA                                  TAX
ROM:B895 BD 29 BA                            LDA     0BA29h,X
ROM:B898 A6 27                               LDX     27h
ROM:B89A 20 BB B8                            JSR     sub_B8BB
ROM:B89D A9 DE                               LDA     #0DEh ; 'Þ'
ROM:B89F 20 B8 B8                            JSR     sub_B8B8
ROM:B8A2 A9 AA                               LDA     #0AAh ; 'ª'
ROM:B8A4 20 B8 B8                            JSR     sub_B8B8
ROM:B8A7 A9 EB                               LDA     #0EBh ; 'ë'
ROM:B8A9 20 B8 B8                            JSR     sub_B8B8
ROM:B8AC A9 FF                               LDA     #0FFh
ROM:B8AE 20 B8 B8                            JSR     sub_B8B8
ROM:B8B1 BD 8E C0                            LDA     0C08Eh,X
ROM:B8B4
ROM:B8B4             loc_B8B4:
ROM:B8B4 BD 8C C0                            LDA     0C08Ch,X
ROM:B8B7 60                                  RTS
ROM:B8B7             ; End of function sub_B82A
ROM:B8B7
ROM:B8B8
ROM:B8B8             ; =============== S U B R O U T I N E =======================================
ROM:B8B8
ROM:B8B8
ROM:B8B8             sub_B8B8:
ROM:B8B8 18                                  CLC
ROM:B8B8             ; End of function sub_B8B8
ROM:B8B8
ROM:B8B9
ROM:B8B9             ; =============== S U B R O U T I N E =======================================
ROM:B8B9
ROM:B8B9
ROM:B8B9             sub_B8B9:
ROM:B8B9 48                                  PHA
ROM:B8BA 68                                  PLA
ROM:B8BA             ; End of function sub_B8B9
ROM:B8BA
ROM:B8BB
ROM:B8BB             ; =============== S U B R O U T I N E =======================================
ROM:B8BB
ROM:B8BB
ROM:B8BB             sub_B8BB:
ROM:B8BB 9D 8D C0                            STA     0C08Dh,X
ROM:B8BE 1D 8C C0                            ORA     0C08Ch,X
ROM:B8C1 60                                  RTS
ROM:B8C1             ; End of function sub_B8BB
ROM:B8C1
ROM:B8C2
ROM:B8C2             ; =============== S U B R O U T I N E =======================================
ROM:B8C2
ROM:B8C2
ROM:B8C2             sub_B8C2:
ROM:B8C2 A0 00                               LDY     #0
ROM:B8C4
ROM:B8C4             loc_B8C4:
ROM:B8C4 A2 56                               LDX     #56h ; 'V'
ROM:B8C6
ROM:B8C6             loc_B8C6:
ROM:B8C6 CA                                  DEX
ROM:B8C7 30 FB                               BMI     loc_B8C4
ROM:B8C9 B9 00 BB                            LDA     0BB00h,Y
ROM:B8CC 5E 00 BC                            LSR     0BC00h,X
ROM:B8CF 2A                                  ROL     A
ROM:B8D0 5E 00 BC                            LSR     0BC00h,X
ROM:B8D3 2A                                  ROL     A
ROM:B8D4 91 3E                               STA     (3Eh),Y
ROM:B8D6 C8                                  INY
ROM:B8D7 C4 26                               CPY     26h
ROM:B8D9 D0 EB                               BNE     loc_B8C6
ROM:B8DB 60                                  RTS
ROM:B8DB             ; End of function sub_B8C2
ROM:B8DB
ROM:B8DC
ROM:B8DC             ; =============== S U B R O U T I N E =======================================
ROM:B8DC
ROM:B8DC
ROM:B8DC             sub_B8DC:
ROM:B8DC A0 20                               LDY     #20h ; ' '
ROM:B8DE
ROM:B8DE             loc_B8DE:
ROM:B8DE 88                                  DEY
ROM:B8DF F0 61                               BEQ     loc_B942
ROM:B8E1
ROM:B8E1             loc_B8E1:
ROM:B8E1 BD 8C C0                            LDA     0C08Ch,X
ROM:B8E4 10 FB                               BPL     loc_B8E1
ROM:B8E6
ROM:B8E6             loc_B8E6:
ROM:B8E6 49 D5                               EOR     #0D5h ; 'Õ'
ROM:B8E8 D0 F4                               BNE     loc_B8DE
ROM:B8EA EA                                  NOP
ROM:B8EB
ROM:B8EB             loc_B8EB:
ROM:B8EB BD 8C C0                            LDA     0C08Ch,X
ROM:B8EE 10 FB                               BPL     loc_B8EB
ROM:B8F0 C9 AA                               CMP     #0AAh ; 'ª'
ROM:B8F2 D0 F2                               BNE     loc_B8E6
ROM:B8F4 A0 56                               LDY     #56h ; 'V'
ROM:B8F6
ROM:B8F6             loc_B8F6:
ROM:B8F6 BD 8C C0                            LDA     0C08Ch,X
ROM:B8F9 10 FB                               BPL     loc_B8F6
ROM:B8FB C9 AD                               CMP     #0ADh ; '­'
ROM:B8FD D0 E7                               BNE     loc_B8E6
ROM:B8FF A9 00                               LDA     #0
ROM:B901
ROM:B901             loc_B901:
ROM:B901 88                                  DEY
ROM:B902 84 26                               STY     26h
ROM:B904
ROM:B904             loc_B904:
ROM:B904 BC 8C C0                            LDY     0C08Ch,X
ROM:B907 10 FB                               BPL     loc_B904
ROM:B909 59 00 BA                            EOR     0BA00h,Y
ROM:B90C A4 26                               LDY     26h
ROM:B90E 99 00 BC                            STA     0BC00h,Y
ROM:B911 D0 EE                               BNE     loc_B901
ROM:B913
ROM:B913             loc_B913:
ROM:B913 84 26                               STY     26h
ROM:B915
ROM:B915             loc_B915:
ROM:B915 BC 8C C0                            LDY     0C08Ch,X
ROM:B918 10 FB                               BPL     loc_B915
ROM:B91A 59 00 BA                            EOR     0BA00h,Y
ROM:B91D A4 26                               LDY     26h
ROM:B91F 99 00 BB                            STA     0BB00h,Y
ROM:B922 C8                                  INY
ROM:B923 D0 EE                               BNE     loc_B913
ROM:B925
ROM:B925             loc_B925:
ROM:B925 BC 8C C0                            LDY     0C08Ch,X
ROM:B928 10 FB                               BPL     loc_B925
ROM:B92A D9 00 BA                            CMP     0BA00h,Y
ROM:B92D D0 13                               BNE     loc_B942
ROM:B92F
ROM:B92F             loc_B92F:
ROM:B92F BD 8C C0                            LDA     0C08Ch,X
ROM:B932 10 FB                               BPL     loc_B92F
ROM:B934 C9 DE                               CMP     #0DEh ; 'Þ'
ROM:B936 D0 0A                               BNE     loc_B942
ROM:B938 EA                                  NOP
ROM:B939
ROM:B939             loc_B939:
ROM:B939 BD 8C C0                            LDA     0C08Ch,X
ROM:B93C 10 FB                               BPL     loc_B939
ROM:B93E C9 AA                               CMP     #0AAh ; 'ª'
ROM:B940 F0 5C                               BEQ     loc_B99E
ROM:B942
ROM:B942             loc_B942:
ROM:B942 38                                  SEC
ROM:B943 60                                  RTS
ROM:B943             ; End of function sub_B8DC
ROM:B943
ROM:B944
ROM:B944             ; =============== S U B R O U T I N E =======================================
ROM:B944
ROM:B944
ROM:B944             sub_B944:
ROM:B944 A0 FC                               LDY     #0FCh ; 'ü'
ROM:B946 84 26                               STY     26h
ROM:B948
ROM:B948             loc_B948:
ROM:B948 C8                                  INY
ROM:B949 D0 04                               BNE     loc_B94F
ROM:B94B E6 26                               INC     26h
ROM:B94D F0 F3                               BEQ     loc_B942
ROM:B94F
ROM:B94F             loc_B94F:
ROM:B94F BD 8C C0                            LDA     0C08Ch,X
ROM:B952 10 FB                               BPL     loc_B94F
ROM:B954
ROM:B954             loc_B954:
ROM:B954 C9 D5                               CMP     #0D5h ; 'Õ'
ROM:B956 D0 F0                               BNE     loc_B948
ROM:B958 EA                                  NOP
ROM:B959
ROM:B959             loc_B959:
ROM:B959 BD 8C C0                            LDA     0C08Ch,X
ROM:B95C 10 FB                               BPL     loc_B959
ROM:B95E C9 AA                               CMP     #0AAh ; 'ª'
ROM:B960 D0 F2                               BNE     loc_B954
ROM:B962 A0 03                               LDY     #3
ROM:B964
ROM:B964             loc_B964:
ROM:B964 BD 8C C0                            LDA     0C08Ch,X
ROM:B967 10 FB                               BPL     loc_B964
ROM:B969 C9 96                               CMP     #96h ; ''
ROM:B96B D0 E7                               BNE     loc_B954
ROM:B96D A9 00                               LDA     #0
ROM:B96F
ROM:B96F             loc_B96F:
ROM:B96F 85 27                               STA     27h
ROM:B971
ROM:B971             loc_B971:
ROM:B971 BD 8C C0                            LDA     0C08Ch,X
ROM:B974 10 FB                               BPL     loc_B971
ROM:B976 2A                                  ROL     A
ROM:B977 85 26                               STA     26h
ROM:B979
ROM:B979             loc_B979:
ROM:B979 BD 8C C0                            LDA     0C08Ch,X
ROM:B97C 10 FB                               BPL     loc_B979
ROM:B97E 25 26                               AND     26h
ROM:B980 99 2C 00                            STA     2Ch,Y
ROM:B983 45 27                               EOR     27h
ROM:B985 88                                  DEY
ROM:B986 10 E7                               BPL     loc_B96F
ROM:B988 A8                                  TAY
ROM:B989 24 B7                               BIT     0B7h
ROM:B98B
ROM:B98B             loc_B98B:
ROM:B98B BD 8C C0                            LDA     0C08Ch,X
ROM:B98E 10 FB                               BPL     loc_B98B
ROM:B990 C9 DE                               CMP     #0DEh ; 'Þ'
ROM:B992 D0 AE                               BNE     loc_B942
ROM:B994 EA                                  NOP
ROM:B995
ROM:B995             loc_B995:
ROM:B995 BD 8C C0                            LDA     0C08Ch,X
ROM:B998 10 FB                               BPL     loc_B995
ROM:B99A C9 AA                               CMP     #0AAh ; 'ª'
ROM:B99C 24 A4                               BIT     0A4h
ROM:B99E
ROM:B99E             loc_B99E:
ROM:B99E 18                                  CLC
ROM:B99F 60                                  RTS
ROM:B99F             ; End of function sub_B944
ROM:B99F
ROM:B9A0
ROM:B9A0             ; =============== S U B R O U T I N E =======================================
ROM:B9A0
ROM:B9A0
ROM:B9A0             sub_B9A0:
ROM:B9A0 86 2B                               STX     2Bh
ROM:B9A2 85 2A                               STA     2Ah
ROM:B9A4 CD 78 04                            CMP     478h
ROM:B9A7 F0 53                               BEQ     locret_B9FC
ROM:B9A9 A9 00                               LDA     #0
ROM:B9AB 85 26                               STA     26h
ROM:B9AD
ROM:B9AD             loc_B9AD:
ROM:B9AD AD 78 04                            LDA     478h
ROM:B9B0 85 27                               STA     27h
ROM:B9B2 38                                  SEC
ROM:B9B3 E5 2A                               SBC     2Ah
ROM:B9B5 F0 33                               BEQ     loc_B9EA
ROM:B9B7 B0 07                               BCS     loc_B9C0
ROM:B9B9 49 FF                               EOR     #0FFh
ROM:B9BB EE 78 04                            INC     478h
ROM:B9BE 90 05                               BCC     loc_B9C5
ROM:B9C0
ROM:B9C0             loc_B9C0:
ROM:B9C0 69 FE                               ADC     #0FEh ; 'þ'
ROM:B9C2 CE 78 04                            DEC     478h
ROM:B9C5
ROM:B9C5             loc_B9C5:
ROM:B9C5 C5 26                               CMP     26h
ROM:B9C7 90 02                               BCC     loc_B9CB
ROM:B9C9 A5 26                               LDA     26h
ROM:B9CB
ROM:B9CB             loc_B9CB:
ROM:B9CB C9 0C                               CMP     #0Ch
ROM:B9CD B0 01                               BCS     loc_B9D0
ROM:B9CF A8                                  TAY
ROM:B9D0
ROM:B9D0             loc_B9D0:
ROM:B9D0 38                                  SEC
ROM:B9D1 20 EE B9                            JSR     sub_B9EE
ROM:B9D4 B9 11 BA                            LDA     0BA11h,Y
ROM:B9D7 20 00 BA                            JSR     sub_BA00
ROM:B9DA A5 27                               LDA     27h
ROM:B9DC 18                                  CLC
ROM:B9DD 20 F1 B9                            JSR     sub_B9F1
ROM:B9E0 B9 1D BA                            LDA     0BA1Dh,Y
ROM:B9E3 20 00 BA                            JSR     sub_BA00
ROM:B9E6 E6 26                               INC     26h
ROM:B9E8 D0 C3                               BNE     loc_B9AD
ROM:B9EA
ROM:B9EA             loc_B9EA:
ROM:B9EA 20 00 BA                            JSR     sub_BA00
ROM:B9ED 18                                  CLC
ROM:B9ED             ; End of function sub_B9A0
ROM:B9ED
ROM:B9EE
ROM:B9EE             ; =============== S U B R O U T I N E =======================================
ROM:B9EE
ROM:B9EE
ROM:B9EE             sub_B9EE:
ROM:B9EE AD 78 04                            LDA     478h
ROM:B9EE             ; End of function sub_B9EE
ROM:B9EE
ROM:B9F1
ROM:B9F1             ; =============== S U B R O U T I N E =======================================
ROM:B9F1
ROM:B9F1
ROM:B9F1             sub_B9F1:
ROM:B9F1 29 03                               AND     #3
ROM:B9F3 2A                                  ROL     A
ROM:B9F4 05 2B                               ORA     2Bh
ROM:B9F6 AA                                  TAX
ROM:B9F7 BD 80 C0                            LDA     0C080h,X
ROM:B9FA A6 2B                               LDX     2Bh
ROM:B9FC
ROM:B9FC             locret_B9FC:
ROM:B9FC 60                                  RTS
ROM:B9FC             ; End of function sub_B9F1
ROM:B9FC
ROM:B9FD             ; ---------------------------------------------------------------------------
ROM:B9FD AA                                  TAX
ROM:B9FE A0 A0                               LDY     #0A0h ; ' '
ROM:BA00
ROM:BA00             ; =============== S U B R O U T I N E =======================================
ROM:BA00
ROM:BA00
ROM:BA00             sub_BA00:
ROM:BA00 A2 11                               LDX     #11h
ROM:BA02
ROM:BA02             loc_BA02:
ROM:BA02 CA                                  DEX
ROM:BA03 D0 FD                               BNE     loc_BA02
ROM:BA05 E6 46                               INC     46h
ROM:BA07 D0 02                               BNE     loc_BA0B
ROM:BA09 E6 47                               INC     47h
ROM:BA0B
ROM:BA0B             loc_BA0B:
ROM:BA0B 38                                  SEC
ROM:BA0C E9 01                               SBC     #1
ROM:BA0E D0 F0                               BNE     sub_BA00
ROM:BA10 60                                  RTS
ROM:BA10             ; End of function sub_BA00
ROM:BA10
ROM:BA10             ; ---------------------------------------------------------------------------
ROM:BA11 01                                  .db    1
ROM:BA12 30                                  .db  30h ; 0
ROM:BA13 28 24 20 1E+                        .db 28h, 24h, 20h, 1Eh, 1Dh, 1Ch, 1Ch, 1Ch, 1Ch, 1Ch, 70h
ROM:BA13 1D 1C 1C 1C+                        .db 2Ch, 26h, 22h, 1Fh, 1Eh, 1Dh, 1Ch, 1Ch, 1Ch, 1Ch, 1Ch
ROM:BA13 1C 1C 70 2C+                        .db 96h, 97h, 9Ah, 9Bh, 9Dh, 9Eh, 9Fh, 0A6h, 0A7h, 0ABh
ROM:BA13 26 22 1F 1E+                        .db 0ACh, 0ADh, 0AEh, 0AFh, 0B2h, 0B3h, 0B4h, 0B5h, 0B6h
ROM:BA13 1D 1C 1C 1C+                        .db 0B7h, 0B9h, 0BAh, 0BBh, 0BCh, 0BDh, 0BEh, 0BFh, 0CBh
ROM:BA13 1C 1C 96 97+                        .db 0CDh, 0CEh, 0CFh, 0D3h, 0D6h, 0D7h, 0D9h, 0DAh, 0DBh
ROM:BA13 9A 9B 9D 9E+                        .db 0DCh, 0DDh, 0DEh, 0DFh, 0E5h, 0E6h, 0E7h, 0E9h, 0EAh
ROM:BA13 9F A6 A7 AB+                        .db 0EBh, 0ECh, 0EDh, 0EEh, 0EFh, 0F2h, 0F3h, 0F4h, 0F5h
ROM:BA13 AC AD AE AF+                        .db 0F6h, 0F7h, 0F9h, 0FAh, 0FBh, 0FCh, 0FDh, 0FEh, 0FFh
ROM:BA13 B2 B3 B4 B5+                        .db 0B3h, 0B3h, 0A0h, 0E0h, 0B3h, 0C3h, 0C5h, 0B3h, 0A0h
ROM:BA13 B6 B7 B9 BA+                        .db 0E0h, 0B3h, 0C3h, 0C5h, 0B3h, 0A0h, 0E0h, 0B3h, 0B3h
ROM:BA13 BB BC BD BE+                        .db 0C5h, 0AAh, 0A0h, 82h, 0B3h, 0B3h, 0C5h, 0AAh, 0A0h
ROM:BA13 BF CB CD CE+                        .db 82h, 0C5h, 0B3h, 0B3h, 0AAh, 88h, 82h, 0C5h, 0B3h, 0B3h
ROM:BA13 CF D3 D6 D7+                        .db 0AAh, 88h, 82h, 0C5h, 0C4h, 0B3h, 0B0h, 88h, 0, 1, 98h
ROM:BA13 D9 DA DB DC+                        .db 99h, 2, 3, 9Ch, 4, 5, 6, 0A0h, 0A1h, 0A2h, 0A3h, 0A4h
ROM:BA13 DD DE DF E5+                        .db 0A5h, 7, 8, 0A8h, 0A9h, 0AAh, 9, 0Ah, 0Bh, 0Ch, 0Dh
ROM:BA13 E6 E7 E9 EA+                        .db 0B0h, 0B1h, 0Eh, 0Fh, 10h, 11h, 12h, 13h, 0B8h, 14h
ROM:BA13 EB EC ED EE+                        .db 15h, 16h, 17h, 18h, 19h, 1Ah, 0C0h, 0C1h, 0C2h, 0C3h
ROM:BA13 EF F2 F3 F4+                        .db 0C4h, 0C5h, 0C6h, 0C7h, 0C8h, 0C9h, 0CAh, 1Bh, 0CCh
ROM:BA13 F5 F6 F7 F9+                        .db 1Ch, 1Dh, 1Eh, 0D0h, 0D1h, 0D2h, 1Fh, 0D4h, 0D5h, 20h
ROM:BA13 FA FB FC FD+                        .db 21h, 0D8h, 22h, 23h, 24h, 25h, 26h, 27h, 28h, 0E0h, 0E1h
ROM:BA13 FE FF B3 B3+                        .db 0E2h, 0E3h, 0E4h, 29h, 2Ah, 2Bh, 0E8h, 2Ch, 2Dh, 2Eh
ROM:BA13 A0 E0 B3 C3+                        .db 2Fh, 30h, 31h, 32h, 0F0h, 0F1h, 33h, 34h, 35h, 36h, 37h
ROM:BA13 C5 B3 A0 E0+                        .db 38h, 0F8h, 39h, 3Ah, 3Bh, 3Ch, 3Dh, 3Eh, 3Fh, 0, 4, 3
ROM:BA13 B3 C3 C5 B3+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:BA13 A0 E0 B3 B3+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:BA13 C5 AA A0 82+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:BA13 B3 B3 C5 AA+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:BA13 A0 82 C5 B3+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:BA13 B3 AA 88 82+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:BA13 C5 B3 B3 AA+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:BA13 88 82 C5 C4+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:BA13 B3 B0 88 00+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:BA13 01 98 99 02+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:BA13 03 9C 04 05+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:BA13 06 A0 A1 A2+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:BA13 A3 A4 A5 07+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:BA13 08 A8 A9 AA+                        .db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
ROM:BA13 09 0A 0B 0C+                        .db 0
ROM:BC00 02                                  .db 2
ROM:BC01             ; ---------------------------------------------------------------------------
ROM:BC01 00                                  BRK
ROM:BC02             ; ---------------------------------------------------------------------------
ROM:BC02 00                                  BRK
ROM:BC03             ; ---------------------------------------------------------------------------
ROM:BC03 00                                  BRK
ROM:BC04             ; ---------------------------------------------------------------------------
ROM:BC04 00                                  BRK
ROM:BC05             ; ---------------------------------------------------------------------------
ROM:BC05 00                                  BRK
ROM:BC06             ; ---------------------------------------------------------------------------
ROM:BC06 00                                  BRK
ROM:BC07             ; ---------------------------------------------------------------------------
ROM:BC07 00                                  BRK
ROM:BC08             ; ---------------------------------------------------------------------------
ROM:BC08 00                                  BRK
ROM:BC09             ; ---------------------------------------------------------------------------
ROM:BC09 00                                  BRK
ROM:BC0A             ; ---------------------------------------------------------------------------
ROM:BC0A 00                                  BRK
ROM:BC0B             ; ---------------------------------------------------------------------------
ROM:BC0B 00                                  BRK
ROM:BC0C             ; ---------------------------------------------------------------------------
ROM:BC0C 00                                  BRK
ROM:BC0D             ; ---------------------------------------------------------------------------
ROM:BC0D 00                                  BRK
ROM:BC0E             ; ---------------------------------------------------------------------------
ROM:BC0E 00                                  BRK
ROM:BC0F             ; ---------------------------------------------------------------------------
ROM:BC0F 00                                  BRK
ROM:BC10             ; ---------------------------------------------------------------------------
ROM:BC10 00                                  BRK
ROM:BC11             ; ---------------------------------------------------------------------------
ROM:BC11 00                                  BRK
ROM:BC12             ; ---------------------------------------------------------------------------
ROM:BC12 00                                  BRK
ROM:BC13             ; ---------------------------------------------------------------------------
ROM:BC13 00                                  BRK
ROM:BC14             ; ---------------------------------------------------------------------------
ROM:BC14 00                                  BRK
ROM:BC15             ; ---------------------------------------------------------------------------
ROM:BC15 00                                  BRK
ROM:BC16             ; ---------------------------------------------------------------------------
ROM:BC16 00                                  BRK
ROM:BC17             ; ---------------------------------------------------------------------------
ROM:BC17 00                                  BRK
ROM:BC18             ; ---------------------------------------------------------------------------
ROM:BC18 00                                  BRK
ROM:BC19             ; ---------------------------------------------------------------------------
ROM:BC19 00                                  BRK
ROM:BC1A             ; ---------------------------------------------------------------------------
ROM:BC1A 00                                  BRK
ROM:BC1B             ; ---------------------------------------------------------------------------
ROM:BC1B 00                                  BRK
ROM:BC1C             ; ---------------------------------------------------------------------------
ROM:BC1C 00                                  BRK
ROM:BC1D             ; ---------------------------------------------------------------------------
ROM:BC1D 00                                  BRK
ROM:BC1E             ; ---------------------------------------------------------------------------
ROM:BC1E 00                                  BRK
ROM:BC1F             ; ---------------------------------------------------------------------------
ROM:BC1F 00                                  BRK
ROM:BC20             ; ---------------------------------------------------------------------------
ROM:BC20 00                                  BRK
ROM:BC21             ; ---------------------------------------------------------------------------
ROM:BC21 00                                  BRK
ROM:BC22             ; ---------------------------------------------------------------------------
ROM:BC22 00                                  BRK
ROM:BC23             ; ---------------------------------------------------------------------------
ROM:BC23 00                                  BRK
ROM:BC24             ; ---------------------------------------------------------------------------
ROM:BC24 00                                  BRK
ROM:BC25             ; ---------------------------------------------------------------------------
ROM:BC25 00                                  BRK
ROM:BC26             ; ---------------------------------------------------------------------------
ROM:BC26 00                                  BRK
ROM:BC27             ; ---------------------------------------------------------------------------
ROM:BC27 00                                  BRK
ROM:BC28             ; ---------------------------------------------------------------------------
ROM:BC28 00                                  BRK
ROM:BC29             ; ---------------------------------------------------------------------------
ROM:BC29 00                                  BRK
ROM:BC2A             ; ---------------------------------------------------------------------------
ROM:BC2A 00                                  BRK
ROM:BC2B             ; ---------------------------------------------------------------------------
ROM:BC2B 00                                  BRK
ROM:BC2C             ; ---------------------------------------------------------------------------
ROM:BC2C 00                                  BRK
ROM:BC2D             ; ---------------------------------------------------------------------------
ROM:BC2D 00                                  BRK
ROM:BC2E             ; ---------------------------------------------------------------------------
ROM:BC2E 00                                  BRK
ROM:BC2F             ; ---------------------------------------------------------------------------
ROM:BC2F 00                                  BRK
ROM:BC30             ; ---------------------------------------------------------------------------
ROM:BC30 00                                  BRK
ROM:BC31             ; ---------------------------------------------------------------------------
ROM:BC31 00                                  BRK
ROM:BC32             ; ---------------------------------------------------------------------------
ROM:BC32 00                                  BRK
ROM:BC33             ; ---------------------------------------------------------------------------
ROM:BC33 00                                  BRK
ROM:BC34             ; ---------------------------------------------------------------------------
ROM:BC34 00                                  BRK
ROM:BC35             ; ---------------------------------------------------------------------------
ROM:BC35 00                                  BRK
ROM:BC36             ; ---------------------------------------------------------------------------
ROM:BC36 00                                  BRK
ROM:BC37             ; ---------------------------------------------------------------------------
ROM:BC37 00                                  BRK
ROM:BC38             ; ---------------------------------------------------------------------------
ROM:BC38 00                                  BRK
ROM:BC39             ; ---------------------------------------------------------------------------
ROM:BC39 00                                  BRK
ROM:BC3A             ; ---------------------------------------------------------------------------
ROM:BC3A 00                                  BRK
ROM:BC3B             ; ---------------------------------------------------------------------------
ROM:BC3B 00                                  BRK
ROM:BC3C             ; ---------------------------------------------------------------------------
ROM:BC3C 00                                  BRK
ROM:BC3D             ; ---------------------------------------------------------------------------
ROM:BC3D 00                                  BRK
ROM:BC3E             ; ---------------------------------------------------------------------------
ROM:BC3E 00                                  BRK
ROM:BC3F             ; ---------------------------------------------------------------------------
ROM:BC3F 00                                  BRK
ROM:BC40             ; ---------------------------------------------------------------------------
ROM:BC40 00                                  BRK
ROM:BC41             ; ---------------------------------------------------------------------------
ROM:BC41 00                                  BRK
ROM:BC42             ; ---------------------------------------------------------------------------
ROM:BC42 00                                  BRK
ROM:BC43             ; ---------------------------------------------------------------------------
ROM:BC43 00                                  BRK
ROM:BC44             ; ---------------------------------------------------------------------------
ROM:BC44 00                                  BRK
ROM:BC45             ; ---------------------------------------------------------------------------
ROM:BC45 00                                  BRK
ROM:BC46             ; ---------------------------------------------------------------------------
ROM:BC46 00                                  BRK
ROM:BC47             ; ---------------------------------------------------------------------------
ROM:BC47 00                                  BRK
ROM:BC48             ; ---------------------------------------------------------------------------
ROM:BC48 00                                  BRK
ROM:BC49             ; ---------------------------------------------------------------------------
ROM:BC49 00                                  BRK
ROM:BC4A             ; ---------------------------------------------------------------------------
ROM:BC4A 00                                  BRK
ROM:BC4B             ; ---------------------------------------------------------------------------
ROM:BC4B 00                                  BRK
ROM:BC4C             ; ---------------------------------------------------------------------------
ROM:BC4C 00                                  BRK
ROM:BC4D             ; ---------------------------------------------------------------------------
ROM:BC4D 00                                  BRK
ROM:BC4E             ; ---------------------------------------------------------------------------
ROM:BC4E 00                                  BRK
ROM:BC4F             ; ---------------------------------------------------------------------------
ROM:BC4F 00                                  BRK
ROM:BC50             ; ---------------------------------------------------------------------------
ROM:BC50 00                                  BRK
ROM:BC51             ; ---------------------------------------------------------------------------
ROM:BC51 00                                  BRK
ROM:BC52             ; ---------------------------------------------------------------------------
ROM:BC52 00                                  BRK
ROM:BC53             ; ---------------------------------------------------------------------------
ROM:BC53 00                                  BRK
ROM:BC54             ; ---------------------------------------------------------------------------
ROM:BC54 00                                  BRK
ROM:BC55             ; ---------------------------------------------------------------------------
ROM:BC55 00                                  BRK
ROM:BC56
ROM:BC56             ; =============== S U B R O U T I N E =======================================
ROM:BC56
ROM:BC56
ROM:BC56             sub_BC56:
ROM:BC56 38                                  SEC
ROM:BC57 BD 8D C0                            LDA     0C08Dh,X
ROM:BC5A BD 8E C0                            LDA     0C08Eh,X
ROM:BC5D 30 5E                               BMI     loc_BCBD
ROM:BC5F A9 FF                               LDA     #0FFh
ROM:BC61 9D 8F C0                            STA     0C08Fh,X
ROM:BC64 DD 8C C0                            CMP     0C08Ch,X
ROM:BC67 48                                  PHA
ROM:BC68 68                                  PLA
ROM:BC69
ROM:BC69             loc_BC69:
ROM:BC69 20 C3 BC                            JSR     nullsub_1
ROM:BC6C 20 C3 BC                            JSR     nullsub_1
ROM:BC6F 9D 8D C0                            STA     0C08Dh,X
ROM:BC72 DD 8C C0                            CMP     0C08Ch,X
ROM:BC75 EA                                  NOP
ROM:BC76 88                                  DEY
ROM:BC77 D0 F0                               BNE     loc_BC69
ROM:BC79 A9 D5                               LDA     #0D5h ; 'Õ'
ROM:BC7B 20 D5 BC                            JSR     sub_BCD5
ROM:BC7E A9 AA                               LDA     #0AAh ; 'ª'
ROM:BC80 20 D5 BC                            JSR     sub_BCD5
ROM:BC83 A9 96                               LDA     #96h ; ''
ROM:BC85 20 D5 BC                            JSR     sub_BCD5
ROM:BC88 A5 41                               LDA     41h
ROM:BC8A 20 C4 BC                            JSR     sub_BCC4
ROM:BC8D A5 44                               LDA     44h
ROM:BC8F 20 C4 BC                            JSR     sub_BCC4
ROM:BC92 A5 3F                               LDA     3Fh
ROM:BC94 20 C4 BC                            JSR     sub_BCC4
ROM:BC97 A5 41                               LDA     41h
ROM:BC99 45 44                               EOR     44h
ROM:BC9B 45 3F                               EOR     3Fh
ROM:BC9D 48                                  PHA
ROM:BC9E 4A                                  LSR     A
ROM:BC9F 05 3E                               ORA     3Eh
ROM:BCA1 9D 8D C0                            STA     0C08Dh,X
ROM:BCA4 BD 8C C0                            LDA     0C08Ch,X
ROM:BCA7 68                                  PLA
ROM:BCA8 09 AA                               ORA     #0AAh ; 'ª'
ROM:BCAA 20 D4 BC                            JSR     sub_BCD4
ROM:BCAD A9 DE                               LDA     #0DEh ; 'Þ'
ROM:BCAF 20 D5 BC                            JSR     sub_BCD5
ROM:BCB2 A9 AA                               LDA     #0AAh ; 'ª'
ROM:BCB4 20 D5 BC                            JSR     sub_BCD5
ROM:BCB7 A9 EB                               LDA     #0EBh ; 'ë'
ROM:BCB9 20 D5 BC                            JSR     sub_BCD5
ROM:BCBC 18                                  CLC
ROM:BCBD
ROM:BCBD             loc_BCBD:
ROM:BCBD BD 8E C0                            LDA     0C08Eh,X
ROM:BCC0 BD 8C C0                            LDA     0C08Ch,X
ROM:BCC0             ; End of function sub_BC56
ROM:BCC0
ROM:BCC3
ROM:BCC3             ; =============== S U B R O U T I N E =======================================
ROM:BCC3
ROM:BCC3
ROM:BCC3             nullsub_1:
ROM:BCC3 60                                  RTS
ROM:BCC3             ; End of function nullsub_1
ROM:BCC3
ROM:BCC4
ROM:BCC4             ; =============== S U B R O U T I N E =======================================
ROM:BCC4
ROM:BCC4
ROM:BCC4             sub_BCC4:
ROM:BCC4 48                                  PHA
ROM:BCC5 4A                                  LSR     A
ROM:BCC6 05 3E                               ORA     3Eh
ROM:BCC8 9D 8D C0                            STA     0C08Dh,X
ROM:BCCB DD 8C C0                            CMP     0C08Ch,X
ROM:BCCE 68                                  PLA
ROM:BCCF EA                                  NOP
ROM:BCD0 EA                                  NOP
ROM:BCD1 EA                                  NOP
ROM:BCD2 09 AA                               ORA     #0AAh ; 'ª'
ROM:BCD2             ; End of function sub_BCC4
ROM:BCD2
ROM:BCD4
ROM:BCD4             ; =============== S U B R O U T I N E =======================================
ROM:BCD4
ROM:BCD4
ROM:BCD4             sub_BCD4:
ROM:BCD4 EA                                  NOP
ROM:BCD4             ; End of function sub_BCD4
ROM:BCD4
ROM:BCD5
ROM:BCD5             ; =============== S U B R O U T I N E =======================================
ROM:BCD5
ROM:BCD5
ROM:BCD5             sub_BCD5:
ROM:BCD5 EA                                  NOP
ROM:BCD6 48                                  PHA
ROM:BCD7 68                                  PLA
ROM:BCD8 9D 8D C0                            STA     0C08Dh,X
ROM:BCDB DD 8C C0                            CMP     0C08Ch,X
ROM:BCDE 60                                  RTS
ROM:BCDE             ; End of function sub_BCD5
ROM:BCDE
ROM:BCDE             ; ---------------------------------------------------------------------------
ROM:BCDF 88                                  .db  88h ; 
ROM:BCE0 A5 E8 91 A0+                        .db 0A5h, 0E8h, 91h, 0A0h, 94h, 88h, 96h, 0E8h, 91h, 0A0h
ROM:BCE0 94 88 96 E8+                        .db 94h, 88h, 96h, 91h, 91h, 0C8h, 94h, 0D0h, 96h, 91h, 91h
ROM:BCE0 91 A0 94 88+                        .db 0C8h, 94h, 0D0h, 96h, 91h, 0A3h, 0C8h, 0A0h, 0A5h, 85h
ROM:BCE0 96 91 91 C8+                        .db 0A4h
ROM:BD00             ; ---------------------------------------------------------------------------
ROM:BD00
ROM:BD00             determine_hardware:
ROM:BD00 84 48                               STY     48h
ROM:BD02 85 49                               STA     49h
ROM:BD04 A0 02                               LDY     #2
ROM:BD06 8C F8 06                            STY     6F8h
ROM:BD09 A0 04                               LDY     #4
ROM:BD0B 8C F8 04                            STY     4F8h
ROM:BD0E AE E9 B7                            LDX     0B7E9h
ROM:BD11 BD 8E C0                            LDA     0C08Eh,X                ; LC RAM bank1, Read ROM instead of RAM, WR-protect RAM
ROM:BD14 BD 8C C0                            LDA     0C08Ch,X                ; LC RAM bank1, Read and WR-protect RAM
ROM:BD17 A0 08                               LDY     #8
ROM:BD19
ROM:BD19             loc_BD19:                                               ; LC RAM bank1, Read and WR-protect RAM
ROM:BD19 BD 8C C0                            LDA     0C08Ch,X
ROM:BD1C 48                                  PHA
ROM:BD1D 68                                  PLA
ROM:BD1E 48                                  PHA
ROM:BD1F 68                                  PLA
ROM:BD20 8E F8 05                            STX     5F8h
ROM:BD23 DD 8C C0                            CMP     0C08Ch,X                ; LC RAM bank1, Read and WR-protect RAM
ROM:BD26 D0 03                               BNE     loc_BD2B
ROM:BD28 88                                  DEY
ROM:BD29 D0 EE                               BNE     loc_BD19
ROM:BD2B
ROM:BD2B             loc_BD2B:
ROM:BD2B 08                                  PHP
ROM:BD2C BD 89 C0                            LDA     0C089h,X                ; LC RAM bank1, Read ROM instead of RAM, two or more successive reads WR-enables RAM
ROM:BD2F A0 06                               LDY     #6
ROM:BD31
ROM:BD31             loc_BD31:
ROM:BD31 B1 48                               LDA     (48h),Y
ROM:BD33 99 36 00                            STA     36h,Y
ROM:BD36 C8                                  INY
ROM:BD37 C0 0A                               CPY     #0Ah
ROM:BD39 D0 F6                               BNE     loc_BD31
ROM:BD3B A0 03                               LDY     #3
ROM:BD3D B1 3C                               LDA     (3Ch),Y
ROM:BD3F 85 47                               STA     47h
ROM:BD41 A0 02                               LDY     #2
ROM:BD43 B1 48                               LDA     (48h),Y
ROM:BD45 A0 10                               LDY     #10h
ROM:BD47 D1 48                               CMP     (48h),Y
ROM:BD49 F0 06                               BEQ     loc_BD51
ROM:BD4B 91 48                               STA     (48h),Y
ROM:BD4D 28                                  PLP
ROM:BD4E A0 00                               LDY     #0
ROM:BD50 08                                  PHP
ROM:BD51
ROM:BD51             loc_BD51:
ROM:BD51 6A                                  ROR     A
ROM:BD52 90 05                               BCC     loc_BD59
ROM:BD54 BD 8A C0                            LDA     0C08Ah,X                ; LC RAM bank1, Read ROM instead of RAM, WR-protect RAM
ROM:BD57 B0 03                               BCS     loc_BD5C
ROM:BD59
ROM:BD59             loc_BD59:                                               ; LC RAM bank1, Read RAM, two or more successive reads WR-enables RAM
ROM:BD59 BD 8B C0                            LDA     0C08Bh,X
ROM:BD5C
ROM:BD5C             loc_BD5C:
ROM:BD5C 66 35                               ROR     35h
ROM:BD5E 28                                  PLP
ROM:BD5F 08                                  PHP
ROM:BD60 D0 0B                               BNE     loc_BD6D
ROM:BD62 A0 07                               LDY     #7
ROM:BD64
ROM:BD64             loc_BD64:
ROM:BD64 20 00 BA                            JSR     sub_BA00
ROM:BD67 88                                  DEY
ROM:BD68 D0 FA                               BNE     loc_BD64
ROM:BD6A AE F8 05                            LDX     5F8h
ROM:BD6D
ROM:BD6D             loc_BD6D:
ROM:BD6D A0 04                               LDY     #4
ROM:BD6F B1 48                               LDA     (48h),Y
ROM:BD71 20 5A BE                            JSR     sub_BE5A
ROM:BD74 28                                  PLP
ROM:BD75 D0 34                               BNE     loc_BDAB
ROM:BD77 EA                                  NOP
ROM:BD78 EA                                  NOP
ROM:BD79 EA                                  NOP
ROM:BD7A EA                                  NOP
ROM:BD7B AD F4 B7                            LDA     0B7F4h
ROM:BD7E C9 01                               CMP     #1
ROM:BD80 F0 29                               BEQ     loc_BDAB
ROM:BD82 EA                                  NOP
ROM:BD83 EA                                  NOP
ROM:BD84 EA                                  NOP
ROM:BD85 EA                                  NOP
ROM:BD86 EA                                  NOP
ROM:BD87 EA                                  NOP
ROM:BD88 EA                                  NOP
ROM:BD89 EA                                  NOP
ROM:BD8A EA                                  NOP
ROM:BD8B EA                                  NOP
ROM:BD8C EA                                  NOP
ROM:BD8D EA                                  NOP
ROM:BD8E EA                                  NOP
ROM:BD8F EA                                  NOP
ROM:BD90 EA                                  NOP
ROM:BD91 EA                                  NOP
ROM:BD92 EA                                  NOP
ROM:BD93 EA                                  NOP
ROM:BD94 EA                                  NOP
ROM:BD95 EA                                  NOP
ROM:BD96 EA                                  NOP
ROM:BD97 EA                                  NOP
ROM:BD98 EA                                  NOP
ROM:BD99 EA                                  NOP
ROM:BD9A EA                                  NOP
ROM:BD9B EA                                  NOP
ROM:BD9C EA                                  NOP
ROM:BD9D EA                                  NOP
ROM:BD9E
ROM:BD9E             loc_BD9E:
ROM:BD9E A0 12                               LDY     #12h
ROM:BDA0
ROM:BDA0             loc_BDA0:
ROM:BDA0 88                                  DEY
ROM:BDA1 D0 FD                               BNE     loc_BDA0
ROM:BDA3 E6 46                               INC     46h
ROM:BDA5 D0 F7                               BNE     loc_BD9E
ROM:BDA7 E6 47                               INC     47h
ROM:BDA9 D0 F3                               BNE     loc_BD9E
ROM:BDAB
ROM:BDAB             loc_BDAB:
ROM:BDAB A0 0C                               LDY     #0Ch
ROM:BDAD B1 48                               LDA     (48h),Y
ROM:BDAF F0 5A                               BEQ     loc_BE0B
ROM:BDB1 C9 04                               CMP     #4
ROM:BDB3 F0 58                               BEQ     loc_BE0D
ROM:BDB5 6A                                  ROR     A
ROM:BDB6 08                                  PHP
ROM:BDB7 B0 03                               BCS     loc_BDBC
ROM:BDB9 20 00 B8                            JSR     sub_B800
ROM:BDBC
ROM:BDBC             loc_BDBC:
ROM:BDBC A0 30                               LDY     #30h ; '0'
ROM:BDBE 8C 78 05                            STY     578h
ROM:BDC1
ROM:BDC1             loc_BDC1:
ROM:BDC1 AE F8 05                            LDX     5F8h
ROM:BDC4 20 44 B9                            JSR     sub_B944
ROM:BDC7 90 24                               BCC     loc_BDED
ROM:BDC9
ROM:BDC9             loc_BDC9:
ROM:BDC9 CE 78 05                            DEC     578h
ROM:BDCC 10 F3                               BPL     loc_BDC1
ROM:BDCE
ROM:BDCE             loc_BDCE:
ROM:BDCE AD 78 04                            LDA     478h
ROM:BDD1 48                                  PHA
ROM:BDD2 A9 60                               LDA     #60h ; '`'
ROM:BDD4 20 95 BE                            JSR     sub_BE95
ROM:BDD7 CE F8 06                            DEC     6F8h
ROM:BDDA F0 28                               BEQ     loc_BE04
ROM:BDDC A9 04                               LDA     #4
ROM:BDDE 8D F8 04                            STA     4F8h
ROM:BDE1 A9 00                               LDA     #0
ROM:BDE3 20 5A BE                            JSR     sub_BE5A
ROM:BDE6 68                                  PLA
ROM:BDE7
ROM:BDE7             loc_BDE7:
ROM:BDE7 20 5A BE                            JSR     sub_BE5A
ROM:BDEA 4C BC BD                            JMP     loc_BDBC
ROM:BDED             ; ---------------------------------------------------------------------------
ROM:BDED
ROM:BDED             loc_BDED:
ROM:BDED A4 2E                               LDY     2Eh
ROM:BDEF CC 78 04                            CPY     478h
ROM:BDF2 F0 1C                               BEQ     loc_BE10
ROM:BDF4 AD 78 04                            LDA     478h
ROM:BDF7 48                                  PHA
ROM:BDF8 98                                  TYA
ROM:BDF9 20 95 BE                            JSR     sub_BE95
ROM:BDFC 68                                  PLA
ROM:BDFD CE F8 04                            DEC     4F8h
ROM:BE00 D0 E5                               BNE     loc_BDE7
ROM:BE02 F0 CA                               BEQ     loc_BDCE
ROM:BE04
ROM:BE04             loc_BE04:
ROM:BE04 68                                  PLA
ROM:BE05 A9 40                               LDA     #40h ; '@'
ROM:BE07
ROM:BE07             loc_BE07:
ROM:BE07 28                                  PLP
ROM:BE08 4C 48 BE                            JMP     loc_BE47+1
ROM:BE0B             ; ---------------------------------------------------------------------------
ROM:BE0B
ROM:BE0B             loc_BE0B:
ROM:BE0B F0 39                               BEQ     loc_BE46
ROM:BE0D
ROM:BE0D             loc_BE0D:
ROM:BE0D 4C 00 8E                            JMP     loc_8E00
ROM:BE10             ; ---------------------------------------------------------------------------
ROM:BE10
ROM:BE10             loc_BE10:
ROM:BE10 A0 03                               LDY     #3
ROM:BE12 B1 48                               LDA     (48h),Y
ROM:BE14 48                                  PHA
ROM:BE15 A5 2F                               LDA     2Fh
ROM:BE17 A0 0E                               LDY     #0Eh
ROM:BE19 91 48                               STA     (48h),Y
ROM:BE1B 68                                  PLA
ROM:BE1C F0 08                               BEQ     loc_BE26
ROM:BE1E C5 2F                               CMP     2Fh
ROM:BE20 F0 04                               BEQ     loc_BE26
ROM:BE22 A9 20                               LDA     #20h ; ' '
ROM:BE24 D0 E1                               BNE     loc_BE07
ROM:BE26
ROM:BE26             loc_BE26:
ROM:BE26 A0 05                               LDY     #5
ROM:BE28 B1 48                               LDA     (48h),Y
ROM:BE2A A8                                  TAY
ROM:BE2B B9 B8 BF                            LDA     0BFB8h,Y
ROM:BE2E C5 2D                               CMP     2Dh
ROM:BE30 D0 97                               BNE     loc_BDC9
ROM:BE32 28                                  PLP
ROM:BE33 90 1C                               BCC     loc_BE51
ROM:BE35 20 DC B8                            JSR     sub_B8DC
ROM:BE38 08                                  PHP
ROM:BE39 B0 8E                               BCS     loc_BDC9
ROM:BE3B 28                                  PLP
ROM:BE3C A2 00                               LDX     #0
ROM:BE3E 86 26                               STX     26h
ROM:BE40 20 C2 B8                            JSR     sub_B8C2
ROM:BE43 AE F8 05                            LDX     5F8h
ROM:BE46
ROM:BE46             loc_BE46:
ROM:BE46 18                                  CLC
ROM:BE47
ROM:BE47             loc_BE47:
ROM:BE47 24 38                               BIT     38h
ROM:BE49 A0 0D                               LDY     #0Dh
ROM:BE4B 91 48                               STA     (48h),Y
ROM:BE4D BD 88 C0                            LDA     0C088h,X
ROM:BE50 60                                  RTS
ROM:BE51             ; ---------------------------------------------------------------------------
ROM:BE51
ROM:BE51             loc_BE51:
ROM:BE51 20 2A B8                            JSR     sub_B82A
ROM:BE54 90 F0                               BCC     loc_BE46
ROM:BE56 A9 10                               LDA     #10h
ROM:BE58 B0 EE                               BCS     loc_BE47+1
ROM:BE5A
ROM:BE5A             ; =============== S U B R O U T I N E =======================================
ROM:BE5A
ROM:BE5A
ROM:BE5A             sub_BE5A:
ROM:BE5A 48                                  PHA
ROM:BE5B A0 01                               LDY     #1
ROM:BE5D B1 3C                               LDA     (3Ch),Y
ROM:BE5F 6A                                  ROR     A
ROM:BE60 68                                  PLA
ROM:BE61 90 08                               BCC     sub_BE6B
ROM:BE63 0A                                  ASL     A
ROM:BE64 20 6B BE                            JSR     sub_BE6B
ROM:BE67 4E 78 04                            LSR     478h
ROM:BE6A 60                                  RTS
ROM:BE6A             ; End of function sub_BE5A
ROM:BE6A
ROM:BE6B
ROM:BE6B             ; =============== S U B R O U T I N E =======================================
ROM:BE6B
ROM:BE6B
ROM:BE6B             sub_BE6B:
ROM:BE6B 85 2A                               STA     2Ah
ROM:BE6D 20 8E BE                            JSR     sub_BE8E
ROM:BE70 B9 78 04                            LDA     478h,Y
ROM:BE73 24 35                               BIT     35h
ROM:BE75 30 03                               BMI     loc_BE7A
ROM:BE77 B9 F8 04                            LDA     4F8h,Y
ROM:BE7A
ROM:BE7A             loc_BE7A:
ROM:BE7A 8D 78 04                            STA     478h
ROM:BE7D A5 2A                               LDA     2Ah
ROM:BE7F 24 35                               BIT     35h
ROM:BE81 30 05                               BMI     loc_BE88
ROM:BE83 99 F8 04                            STA     4F8h,Y
ROM:BE86 10 03                               BPL     loc_BE8B
ROM:BE88
ROM:BE88             loc_BE88:
ROM:BE88 99 78 04                            STA     478h,Y
ROM:BE8B
ROM:BE8B             loc_BE8B:
ROM:BE8B 4C A0 B9                            JMP     sub_B9A0
ROM:BE8B             ; End of function sub_BE6B
ROM:BE8B
ROM:BE8E
ROM:BE8E             ; =============== S U B R O U T I N E =======================================
ROM:BE8E
ROM:BE8E
ROM:BE8E             sub_BE8E:
ROM:BE8E 8A                                  TXA
ROM:BE8F 4A                                  LSR     A
ROM:BE90 4A                                  LSR     A
ROM:BE91 4A                                  LSR     A
ROM:BE92 4A                                  LSR     A
ROM:BE93 A8                                  TAY
ROM:BE94 60                                  RTS
ROM:BE94             ; End of function sub_BE8E
ROM:BE94
ROM:BE95
ROM:BE95             ; =============== S U B R O U T I N E =======================================
ROM:BE95
ROM:BE95
ROM:BE95             sub_BE95:
ROM:BE95 48                                  PHA
ROM:BE96 A0 02                               LDY     #2
ROM:BE98 B1 48                               LDA     (48h),Y
ROM:BE9A 6A                                  ROR     A
ROM:BE9B 66 35                               ROR     35h
ROM:BE9D 20 8E BE                            JSR     sub_BE8E
ROM:BEA0 68                                  PLA
ROM:BEA1 0A                                  ASL     A
ROM:BEA2 24 35                               BIT     35h
ROM:BEA4 30 05                               BMI     loc_BEAB
ROM:BEA6 99 F8 04                            STA     4F8h,Y
ROM:BEA9 10 03                               BPL     locret_BEAE
ROM:BEAB
ROM:BEAB             loc_BEAB:
ROM:BEAB 99 78 04                            STA     478h,Y
ROM:BEAE
ROM:BEAE             locret_BEAE:
ROM:BEAE 60                                  RTS
ROM:BEAE             ; End of function sub_BE95
ROM:BEAE
ROM:BEAF             ; ---------------------------------------------------------------------------
ROM:BEAF
ROM:BEAF             loc_BEAF:
ROM:BEAF A0 03                               LDY     #3
ROM:BEB1 B1 48                               LDA     (48h),Y
ROM:BEB3 85 41                               STA     41h
ROM:BEB5 A9 AA                               LDA     #0AAh ; 'ª'
ROM:BEB7 85 3E                               STA     3Eh
ROM:BEB9 A0 56                               LDY     #56h ; 'V'
ROM:BEBB A9 00                               LDA     #0
ROM:BEBD 85 44                               STA     44h
ROM:BEBF 99 FF BB                            STA     0BBFFh,Y
ROM:BEC2 88                                  DEY
ROM:BEC2             ; ---------------------------------------------------------------------------
ROM:BEC3 D0                                  .db 0D0h
ROM:BEC4 FA                                  .db 0FAh
ROM:BEC5             ; ---------------------------------------------------------------------------
ROM:BEC5
ROM:BEC5             loc_BEC5:
ROM:BEC5 99 00 BB                            STA     0BB00h,Y
ROM:BEC8 88                                  DEY
ROM:BEC9 D0 FA                               BNE     loc_BEC5
ROM:BECB A9 00                               LDA     #0
ROM:BECD 20 95 BE                            JSR     sub_BE95
ROM:BED0 A9 28                               LDA     #28h ; '('
ROM:BED2 85 45                               STA     45h
ROM:BED4
ROM:BED4             loc_BED4:
ROM:BED4 A5 44                               LDA     44h
ROM:BED6 20 5A BE                            JSR     sub_BE5A
ROM:BED9 20 0D BF                            JSR     sub_BF0D
ROM:BEDC A9 08                               LDA     #8
ROM:BEDE B0 24                               BCS     loc_BF04
ROM:BEE0 A9 30                               LDA     #30h ; '0'
ROM:BEE2 8D 78 05                            STA     578h
ROM:BEE5
ROM:BEE5             loc_BEE5:
ROM:BEE5 38                                  SEC
ROM:BEE6 CE 78 05                            DEC     578h
ROM:BEE9 F0 19                               BEQ     loc_BF04
ROM:BEEB 20 44 B9                            JSR     sub_B944
ROM:BEEE B0 F5                               BCS     loc_BEE5
ROM:BEF0 A5 2D                               LDA     2Dh
ROM:BEF2 D0 F1                               BNE     loc_BEE5
ROM:BEF4 20 DC B8                            JSR     sub_B8DC
ROM:BEF7 B0 EC                               BCS     loc_BEE5
ROM:BEF9 E6 44                               INC     44h
ROM:BEFB A5 44                               LDA     44h
ROM:BEFD C9 23                               CMP     #23h ; '#'
ROM:BEFF 90 D3                               BCC     loc_BED4
ROM:BF01 18                                  CLC
ROM:BF02 90 05                               BCC     loc_BF09
ROM:BF04
ROM:BF04             loc_BF04:
ROM:BF04 A0 0D                               LDY     #0Dh
ROM:BF06 91 48                               STA     (48h),Y
ROM:BF08 38                                  SEC
ROM:BF09
ROM:BF09             loc_BF09:
ROM:BF09 BD 88 C0                            LDA     0C088h,X
ROM:BF0C 60                                  RTS
ROM:BF0D
ROM:BF0D             ; =============== S U B R O U T I N E =======================================
ROM:BF0D
ROM:BF0D
ROM:BF0D             sub_BF0D:
ROM:BF0D
ROM:BF0D             ; FUNCTION CHUNK AT ROM:BF88 SIZE 00000020 BYTES
ROM:BF0D
ROM:BF0D A9 00                               LDA     #0
ROM:BF0F 85 3F                               STA     3Fh
ROM:BF11 A0 80                               LDY     #80h ; ''
ROM:BF13 D0 02                               BNE     loc_BF17
ROM:BF15
ROM:BF15             loc_BF15:
ROM:BF15 A4 45                               LDY     45h
ROM:BF17
ROM:BF17             loc_BF17:
ROM:BF17 20 56 BC                            JSR     sub_BC56
ROM:BF1A B0 6B                               BCS     nullsub_2
ROM:BF1C 20 2A B8                            JSR     sub_B82A
ROM:BF1F B0 66                               BCS     nullsub_2
ROM:BF21 E6 3F                               INC     3Fh
ROM:BF23 A5 3F                               LDA     3Fh
ROM:BF25 C9 10                               CMP     #10h
ROM:BF27 90 EC                               BCC     loc_BF15
ROM:BF29 A0 0F                               LDY     #0Fh
ROM:BF2B 84 3F                               STY     3Fh
ROM:BF2D A9 30                               LDA     #30h ; '0'
ROM:BF2F 8D 78 05                            STA     578h
ROM:BF32
ROM:BF32             loc_BF32:
ROM:BF32 99 A8 BF                            STA     0BFA8h,Y
ROM:BF35 88                                  DEY
ROM:BF36 10 FA                               BPL     loc_BF32
ROM:BF38 A4 45                               LDY     45h
ROM:BF3A
ROM:BF3A             loc_BF3A:
ROM:BF3A 20 87 BF                            JSR     nullsub_2
ROM:BF3D 20 87 BF                            JSR     nullsub_2
ROM:BF40 20 87 BF                            JSR     nullsub_2
ROM:BF43 48                                  PHA
ROM:BF44 68                                  PLA
ROM:BF45 EA                                  NOP
ROM:BF46 88                                  DEY
ROM:BF47 D0 F1                               BNE     loc_BF3A
ROM:BF49 20 44 B9                            JSR     sub_B944
ROM:BF4C B0 23                               BCS     loc_BF71
ROM:BF4E A5 2D                               LDA     2Dh
ROM:BF50 F0 15                               BEQ     loc_BF67
ROM:BF52 A9 10                               LDA     #10h
ROM:BF54 C5 45                               CMP     45h
ROM:BF56 A5 45                               LDA     45h
ROM:BF58 E9 01                               SBC     #1
ROM:BF5A 85 45                               STA     45h
ROM:BF5C C9 05                               CMP     #5
ROM:BF5E B0 11                               BCS     loc_BF71
ROM:BF60 38                                  SEC
ROM:BF61 60                                  RTS
ROM:BF62             ; ---------------------------------------------------------------------------
ROM:BF62
ROM:BF62             loc_BF62:
ROM:BF62 20 44 B9                            JSR     sub_B944
ROM:BF65 B0 05                               BCS     loc_BF6C
ROM:BF67
ROM:BF67             loc_BF67:
ROM:BF67 20 DC B8                            JSR     sub_B8DC
ROM:BF6A 90 1C                               BCC     loc_BF88
ROM:BF6C
ROM:BF6C             loc_BF6C:
ROM:BF6C CE 78 05                            DEC     578h
ROM:BF6F D0 F1                               BNE     loc_BF62
ROM:BF71
ROM:BF71             loc_BF71:
ROM:BF71 20 44 B9                            JSR     sub_B944
ROM:BF74 B0 0B                               BCS     loc_BF81
ROM:BF76 A5 2D                               LDA     2Dh
ROM:BF78 C9 0F                               CMP     #0Fh
ROM:BF7A D0 05                               BNE     loc_BF81
ROM:BF7C 20 DC B8                            JSR     sub_B8DC
ROM:BF7F 90 8C                               BCC     sub_BF0D
ROM:BF81
ROM:BF81             loc_BF81:
ROM:BF81 CE 78 05                            DEC     578h
ROM:BF84 D0 EB                               BNE     loc_BF71
ROM:BF86 38                                  SEC
ROM:BF86             ; End of function sub_BF0D
ROM:BF86
ROM:BF87             ; [00000001 BYTES: COLLAPSED FUNCTION nullsub_2. PRESS CTRL-NUMPAD+ TO EXPAND]
ROM:BF88             ; ---------------------------------------------------------------------------
ROM:BF88             ; START OF FUNCTION CHUNK FOR sub_BF0D
ROM:BF88
ROM:BF88             loc_BF88:
ROM:BF88 A4 2D                               LDY     2Dh
ROM:BF8A B9 A8 BF                            LDA     0BFA8h,Y
ROM:BF8D 30 DD                               BMI     loc_BF6C
ROM:BF8F A9 FF                               LDA     #0FFh
ROM:BF91 99 A8 BF                            STA     0BFA8h,Y
ROM:BF94 C6 3F                               DEC     3Fh
ROM:BF96 10 CA                               BPL     loc_BF62
ROM:BF98 A5 44                               LDA     44h
ROM:BF9A D0 0A                               BNE     loc_BFA6
ROM:BF9C A5 45                               LDA     45h
ROM:BF9E C9 10                               CMP     #10h
ROM:BFA0 90 E5                               BCC     nullsub_2
ROM:BFA2 C6 45                               DEC     45h
ROM:BFA4 C6 45                               DEC     45h
ROM:BFA6
ROM:BFA6             loc_BFA6:
ROM:BFA6 18                                  CLC
ROM:BFA7 60                                  RTS
ROM:BFA7             ; END OF FUNCTION CHUNK FOR sub_BF0D
ROM:BFA7             ; ---------------------------------------------------------------------------
ROM:BFA8 FF                                  .db 0FFh
ROM:BFA9 FF                                  .db 0FFh
ROM:BFAA FF                                  .db 0FFh
ROM:BFAB FF                                  .db 0FFh
ROM:BFAC FF                                  .db 0FFh
ROM:BFAD FF                                  .db 0FFh
ROM:BFAE FF                                  .db 0FFh
ROM:BFAF FF                                  .db 0FFh
ROM:BFB0 FF                                  .db 0FFh
ROM:BFB1 FF                                  .db 0FFh
ROM:BFB2 FF                                  .db 0FFh
ROM:BFB3 FF                                  .db 0FFh
ROM:BFB4 FF                                  .db 0FFh
ROM:BFB5 FF                                  .db 0FFh
ROM:BFB6 FF                                  .db 0FFh
ROM:BFB7 FF                                  .db 0FFh
ROM:BFB8             ; ---------------------------------------------------------------------------
ROM:BFB8 00                                  BRK
ROM:BFB8             ; ---------------------------------------------------------------------------
ROM:BFB9 0D 0B 09 07+                        .db 0Dh, 0Bh, 9, 7, 5, 3, 1, 0Eh, 0Ch, 0Ah, 8, 6, 4, 2, 0Fh
ROM:BFB9 05 03 01 0E+                        .db 20h, 0DCh, 0ABh, 0A9h, 10h, 8Dh, 0F0h, 0B3h, 0A9h, 23h
ROM:BFB9 0C 0A 08 06+                        .db 8Dh, 0EFh, 0B3h, 60h, 4Ch, 44h, 0B7h, 0, 0, 0, 8Dh, 63h
ROM:BFB9 04 02 0F 20+                        .db 0AAh, 8Dh, 70h, 0AAh, 8Dh, 71h, 0AAh, 60h, 20h, 5Bh
ROM:BFB9 DC AB A9 10+                        .db 0A7h, 8Ch, 0B7h, 0AAh, 60h, 20h, 7Eh, 0AEh, 0AEh, 9Bh
ROM:BFB9 8D F0 B3 A9+                        .db 0B3h, 9Ah, 20h, 16h, 0A3h, 0BAh, 8Eh, 9Bh, 0B3h, 0A9h
ROM:BFB9 23 8D EF B3+                        .db 9, 4Ch, 85h, 0B3h
ROM:BFB9 60 4C 44 B7+; end of 'ROM'
ROM:BFB9 00 00 00 8D+
ROM:BFB9 63 AA 8D 70+
ROM:BFB9 AA 8D 71 AA+                        .end
